# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jusong Yu <jusong.yeu@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-23 19:17+0000\n"
"PO-Revision-Date: 2023-12-21 01:39+0000\n"
"Last-Translator: Jusong Yu <jusong.yeu@gmail.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/intro/about.rst:5
msgid "What is AiiDA"
msgstr "什么是 AiiDA"

#: ../../source/intro/about.rst:7
msgid ""
"AiiDA is an open-source Python infrastructure to help researchers with "
"automating, managing, persisting, sharing and reproducing the complex "
"workflows associated with modern computational science and all associated "
"data."
msgstr "AiiDA 是一个开源 Python 基础架构，可帮助研究人员自动化、系统化、持久化、共享和复制与现代计算科学和相关数据有关的复杂工作流。"

#: ../../source/intro/about.rst:9
msgid ""
"AiiDA is built to support and streamline the four core pillars of the ADES "
"model: Automation, Data, Environment, and Sharing (described `here "
"<https://arxiv.org/abs/1504.01163>`__). Some of the key features of AiiDA "
"include:"
msgstr ""
"AiiDA的建立是为了支持和简化ADES模型的四大核心支柱：自动化 (A)、数据 (D)、环境 (E)和共享 (S)（详细描述请参考 `这篇文献 "
"<https://arxiv.org/abs/1504.01163>`__）。AiiDA的一些主要功能包括"

#: ../../source/intro/about.rst:11
msgid ""
"**Workflows:** AiiDA allows to build and execute complex, auto-documenting "
"workflows linked to multiple codes on local and remote computers."
msgstr "**工作流：** AiiDA 允许在本地和远程计算机上建立和执行与多个计算代码相关联的、复杂的、文档自动化的工作流程。"

#: ../../source/intro/about.rst:12
msgid ""
"**High-throughput:** AiiDA's event-based workflow engine supports tens of "
"thousands of processes per hour with full check-pointing."
msgstr "**高通量：** AiiDA基于事件的工作流引擎支持每小时数以万计的计算进程，并具有完全的记录检查点功能。"

#: ../../source/intro/about.rst:13
msgid ""
"**Data provenance:** AiiDA automatically tracks and records inputs, outputs "
"and metadata of all calculations and workflows in extensive provenance "
"graphs that preserve the full lineage of all data."
msgstr ""
"**数据可验证：** AiiDA自动跟踪和记录所有计算和工作流程的输入、输出和元数据，并在provenance  "
"graphs中保留所有数据的完整创建流程。"

#: ../../source/intro/about.rst:14
msgid ""
"**Advanced queries:** AiiDA's query language enables fast graph queries on "
"millions of nodes."
msgstr "**高级查询：** AiiDA的查询语言可对数百万node进行快速图形查询。"

#: ../../source/intro/about.rst:15
msgid ""
"**Plugin interface:** AiiDA can support via plugins any computational code "
"and data analytics tool, data type, scheduler, connection mode, etc. (see "
"`public plugin repository <https://aiidateam.github.io/aiida-registry/>`__)."
msgstr ""
"**插件接口：** AiiDA 可以通过插件支持任何计算代码和数据分析工具、数据类型、调度程序、连接模式等（参见  `插件列表 "
"<https://aiidateam.github.io/aiida-registry/>`__）。"

#: ../../source/intro/about.rst:16
msgid ""
"**HPC interface:** AiiDA can seamlessly deal with heterogeneous and remote "
"computing resources; it works with many schedulers out of the box (`SLURM "
"<https://slurm.schedmd.com>`__, `PBS Pro <https://www.pbspro.org/>`__, "
"`torque <http://www.adaptivecomputing.com/products/torque/>`__, `SGE "
"<http://gridscheduler.sourceforge.net/>`__ or `LSF "
"<https://www.ibm.com/docs/en/spectrum-lsf>`__)."
msgstr ""
"**HPC接口：** AiiDA可无缝处理异构和远程计算资源；实现与许多任务调度系统（`SLURM "
"<https://slurm.schedmd.com>`__、`PBS Pro <https://www.pbspro.org/>`__、`torque"
" <http://www.adaptivecomputing.com/products/torque/>`__、`SGE "
"<http://gridscheduler.sourceforge.net/>`__或`LSF "
"<https://www.ibm.com/docs/en/spectrum-lsf>`__）协同工作。"

#: ../../source/intro/about.rst:17
msgid ""
"**Open science:** AiiDA allows to export both full databases and selected "
"subsets, to be shared with collaborators or made available and browsable "
"online on the `Archive <https://archive.materialscloud.org/>`__ and `Explore"
" <https://www.materialscloud.org/explore>`__ sections of `Materials Cloud "
"<https://www.materialscloud.org>`__."
msgstr ""
"**开放科学：** AiiDA 允许导出完整的数据库或选定的子集，与合作者共享，并可以在 `Materials Cloud "
"<https://www.materialscloud.org>`__ 的 `Archive "
"<https://archive.materialscloud.org/>`__ 和 `Explore "
"<https://www.materialscloud.org/explore>`__ 部分在线分享和浏览。"

#: ../../source/intro/about.rst:18
msgid ""
"**Open source:** AiiDA is released under the `MIT open-source license "
"<https://github.com/aiidateam/aiida-core/blob/main/LICENSE.txt>`__."
msgstr ""
"**开放源代码：** AiiDA 在 `MIT 开源协议 <https://github.com/aiidateam/aiida-"
"core/blob/main/LICENSE.txt>`__ 下发布。"

#: ../../source/intro/about.rst:20
msgid ""
"See also the `list of AiiDA-powered scientific publications "
"<http://www.aiida.net/science/>`__ and `testimonials from AiiDA users "
"<http://www.aiida.net/testimonials/>`__."
msgstr ""
"另请参见 `使用AiiDA的研究文献列表 <http://www.aiida.net/science/>`__ 和 `来自AiiDA 用户的声音 "
"<http://www.aiida.net/testimonials/>`__。"

#: ../../source/intro/get_started.rst:5
msgid "Getting started"
msgstr "开始"

#: ../../source/intro/get_started.rst:7
msgid ""
"An AiiDA installation consists of three core components (plus any external "
"codes you wish to run):"
msgstr "AiiDA 的安装包括三个核心组件（加上你想运行的任何外部代码）："

#: ../../source/intro/get_started.rst:9
msgid ""
"|aiida-core|: The main Python package and the associated ``verdi`` command "
"line interface"
msgstr "|aiida-core|：主 Python 软件包和相关的 ``verdi`` 命令行界面"

#: ../../source/intro/get_started.rst:10
msgid ""
"|PostgreSQL|: The service that manages the database that AiiDA uses to store"
" data."
msgstr "|PostgreSQL|：管理 AiiDA 用来存储数据的数据库的服务。"

#: ../../source/intro/get_started.rst:11
msgid "|RabbitMQ|: The message broker used for communication within AiiDA."
msgstr "|RabbitMQ|：用于 AiiDA 内部通信的消息代理。"

#: ../../source/intro/get_started.rst:25
msgid "Setup"
msgstr "设置"

#: ../../source/intro/get_started.rst:27
msgid ""
"There are multiple routes to setting up a working AiiDA environment. Which "
"of those is optimal depends on your environment and use case. If you are "
"unsure, use the :ref:`system-wide installation <intro:get_started:system-"
"wide-install>` method."
msgstr ""
"有多种途径可以建立一个有效的 AiiDA 环境。哪一种是最佳的取决于你的环境和使用情况。如果你不确定，请使用 :ref:`system-wide "
"installation <intro:get_started:system-wide-install>` 方法。"

#: ../../source/intro/get_started.rst:34
#: ../../source/intro/install_system.rst:5
msgid "System-wide installation"
msgstr "System-wide 安装"

#: ../../source/intro/get_started.rst:36
msgid "Install all software directly on your workstation or laptop."
msgstr "Install all software directly on your workstation or laptop."

#: ../../source/intro/get_started.rst:43
msgid ""
"Install the prerequisite services using standard package managers (apt, "
"homebrew, etc.) with administrative privileges."
msgstr "使用具有管理权限的标准软件包管理器（apt、homebrew 等）安装前提服务。"

#: ../../source/intro/get_started.rst:45
#: ../../source/intro/install_conda.rst:5
msgid "Installation into Conda environment"
msgstr "安装到 Conda 环境"

#: ../../source/intro/get_started.rst:47
msgid "Install all software into an isolated conda environment."
msgstr "Install all software into an isolated conda environment."

#: ../../source/intro/get_started.rst:54
msgid ""
"This method does not require administrative privileges, but involves manual "
"management of start-up and shut-down of services."
msgstr "这种方法不需要管理权限，但需要手动管理服务的 start-up 和 shut-down。"

#: ../../source/intro/get_started.rst:56
msgid "Run via docker container"
msgstr "通过 docker 容器运行"

#: ../../source/intro/get_started.rst:58
msgid "Run AiiDA and prerequisite services as a single docker container."
msgstr "Run AiiDA and prerequisite services as a single docker container."

#: ../../source/intro/get_started.rst:65
msgid ""
"Does not require the separate installation of prerequisite services. "
"Especially well-suited to get directly started on the **tutorials**."
msgstr "无需单独安装先决服务。特别适合直接开始 **教程** 。"

#: ../../source/intro/get_started.rst:68
msgid "Run via virtual machine"
msgstr "通过虚拟机运行"

#: ../../source/intro/get_started.rst:70
msgid "Use a virtual machine with all the required software pre-installed."
msgstr "Use a virtual machine with all the required software pre-installed."

#: ../../source/intro/get_started.rst:76
msgid ""
"`Materials Cloud <https://www.materialscloud.org>`__ provides both "
"downloadable and web based VMs, also incorporating pre-installed Materials "
"Science codes."
msgstr ""
"`Materials Cloud <https://www.materialscloud.org>`__ 提供可下载和基于网络的虚拟机，还包含 pre-"
"installed 材料科学代码。"

#: ../../source/intro/get_started.rst:82
#: ../../source/intro/install_conda.rst:126
#: ../../source/intro/install_system.rst:291
#: ../../source/intro/run_docker.rst:97
msgid "What's next?"
msgstr "What's next?"

#: ../../source/intro/get_started.rst:84
msgid ""
"After successfully completing one of the above outlined setup routes, if you"
" are new to AiiDA, we recommed you go through the :ref:`Basic Tutorial "
"<tutorial:basic>`, or see our :ref:`Next steps guide <tutorial:next-steps>`."
msgstr ""
"成功完成上述设置路线后，如果你是 AiiDA 的新手，我们建议你通过 :ref:`Basic Tutorial <tutorial:basic>` "
"或查看我们的 :ref:`Next steps guide <tutorial:next-steps>`。"

#: ../../source/intro/get_started.rst:87
msgid ""
"If however, you encountered some issues, proceed to the "
":ref:`troubleshooting section <intro:troubleshooting>`."
msgstr "但如果遇到一些问题，请转到 :ref:`troubleshooting section <intro:troubleshooting>`。"

#: ../../source/intro/get_started.rst:89
msgid "In-depth instructions"
msgstr "深入说明"

#: ../../source/intro/get_started.rst:92
msgid ""
"For more detailed instructions on configuring AiiDA, :ref:`see the "
"configuration how-to <how-to:installation:configure>`."
msgstr ""
"有关配置 AiiDA 的更详细说明，请参见 :ref:`see the configuration how-to <how-"
"to:installation:configure>`。"

#: ../../source/intro/index.rst:3
msgid "Introduction"
msgstr "导言"

#: ../../source/intro/install_conda.rst:7
msgid ""
"This installation route installs all necessary software -- including the "
"prerequisite services PostgreSQL and RabbitMQ -- into a Conda environment. "
"This is the recommended method for users on shared systems and systems where"
" the user has no administrative privileges. If you want to install AiiDA "
"onto you own personal workstation/laptop, it is recommanded to use the "
":ref:`system-wide installation <intro:get_started:system-wide-install>`."
msgstr ""
"此安装路径将所有必要的软件（包括先决服务 PostgreSQL 和 RabbitMQ）安装到 Conda "
"环境中。对于共享系统和用户没有管理权限的系统，推荐使用这种方法。如果你想将 AiiDA 安装到自己的个人工作站/笔记本电脑，建议使用 "
":ref:`system-wide installation <intro:get_started:system-wide-install>`。"

#: ../../source/intro/install_conda.rst:13
msgid ""
"This installation method installs **all** software into a conda environment,"
" including PostgreSQL and RabbitMQ. See the :ref:`system-wide installation "
"<intro:get_started:system-wide-install>` to use Conda only to install the "
"AiiDA (core) Python package."
msgstr ""
"此安装方法将 **所有** 软件安装到 Conda 环境中，包括 PostgreSQL 和 RabbitMQ。请参阅 :ref:`system-wide"
" installation <intro:get_started:system-wide-install>`，仅使用 Conda 安装 "
"AiiDA（核心）Python 软件包。"

#: ../../source/intro/install_conda.rst:19
msgid "Install prerequisite services + AiiDA (core)"
msgstr "安装前提服务 + AiiDA（核心）"

#: ../../source/intro/install_conda.rst:21
msgid ""
"*Install the aiida-core package and all required services in a Conda "
"environment.*"
msgstr "*在 Conda 环境中安装 aiida-core 软件包和所有必需的服务。*"

#: ../../source/intro/install_conda.rst:23
msgid ""
"We strongly recommend using ``mamba`` instead of the default ``conda`` (or "
"environment resolution may time out). Consider using `Mambaforge "
"<https://github.com/conda-forge/miniforge#mambaforge>`_ when starting from "
"scratch, or ``conda install -c conda-forge mamba``."
msgstr ""
"我们强烈建议使用 ``mamba`` ，而不是默认的 ``conda`` （否则环境解析可能会超时）。从零开始配置时，可考虑使用 `Mambaforge"
" <https://github.com/conda-forge/miniforge#mambaforge>`_ 或 ``conda install "
"-c conda-forge mamba`` 。"

#: ../../source/intro/install_conda.rst:26
#: ../../source/intro/install_system.rst:27
#: ../../source/intro/install_system.rst:39
#: ../../source/intro/install_system.rst:156
#: ../../source/intro/install_system.rst:213
#: ../../source/intro/install_system.rst:224
msgid "Open a terminal and execute:"
msgstr "打开终端并执行"

#: ../../source/intro/install_conda.rst:33
msgid "Start-up services and initialize data storage"
msgstr "启动服务并初始化数据存储"

#: ../../source/intro/install_conda.rst:35
msgid ""
"Before working with AiiDA, you must first initialize a database storage area"
" on disk."
msgstr "在使用 AiiDA 之前，必须先在磁盘上初始化数据库存储区。"

#: ../../source/intro/install_conda.rst:41
msgid ""
"This *database cluster* (located inside a folder named ``mylocal_db``) may "
"contain a collection of databases (one per profile) that is managed by a "
"single running server process. We start this process with:"
msgstr ""
"这个 *数据库集群* （位于名为 ``mylocal_db`` "
"的文件夹内）可能包含一组数据库（每个配置文件一个），由一个运行中的服务器进程管理。我们用以下命令启动该进程"

#: ../../source/intro/install_conda.rst:48
msgid "Further Reading"
msgstr "更多阅读"

#: ../../source/intro/install_conda.rst:51
#: ../../source/intro/installation.rst:25
msgid ""
"`Creating a Database Cluster <https://www.postgresql.org/docs/12/creating-"
"cluster.html>`__."
msgstr ""
"`Creating a Database Cluster <https://www.postgresql.org/docs/12/creating-"
"cluster.html>`__."

#: ../../source/intro/install_conda.rst:52
#: ../../source/intro/installation.rst:26
msgid ""
"`Starting the Database Server <https://www.postgresql.org/docs/12/server-"
"start.html>`__."
msgstr ""
"`Starting the Database Server <https://www.postgresql.org/docs/12/server-"
"start.html>`__."

#: ../../source/intro/install_conda.rst:56
msgid "Then, start the RabbitMQ server:"
msgstr "然后，启动 RabbitMQ 服务器："

#: ../../source/intro/install_conda.rst:64
msgid ""
"The services started this way will use the default ports on the machine. "
"Conflicts may happen if there are more than one user running AiiDA this way "
"on the same machine, or you already have the server running in a system-wide"
" installation. To get around this issue, you can explicitly define the ports"
" to be used."
msgstr ""
"这样启动的服务将使用机器上的默认端口。如果有多个用户在同一台机器上以这种方式运行 "
"AiiDA，或者你已经在系统范围内安装了服务器，可能会发生冲突。为了解决这个问题，你可以明确定义要使用的端口。"

#: ../../source/intro/install_conda.rst:68
#: ../../source/intro/install_system.rst:234
msgid "Setup profile"
msgstr "设置配置文件"

#: ../../source/intro/install_conda.rst:70
#: ../../source/intro/install_system.rst:236
msgid ""
"Next, set up an AiiDA configuration profile and related data storage, with "
"the ``verdi quicksetup`` command."
msgstr "接下来，使用 ``verdi quicksetup`` 命令设置 AiiDA 配置文件和相关数据存储。"

#: ../../source/intro/install_conda.rst:85
msgid ""
"In case of non-default ports are used for the *database cluster* and the "
"RabbitMQ server, you can pass them using ``--db-port`` and ``--broker-port``"
" options respectively."
msgstr ""
"如果 *数据库群集* 和 RabbitMQ 服务器使用了非默认端口，可分别使用 ``--db-port`` 和 ``--broker-port`` "
"选项传递它们。"

#: ../../source/intro/install_conda.rst:88
#: ../../source/intro/install_system.rst:249
msgid "Is AiiDA unable to auto-detect the PostgreSQL setup?"
msgstr "AiiDA 是否无法自动检测 PostgreSQL 设置？"

#: ../../source/intro/install_conda.rst:91
#: ../../source/intro/install_system.rst:252
msgid ""
"If you get an error saying that AiiDA has trouble autodetecting the "
"PostgreSQL setup, you will need to do the manual setup explained in the "
":ref:`troubleshooting section<intro:troubleshooting:installation:postgresql-"
"autodetect-issues>`."
msgstr ""
"如果出现 AiiDA 无法自动检测 PostgreSQL 设置的错误，则需要执行 :ref:`troubleshooting "
"section<intro:troubleshooting:installation:postgresql-autodetect-issues>` "
"中解释的手动设置。"

#: ../../source/intro/install_conda.rst:93
msgid "Once the profile is up and running, you can start the AiiDA daemon(s):"
msgstr "一旦配置文件启动并运行，就可以启动 AiiDA 守护进程："

#: ../../source/intro/install_conda.rst:101
#: ../../source/intro/install_system.rst:264
msgid "The verdi daemon(s) must be restarted after a system reboot."
msgstr "系统重启后必须重新启动 verdi 守护进程。"

#: ../../source/intro/install_conda.rst:105
#: ../../source/intro/install_system.rst:268
msgid ""
"Do not start more daemons then there are physical processors on your system."
msgstr "不要启动超过系统物理处理器数量的守护进程。"

#: ../../source/intro/install_conda.rst:107
#: ../../source/intro/install_system.rst:270
#: ../../source/intro/run_docker.rst:36
msgid "Check setup"
msgstr "检查设置"

#: ../../source/intro/install_conda.rst:109
#: ../../source/intro/install_system.rst:272
msgid "To check that everything is set up correctly, execute:"
msgstr "要检查一切设置是否正确，请执行"

#: ../../source/intro/install_conda.rst:121
msgid "Missing a checkmark or ecountered some other issue?"
msgstr "缺少一个复选标记或遇到其他问题？"

#: ../../source/intro/install_conda.rst:124
#: ../../source/intro/install_system.rst:289
msgid ":ref:`See the troubleshooting section <intro:troubleshooting>`."
msgstr " :ref:`See the troubleshooting section <intro:troubleshooting>`。"

#: ../../source/intro/install_conda.rst:135
msgid "Shut-down services"
msgstr "关闭服务"

#: ../../source/intro/install_conda.rst:137
msgid ""
"After finishing with your aiida session, particularly if switching between "
"profiles, you may wish to power down the daemon and the services:"
msgstr "完成 aiida 会话后，尤其是在不同配置文件之间切换时，不妨关闭守护进程和服务："

#: ../../source/intro/install_conda.rst:145
msgid "Restart the services"
msgstr "重新启动服务"

#: ../../source/intro/install_conda.rst:147
msgid "If you want to restart the services and the daemon:"
msgstr "如果要重新启动服务和守护进程："

#: ../../source/intro/install_conda.rst:157
msgid "If different ports are used, you have to pass them here as well."
msgstr "如果使用不同的端口，也必须在此处传递。"

#: ../../source/intro/install_system.rst:7
msgid ""
"The system-wide installation will install the prerequisite services "
"(PostgreSQL and RabbitMQ) via standard package managers such that their "
"startup and shut-down is largely managed by the operating system. The AiiDA "
"(core) Python package is then installed either with Conda or pip."
msgstr ""
"全系统安装将通过标准软件包管理器安装先决服务（PostgreSQL 和 RabbitMQ），它们的启动和关闭主要由操作系统管理。然后通过 Conda 或"
" pip 安装 AiiDA（核心）Python 软件包。"

#: ../../source/intro/install_system.rst:10
msgid ""
"RabbitMQ v3.5 and below are EOL and not supported at all. For versions "
"RabbitMQ v3.8.15 and up, AiiDA is not compatible with default server "
"configurations. For details refer to the :ref:`dedicated troubleshooting "
"section<intro:troubleshooting:installation:rabbitmq>`."
msgstr ""
"RabbitMQ v3.5 及以下版本已经过时，完全不支持。对于 RabbitMQ v3.8.15 及以上版本，AiiDA "
"与默认服务器配置不兼容。详情请参阅 :ref:`dedicated troubleshooting "
"section<intro:troubleshooting:installation:rabbitmq>`。"

#: ../../source/intro/install_system.rst:12
msgid ""
"This is the *recommended* installation method to setup AiiDA on a personal "
"laptop or workstation for the majority of users."
msgstr "对于大多数用户来说，这是 *推荐* 的在个人笔记本电脑或工作站上安装 AiiDA 的方法。"

#: ../../source/intro/install_system.rst:17
msgid "Install prerequisite services"
msgstr "安装先决服务"

#: ../../source/intro/install_system.rst:19
msgid ""
"AiiDA is designed to run on `Unix <https://en.wikipedia.org/wiki/Unix>`_ "
"operating systems and requires a `bash "
"<https://en.wikipedia.org/wiki/Bash_(Unix_shell)>`_ or `zsh "
"<https://en.wikipedia.org/wiki/Z_shell>`_ shell, and Python >= 3.7."
msgstr ""
"AiiDA 设计在 `Unix <https://en.wikipedia.org/wiki/Unix>`_ 操作系统上运行，需要 `bash "
"<https://en.wikipedia.org/wiki/Bash_(Unix_shell)>`_ 或 `zsh "
"<https://en.wikipedia.org/wiki/Z_shell>`_ shell 和 Python >= 3.7。"

#: ../../source/intro/install_system.rst:0
msgid "Ubuntu"
msgstr "乌班图"

#: ../../source/intro/install_system.rst:25
msgid "*AiiDA is tested on Ubuntu versions 16.04, 18.04, and 20.04.*"
msgstr "*AiiDA在Ubuntu 16.04、18.04和20.04版本上进行了测试。*"

#: ../../source/intro/install_system.rst:0
msgid "MacOS X (Homebrew)"
msgstr "MacOS X（自制软件）"

#: ../../source/intro/install_system.rst:35
msgid ""
"The recommended installation method for Mac OS X is to use `Homebrew "
"<https://brew.sh>`__."
msgstr "Mac OS X 的推荐安装方法是使用 `Homebrew <https://brew.sh>`__。"

#: ../../source/intro/install_system.rst:37
msgid ""
"Follow `this guide <https://docs.brew.sh/Installation>`__ to install "
"Homebrew on your system if not installed yet."
msgstr ""
"如果尚未安装 Homebrew，请按照 `this guide <https://docs.brew.sh/Installation>`__ "
"在系统上安装。"

#: ../../source/intro/install_system.rst:0
msgid "Windows Subsystem for Linux"
msgstr "Windows Linux 子系统"

#: ../../source/intro/install_system.rst:49
msgid ""
"*The following instructions are for setting up AiiDA on WSL 1/2 in "
"combination with Ubuntu.*"
msgstr "*以下是在 WSL 1/2 上结合 Ubuntu 设置 AiiDA 的说明。*"

#: ../../source/intro/install_system.rst:51
msgid "Installing RabbitMQ:"
msgstr "安装 RabbitMQ："

#: ../../source/intro/install_system.rst:53
msgid ""
"(WSL 1) Install and start the `Windows native RabbitMQ "
"<https://www.rabbitmq.com/install-windows.html>`_."
msgstr ""
"(WSL 1）安装并启动 `Windows native RabbitMQ <https://www.rabbitmq.com/install-"
"windows.html>`_。"

#: ../../source/intro/install_system.rst:55
msgid "(WSL 2) Install RabbitMQ inside the the WSL:"
msgstr "(WSL 2）在 WSL 内安装 RabbitMQ："

#: ../../source/intro/install_system.rst:61
msgid "then start the ``rabbitmq`` server:"
msgstr "然后启动 ``rabbitmq`` 服务器："

#: ../../source/intro/install_system.rst:67
msgid "Install Python and PostgreSQL:"
msgstr "安装 Python 和 PostgreSQL："

#: ../../source/intro/install_system.rst:73
msgid "then start the PostgreSQL server:"
msgstr "然后启动 PostgreSQL 服务器："

#: ../../source/intro/install_system.rst:0
msgid "How to setup WSL to automatically start services after system boot."
msgstr "如何设置 WSL 在系统启动后自动启动服务。"

#: ../../source/intro/install_system.rst:81
msgid ""
"Create a file ``start_aiida_services.sh`` containing the following lines:"
msgstr "创建一个 ``start_aiida_services.sh`` 文件，其中包含以下行："

#: ../../source/intro/install_system.rst:88
msgid ""
"and store it in your preferred location, e.g., the home directory. Then make"
" the file executable, and editable only by root users with:"
msgstr "并将其存储在你喜欢的位置，如主目录。然后将该文件设为可执行文件，并且只能由 root 用户编辑："

#: ../../source/intro/install_system.rst:96
msgid "Next, run"
msgstr "接下来，运行"

#: ../../source/intro/install_system.rst:102
msgid "and add the line"
msgstr "并添加一行"

#: ../../source/intro/install_system.rst:108
msgid ""
"replacing ``<username>`` with your Ubuntu username. This will allow you to "
"run *only* this specific ``.sh`` file with ``root`` access (without "
"password), without lowering security on the rest of your system."
msgstr ""
"将 ``<username>`` 替换为您的 Ubuntu 用户名。这样，您就可以使用 ``root`` 访问权限（无需密码）只运行*这个特定的 "
"``.sh`` 文件，而不会降低系统其他部分的安全性。"

#: ../../source/intro/install_system.rst:111
msgid ""
"Now you can use the Windows Task Scheduler to automatically execute this "
"file on startup:"
msgstr "现在，您可以使用 Windows 任务计划程序在启动时自动执行该文件："

#: ../../source/intro/install_system.rst:113
msgid "Open Task Scheduler."
msgstr "打开任务计划程序。"

#: ../../source/intro/install_system.rst:115
msgid "In the \"Actions\" menu, click \"Create Task\"."
msgstr "在 \"Actions\" 菜单中，单击 \"Create Task\"。"

#: ../../source/intro/install_system.rst:117
msgid ""
"In \"General/Security options\", select \"Run whether user is logged on or "
"not\"."
msgstr "在 \"General/Security options\" 中，选择 \"Run whether user is logged on or not\"。"

#: ../../source/intro/install_system.rst:119
msgid "In the \"Triggers\" tab, click \"New...\"."
msgstr "在 \"Triggers\" 选项卡中，单击 \"New...\"。"

#: ../../source/intro/install_system.rst:121
msgid "In the \"Begin the task:\" dropdown, select \"At startup\"."
msgstr "在 \"Begin the task:\" 下拉菜单中，选择 \"At startup\"。"

#: ../../source/intro/install_system.rst:123
#: ../../source/intro/install_system.rst:133
msgid "Click \"OK\" to confirm."
msgstr "单击 \"OK\" 确认。"

#: ../../source/intro/install_system.rst:125
msgid "In the \"Actions\" tab, click \"New...\"."
msgstr "在 \"Actions\" 选项卡中，单击 \"New...\"。"

#: ../../source/intro/install_system.rst:127
msgid "In the \"Action\" dropdown, select \"Start a program\"."
msgstr "在 \"Action\" 下拉菜单中，选择 \"Start a program\"。"

#: ../../source/intro/install_system.rst:129
msgid "In the \"Program/script\" text field, add ``C:\\Windows\\System32\\bash.exe``."
msgstr "在 \"Program/script\" 文本字段中，添加 ``C:\\Windows\\System32\\bash.exe``。"

#: ../../source/intro/install_system.rst:131
msgid ""
"In the \"Add arguments (optional)\" text field, add ``-c \"sudo "
"/path/to/start_aiida_services.sh\"``."
msgstr "在 \"Add arguments (optional)\" 文本字段中，添加 ``-c 219ED432``。"

#: ../../source/intro/install_system.rst:135
msgid "Click \"OK\" to confirm the task."
msgstr "单击 \"OK\" 确认任务。"

#: ../../source/intro/install_system.rst:137
msgid "You can tweak other details of this task to fit your needs."
msgstr "您可以根据自己的需要调整这项任务的其他细节。"

#: ../../source/intro/install_system.rst:0
msgid "Other"
msgstr "其他"

#: ../../source/intro/install_system.rst:141
msgid ""
"Install RabbitMQ following the `instructions applicable to your system "
"<https://www.rabbitmq.com/download.html>`__."
msgstr ""
"按照 `instructions applicable to your system "
"<https://www.rabbitmq.com/download.html>`__ 安装 RabbitMQ。"

#: ../../source/intro/install_system.rst:142
msgid ""
"Install PostgreSQL following the `instructions applicable to your system "
"<https://www.postgresql.org/download/>`__."
msgstr ""
"按照 `instructions applicable to your system "
"<https://www.postgresql.org/download/>`__ 安装 PostgreSQL。"

#: ../../source/intro/install_system.rst:146
msgid ""
"Alternatively use the :ref:`pure conda installation method "
"<intro:get_started:conda-install>`."
msgstr ""
"或者使用 :ref:`pure conda installation method <intro:get_started:conda-"
"install>`。"

#: ../../source/intro/install_system.rst:148
msgid "Install AiiDA (core)"
msgstr "安装 AiiDA（核心）"

#: ../../source/intro/install_system.rst:0
msgid "pip + venv"
msgstr "pip + venv"

#: ../../source/intro/install_system.rst:154
msgid "*Install the aiida-core package from PyPI into a virtual environment.*"
msgstr "*从 PyPI 安装 aiida-core 软件包到虚拟环境。*"

#: ../../source/intro/install_system.rst:166
msgid ""
"Make sure the ``python`` executable is for a Python version that is "
"supported by AiiDA. You can see the version using:"
msgstr "确保 ``python`` 可执行文件是 AiiDA 支持的 Python 版本。你可以使用"

#: ../../source/intro/install_system.rst:173
msgid ""
"You can find the supported Python versions for the latest version of AiiDA "
"`on the PyPI page <https://pypi.org/project/aiida-core/>`__."
msgstr ""
"你可以找到 AiiDA `on the PyPI page <https://pypi.org/project/aiida-core/>`__ "
"最新版本支持的 Python 版本。"

#: ../../source/intro/install_system.rst:177
msgid ""
"See the `venv documentation <https://docs.python.org/3/library/venv.html>`__"
" if the activation command fails. The exact command for activating a virtual"
" environment differs slightly based on the used shell."
msgstr ""
"如果激活命令失败，请参阅 `venv documentation "
"<https://docs.python.org/3/library/venv.html>`__。激活虚拟环境的确切命令因所使用的 shell "
"而略有不同。"

#: ../../source/intro/install_system.rst:0
msgid ":fa:`plus-circle` Installation extras"
msgstr ":fa:`plus-circle` 安装额外内容"

#: ../../source/intro/install_system.rst:182
msgid ""
"There are additional optional packages that you may want to install, which "
"are grouped in the following categories:"
msgstr "您可能还需要安装其他可选软件包，这些软件包分为以下几类："

#: ../../source/intro/install_system.rst:184
msgid ""
"``atomic_tools``: packages that allow importing and manipulating crystal "
"structure from various formats"
msgstr "``atomic_tools``：允许 import 从各种格式获取和处理晶体结构的软件包"

#: ../../source/intro/install_system.rst:185
msgid ""
"``ssh_kerberos``: adds support for ssh transport authentication through "
"Kerberos"
msgstr "``ssh_kerberos``：通过 Kerberos 增加对 ssh 传输身份验证的支持"

#: ../../source/intro/install_system.rst:186
msgid "``REST``: allows a REST server to be ran locally to serve AiiDA data"
msgstr "``REST``：允许在本地运行 REST 服务器以提供 AiiDA 数据"

#: ../../source/intro/install_system.rst:187
msgid "``docs``: tools to build the documentation"
msgstr "``docs``：编制文件的工具"

#: ../../source/intro/install_system.rst:188
msgid "``notebook``: jupyter notebook - to allow it to import AiiDA modules"
msgstr "``notebook``: jupyter 笔记本 - 使其能够 import AiiDA 模块"

#: ../../source/intro/install_system.rst:189
msgid "``tests``: python modules required to run the automatic unit tests"
msgstr "``tests``：运行自动单元测试所需的 python 模块"

#: ../../source/intro/install_system.rst:190
msgid ""
"``pre-commit``: pre-commit tools required for developers to enable automatic"
" code linting and formatting"
msgstr "``pre-commit``：开发人员需要预提交工具来实现自动代码检查和格式化"

#: ../../source/intro/install_system.rst:192
msgid ""
"In order to install any of these package groups, simply append them as a "
"comma separated list in the ``pip`` install command, for example:"
msgstr "例如，要安装这些软件包组中的任何一个，只需在 ``pip`` install 命令中以逗号分隔的列表形式添加即可："

#: ../../source/intro/install_system.rst:0
msgid ":fa:`wrench` Kerberos on Ubuntu"
msgstr ":fa:`wrench` Ubuntu 上的 Kerberos"

#: ../../source/intro/install_system.rst:200
msgid ""
"If you are installing the optional ``ssh_kerberos`` and you are on Ubuntu "
"you might encounter an error related to the ``gss`` package. To fix this you"
" need to install the ``libffi-dev`` and ``libkrb5-dev`` packages:"
msgstr ""
"如果您在 Ubuntu 上安装的是可选的 ``ssh_kerberos``，则可能会遇到与 ``gss`` 软件包相关的错误。要解决这个问题，你需要安装"
" ``libffi-dev`` 和 ``libkrb5-dev`` 软件包："

#: ../../source/intro/install_system.rst:0
msgid "Conda"
msgstr "康达"

#: ../../source/intro/install_system.rst:209
msgid "*Install the aiida-core package in a Conda environment.*"
msgstr "*在 Conda 环境中安装 aiida-core 软件包。*"

#: ../../source/intro/install_system.rst:211
msgid ""
"Make sure that conda is installed, e.g., by following `the instructions on "
"installing Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr ""
"确保已安装 conda，例如按照 `the instructions on installing Miniconda "
"<https://docs.conda.io/en/latest/miniconda.html>`__."

#: ../../source/intro/install_system.rst:0
msgid "From source"
msgstr "资料来源"

#: ../../source/intro/install_system.rst:222
msgid "*Install the aiida-core package directly from the cloned repository.*"
msgstr "*直接从克隆的软件源安装 aiida-core 软件包。*"

#: ../../source/intro/install_system.rst:254
msgid "Start verdi daemons"
msgstr "启动 verdi 守护进程"

#: ../../source/intro/install_system.rst:256
msgid "Start the verdi daemon(s) that are used to run AiiDA workflows."
msgstr "启动用于运行 AiiDA workflows 的 verdi 守护进程。"

#: ../../source/intro/install_system.rst:284
msgid ""
"At this point you should now have a working AiiDA environment, from which "
"you can add and retrieve data."
msgstr "此时，你应该已经有了一个可以工作的 AiiDA 环境，可以添加和检索数据。"

#: ../../source/intro/install_system.rst:286
msgid "Missing a checkmark or encountered some other issue?"
msgstr "缺少一个复选标记或遇到其他问题？"

#: ../../source/intro/installation.rst:6
msgid "Advanced configuration"
msgstr "高级配置"

#: ../../source/intro/installation.rst:8
msgid ""
"This chapter covers topics that go beyond the :ref:`standard setup of AiiDA "
"<intro:get_started:setup>`. If you are new to AiiDA, we recommend you first "
"go through the :ref:`Basic Tutorial <tutorial:basic>`, or see our :ref:`Next"
" steps guide <tutorial:next-steps>`."
msgstr ""
"本章涵盖 :ref:`standard setup of AiiDA <intro:get_started:setup>` 以外的主题。如果你是 "
"AiiDA 的新手，我们建议你先学习 :ref:`Basic Tutorial <tutorial:basic>`，或查看我们的 :ref:`Next "
"steps guide <tutorial:next-steps>`。"

#: ../../source/intro/installation.rst:15
msgid "Creating the database"
msgstr "创建数据库"

#: ../../source/intro/installation.rst:17
msgid ""
"AiiDA uses a database to store the nodes, node attributes and other "
"information, allowing the end user to perform fast queries of the results. "
"Currently, the highly performant `PostgreSQL`_ database is supported as a "
"database backend."
msgstr ""
"AiiDA使用数据库存储nodes、node属性和其他信息，允许终端用户对结果进行快速查询。目前，支持高性能的 `PostgreSQL`_ "
"数据库作为数据库后端。"

#: ../../source/intro/installation.rst:22
msgid "Find out more about the database"
msgstr "了解有关数据库的更多信息"

#: ../../source/intro/installation.rst:27
msgid ":ref:`The database topic <topics:database>`."
msgstr " :ref:`The database topic <topics:database>`."

#: ../../source/intro/installation.rst:29
msgid ""
"To manually create the database for AiiDA, you need to run the program "
"``psql`` to interact with postgres. On most operating systems, you need to "
"do so as the ``postgres`` user that was created upon installing the "
"software. To assume the role of ``postgres`` run as root:"
msgstr ""
"要手动创建 AiiDA 数据库，需要运行 ``psql`` 程序与 postgres 交互。在大多数操作系统中，你需要以安装软件时创建的 "
"``postgres`` 用户身份运行。要扮演 ``postgres`` 的角色，请以 root 用户身份运行："

#: ../../source/intro/installation.rst:37
msgid ""
"(or, equivalently, type ``sudo su - postgres``, depending on your "
"distribution) and launch the postgres program:"
msgstr "(或视发行版而定键入 ``sudo su - postgres`` ），然后启动 postgres 程序："

#: ../../source/intro/installation.rst:43
msgid "Create a new database user account for AiiDA by running:"
msgstr "为 AiiDA 创建一个新的数据库用户账户："

#: ../../source/intro/installation.rst:49
msgid "replacing ``<password>`` with a password of your choice."
msgstr "将 ``<password>`` 替换为您选择的密码。"

#: ../../source/intro/installation.rst:51
msgid ""
"You will need to provide the password again when you configure AiiDA to use "
"this database through ``verdi setup``. If you want to change the password "
"you just created use the command:"
msgstr "当你通过 ``verdi setup`` 配置 AiiDA 使用该数据库时，需要再次提供密码。如果你想更改刚刚创建的密码，请使用以下命令："

#: ../../source/intro/installation.rst:58
msgid ""
"Next, we create the database itself. We enforce the UTF-8 encoding and "
"specific locales:"
msgstr "接下来，我们创建数据库本身。我们强制执行 UTF-8 编码和特定的本地语言："

#: ../../source/intro/installation.rst:64
msgid ""
"and grant all privileges on this DB to the previously-created ``aiida`` "
"user:"
msgstr "并将此 DB 上的所有权限授予之前创建的 ``aiida`` 用户："

#: ../../source/intro/installation.rst:70
msgid ""
"You have now created a database for AiiDA and you can close the postgres "
"shell by typing ``\\q``. To test if the database was created successfully, "
"you can run the following command as a regular user in a bash terminal:"
msgstr ""
"现在你已经为 AiiDA 创建了一个数据库，可以输入 ``\\q`` 关闭 postgres shell。要测试数据库是否创建成功，可以以普通用户身份在"
" bash 终端运行以下命令："

#: ../../source/intro/installation.rst:77
msgid ""
"and type the password you inserted before, when prompted. If everything "
"worked well, you should get no error and see the prompt of the ``psql`` "
"shell."
msgstr "并在出现提示时输入之前插入的密码。如果一切顺利，就不会出错，并能看到 ``psql`` shell 的提示。"

#: ../../source/intro/installation.rst:80
msgid ""
"If you use the same names as in the example commands above, then during the "
"``verdi setup`` phase the following parameters will apply to the newly "
"created database:"
msgstr "如果使用与上述命令示例中相同的名称，则在 ``verdi setup`` 阶段，以下参数将适用于新创建的数据库："

#: ../../source/intro/installation.rst:91
msgid "Don't forget to backup your database!"
msgstr "不要忘记备份数据库！"

#: ../../source/intro/installation.rst:94
msgid ""
"See the :ref:`Database backup how-to <how-to:installation:backup>`), and "
":ref:`how to move your database <how-to:installation:performance>`."
msgstr ""
"参见 :ref:`Database backup how-to <how-to:installation:backup>`）和 :ref:`how to"
" move your database <how-to:installation:performance>`。"

#: ../../source/intro/installation.rst:97
msgid "Database setup using 'peer' authentication"
msgstr "使用 'peer' 身份验证设置数据库"

#: ../../source/intro/installation.rst:99
msgid ""
"On Ubuntu Linux, the default PostgreSQL setup is configured to use ``peer`` "
"authentication, which allows password-less login via local Unix sockets. In "
"this mode, PostgreSQL compares the Unix user connecting to the socket with "
"its own database of users and allows a connection if a matching user exists."
msgstr ""
"在 Ubuntu Linux 上，PostgreSQL 的默认设置是使用 ``peer`` 身份验证，允许通过本地 Unix "
"套接字进行无密码登录。在这种模式下，PostgreSQL 会将连接到套接字的 Unix 用户与自己的用户数据库进行比较，如果存在匹配的用户，则允许连接。"

#: ../../source/intro/installation.rst:104
msgid ""
"This is an alternative route to set up your database - the standard approach"
" will work on Ubuntu just as well."
msgstr "这是设置数据库的另一种方法--标准方法在 Ubuntu 上同样适用。"

#: ../../source/intro/installation.rst:106
msgid ""
"Below we are going to take advantage of the command-line utilities shipped "
"on Ubuntu to simplify creating users and databases compared to issuing the "
"SQL commands directly."
msgstr "下面我们将利用 Ubuntu 提供的命令行实用程序来简化创建用户和数据库的过程，而不是直接发布 SQL 命令。"

#: ../../source/intro/installation.rst:108
msgid "Assume the role of ``postgres``:"
msgstr "扮演 ``postgres`` 的角色："

#: ../../source/intro/installation.rst:114
msgid ""
"Create a database user with the **same name** as the UNIX user who will be "
"running AiiDA (usually your login name):"
msgstr "创建一个与运行 AiiDA 的 UNIX 用户（通常是你的登录名）同名的数据库用户："

#: ../../source/intro/installation.rst:120
msgid "replacing ``<username>`` with your username."
msgstr "将 ``<username>`` 替换为您的用户名。"

#: ../../source/intro/installation.rst:122
msgid "Next, create the database itself with your user as the owner:"
msgstr "接下来，创建数据库本身，并将用户作为所有者："

#: ../../source/intro/installation.rst:128
msgid ""
"Exit the shell to go back to your login user. To test if the database was "
"created successfully, try:"
msgstr "退出 shell，返回登录用户。要测试数据库是否创建成功，请尝试"

#: ../../source/intro/installation.rst:135
msgid ""
"During the ``verdi setup`` phase, use ``!`` to leave host empty and specify "
"your Unix user name as the *AiiDA Database user*.:"
msgstr "在 ``verdi setup`` 阶段，使用 ``!`` 将主机留空，并指定您的 Unix 用户名为 *AiiDA 数据库用户*："

#: ../../source/intro/installation.rst:148
msgid "RabbitMQ configuration"
msgstr "RabbitMQ 配置"

#: ../../source/intro/installation.rst:150
msgid ""
"In most normal setups, RabbitMQ will be installed and run as a service on "
"the same machine that hosts AiiDA itself. In that case, using the default "
"configuration proposed during a profile setup will work just fine. However, "
"when the installation of RabbitMQ is not standard, for example it runs on a "
"different port, or even runs on a completely different machine, all relevant"
" connection details can be configured with ``verdi setup``."
msgstr ""
"在大多数正常设置中，RabbitMQ 将作为服务安装并运行在与 AiiDA "
"本身主机相同的机器上。在这种情况下，使用配置文件设置时建议的默认配置将正常工作。然而，当 RabbitMQ "
"的安装不是标准的，例如它运行在不同的端口，甚至运行在完全不同的机器上时，所有相关的连接细节都可以通过 ``verdi setup`` 进行配置。"

#: ../../source/intro/installation.rst:154
msgid "The following parameters can be configured:"
msgstr "可以配置以下参数："

#: ../../source/intro/installation.rst:157
msgid "Parameter"
msgstr "参数"

#: ../../source/intro/installation.rst:157
msgid "Option"
msgstr "选项"

#: ../../source/intro/installation.rst:157
msgid "Default"
msgstr "默认值"

#: ../../source/intro/installation.rst:157
msgid "Explanation"
msgstr "说明"

#: ../../source/intro/installation.rst:159
msgid "Protocol"
msgstr "规程"

#: ../../source/intro/installation.rst:159
msgid "``--broker-protocol``"
msgstr "``--broker-protocol``"

#: ../../source/intro/installation.rst:159
msgid "``amqp``"
msgstr "``amqp``"

#: ../../source/intro/installation.rst:159
msgid ""
"The protocol to use, can be either ``amqp`` or ``amqps`` for SSL enabled "
"connections."
msgstr "对于启用 SSL 的连接，使用的协议可以是 ``amqp`` 或 ``amqps``。"

#: ../../source/intro/installation.rst:161
msgid "Username"
msgstr "用户名"

#: ../../source/intro/installation.rst:161
msgid "``--broker-username``"
msgstr "``--broker-username``"

#: ../../source/intro/installation.rst:161
#: ../../source/intro/installation.rst:163
msgid "``guest``"
msgstr "``guest``"

#: ../../source/intro/installation.rst:161
msgid ""
"The username with which to connect. The ``guest`` account is available and "
"usable with a default RabbitMQ installation."
msgstr "用于连接的用户名。``guest`` 账户在默认安装 RabbitMQ 时可用。"

#: ../../source/intro/installation.rst:163
msgid "Password"
msgstr "密码"

#: ../../source/intro/installation.rst:163
msgid "``--broker-password``"
msgstr "``--broker-password``"

#: ../../source/intro/installation.rst:163
msgid ""
"The password with which to connect. The ``guest`` account is available and "
"usable with a default RabbitMQ installation."
msgstr "连接密码。``guest`` 账户在默认安装 RabbitMQ 时可用。"

#: ../../source/intro/installation.rst:165
msgid "Host"
msgstr "主持人"

#: ../../source/intro/installation.rst:165
msgid "``--broker-host``"
msgstr "``--broker-host``"

#: ../../source/intro/installation.rst:165
msgid "``127.0.0.1``"
msgstr "``127.0.0.1``"

#: ../../source/intro/installation.rst:165
msgid "The hostname of the RabbitMQ server."
msgstr "RabbitMQ 服务器的主机名。"

#: ../../source/intro/installation.rst:167
msgid "Port"
msgstr "港口"

#: ../../source/intro/installation.rst:167
msgid "``--broker-port``"
msgstr "``--broker-port``"

#: ../../source/intro/installation.rst:167
msgid "``5672``"
msgstr "``5672``"

#: ../../source/intro/installation.rst:167
msgid "The port to which the server listens."
msgstr "服务器监听的端口。"

#: ../../source/intro/installation.rst:169
msgid "Virtual host"
msgstr "虚拟主机"

#: ../../source/intro/installation.rst:169
msgid "``--broker-virtual-host``"
msgstr "``--broker-virtual-host``"

#: ../../source/intro/installation.rst:169
msgid "``''``"
msgstr "``''``"

#: ../../source/intro/installation.rst:169
msgid ""
"Optional virtual host. Should not contain the leading forward slash, this "
"will be added automatically by AiiDA."
msgstr "可选的虚拟主机。不应包含前导斜线，这将由 AiiDA 自动添加。"

#: ../../source/intro/installation.rst:171
msgid "Parameters"
msgstr "参数"

#: ../../source/intro/installation.rst:171
msgid "not available"
msgstr "不详"

#: ../../source/intro/installation.rst:171
msgid "n.a."
msgstr "n.a."

#: ../../source/intro/installation.rst:171
msgid ""
"These are additional broker parameters that are typically encoded as URL "
"parameters, for example, to specify SSL parameters such as the filepath to "
"the certificate that is to be used. The parameters are currently not "
"definable through the CLI but have to be added manually in the "
"``config.json``. A key ``broker_parameters`` should be added that is a "
"dictionary, which can contain fields: ``cafile``, ``capath``, ``cadata``, "
"``certfile``, ``keyfile`` and ``no_verify_ssl``."
msgstr ""
"这些是额外的代理参数，通常编码为 URL 参数，例如用于指定 SSL 参数，如要使用的证书的文件路径。这些参数目前无法通过 CLI 进行定义，而必须在 "
"``config.json`` 中手动添加。应添加一个键 "
"``broker_parameters``，它是一个字典，可包含字段：``cafile``、``capath``、``cadata``、``certfile``、``keyfile``"
" 和 ``no_verify_ssl``。"

#: ../../source/intro/installation.rst:182
msgid "verdi setup"
msgstr "设置"

#: ../../source/intro/installation.rst:184
msgid "After the database has been created, do:"
msgstr "创建数据库后，请执行以下操作"

#: ../../source/intro/installation.rst:190
msgid ""
"where `<profile_name>` is a profile name of your choosing. The ``verdi "
"setup`` command will guide you through the setup process through a series of"
" prompts."
msgstr "其中 `<profile_name>` 是您选择的配置文件名称。``verdi setup`` 命令将通过一系列提示引导您完成设置过程。"

#: ../../source/intro/installation.rst:193
msgid ""
"The first information asked is your email, which will be used to associate "
"the calculations to you. In AiiDA, the email is your username, and acts as a"
" unique identifier when importing/exporting data from AiiDA."
msgstr ""
"第一个被询问的信息是你的电子邮件，它将被用来把计算与你联系起来。在 AiiDA 中，电子邮件是你的用户名，在 importing/ 导出 AiiDA "
"数据时，它是唯一的标识符。"

#: ../../source/intro/installation.rst:198
msgid ""
"The password, in the current version of AiiDA, is not used (it will be used "
"only in the REST API and in the web interface). If you leave the field "
"empty, no password will be set and no access will be granted to the user via"
" the REST API and the web interface."
msgstr ""
"在目前的 AiiDA 版本中，密码是不使用的（它只会在 REST API 和网页界面中使用）。如果不填，就不会设置密码，用户也不能通过 REST API"
" 和网页界面访问。"

#: ../../source/intro/installation.rst:201
msgid ""
"Then, the following prompts will help you configure the database. Typical "
"settings are:"
msgstr "然后，以下提示将帮助您配置数据库。典型的设置有"

#: ../../source/intro/installation.rst:222
msgid "Don't forget to backup your data!"
msgstr "不要忘记备份数据！"

#: ../../source/intro/installation.rst:225
msgid ""
"See the :ref:`installation backup how-to <how-to:installation:backup>`."
msgstr "参见 :ref:`installation backup how-to <how-to:installation:backup>`。"

#: ../../source/intro/installation.rst:230
msgid "Managing the daemon"
msgstr "管理守护进程"

#: ../../source/intro/installation.rst:232
msgid ""
"The AiiDA daemon process runs in the background and takes care of processing"
" your submitted calculations and workflows, checking their status, "
"retrieving their results once they are finished and storing them in the "
"AiiDA database."
msgstr ""
"AiiDA 守护进程在后台运行，负责处理你提交的计算和 workflow，检查它们的状态，完成后检索它们的结果，并将它们存储在 AiiDA 数据库中。"

#: ../../source/intro/installation.rst:234
msgid "The AiiDA daemon is controlled using three simple commands:"
msgstr "AiiDA 守护进程由三个简单的命令控制："

#: ../../source/intro/installation.rst:236
msgid "``verdi daemon start``: start the daemon"
msgstr "``verdi daemon start``：启动守护进程"

#: ../../source/intro/installation.rst:237
msgid "``verdi daemon status``: check the status of the daemon"
msgstr "``verdi daemon status``：检查守护进程的状态"

#: ../../source/intro/installation.rst:238
msgid "``verdi daemon stop``: stop the daemon"
msgstr "``verdi daemon stop``: 停止守护进程"

#: ../../source/intro/installation.rst:242
msgid ""
"While operational, the daemon logs its activity to a file in "
"``~/.aiida/daemon/log/`` (or, more generally, "
"``$AIIDA_PATH/.aiida/daemon/log``). Get the latest log messages via ``verdi "
"daemon logshow``."
msgstr ""
"运行时，守护进程会将其活动记录到 ``~/.aiida/daemon/log/`` 文件（或更常见的 "
"``$AIIDA_PATH/.aiida/daemon/log`` 文件）中。通过 ``verdi daemon logshow`` 获取最新日志信息。"

#: ../../source/intro/installation.rst:248
msgid "Using AiiDA in Jupyter"
msgstr "在 Jupyter 中使用 AiiDA"

#: ../../source/intro/installation.rst:250
msgid ""
"Install the AiiDA ``notebook`` extra **inside** the AiiDA python "
"environment, e.g. by running ``pip install aiida-core[notebook]``."
msgstr ""
"在 AiiDA python 环境内**安装 AiiDA ``notebook`` 额外程序，例如运行 ``pip install aiida-"
"core[notebook]``。"

#: ../../source/intro/installation.rst:253
msgid "With this setup, you're ready to use AiiDA in Jupyter notebooks."
msgstr "有了这些设置，你就可以在 Jupyter 笔记本中使用 AiiDA 了。"

#: ../../source/intro/installation.rst:255
msgid "Start a Jupyter notebook server:"
msgstr "启动 Jupyter 笔记本服务器"

#: ../../source/intro/installation.rst:261
msgid "This will open a tab in your browser. Click on ``New -> Python``."
msgstr "这将在浏览器中打开一个标签页。点击 ``New -> Python``。"

#: ../../source/intro/installation.rst:263
msgid "To load the `aiida` magics extension, simply run:"
msgstr "要加载 `aiida` magics 扩展程序，只需运行"

#: ../../source/intro/installation.rst:269
msgid "Now you can load a profile (the default unless specified) by:"
msgstr "现在，您可以通过以下方式加载配置文件（除非指定，否则为默认配置文件）："

#: ../../source/intro/installation.rst:275
msgid ""
"After executing the cell by ``Shift-Enter``, you should receive the message "
"\"Loaded AiiDA DB environment.\" Otherwise, you can load the profile "
"manually as you would in a Python script:"
msgstr "否则，您可以像在 Python 脚本中一样手动加载配置文件："

#: ../../source/intro/installation.rst:285
msgid ""
"You can also run `verdi` CLI commands, using the currently loaded profile, "
"by:"
msgstr "您还可以使用当前加载的配置文件运行 `verdi` CLI 命令，方法是"

#: ../../source/intro/run_docker.rst:6
msgid "Run AiiDA via a Docker image"
msgstr "通过 Docker 映像运行 AiiDA"

#: ../../source/intro/run_docker.rst:8
msgid ""
"The AiiDA team maintains a `Docker <https://www.docker.com/>`__ image on "
"`Docker Hub <https://hub.docker.com/r/aiidateam/aiida-core-with-"
"services>`__. This image contains a fully pre-configured AiiDA environment "
"which makes it particularly useful for learning and testing purposes."
msgstr ""
"AiiDA团队在 `Docker Hub <https://hub.docker.com/r/aiidateam/aiida-core-with-"
"services>`__ 上维护了一个 `Docker <https://www.docker.com/>`__ "
"镜像。这个镜像包含了一个完全预配置的AiiDA环境，特别适用于学习、测试和开发。"

#: ../../source/intro/run_docker.rst:13
msgid ""
"All data stored in a container will persist only over the lifetime of that "
"particular container (i.e., removing the container will also purge the data)"
" unless you use volumes (see instructions below)."
msgstr "除非使用卷（请参阅下面的说明），否则容器中存储的所有数据只能在该特定容器的生命周期内持续存在（即删除容器也会清除数据）。"

#: ../../source/intro/run_docker.rst:18
msgid "Install Docker on your workstation or laptop"
msgstr "在工作站或笔记本电脑上安装 Docker"

#: ../../source/intro/run_docker.rst:20
msgid ""
"To install Docker, please refer to the `official documentation "
"<https://docs.docker.com/get-docker/>`__."
msgstr ""
"要安装 Docker，请参考 `official documentation <https://docs.docker.com/get-"
"docker/>`__。"

#: ../../source/intro/run_docker.rst:22
msgid "Start container and use AiiDA interactively"
msgstr "启动容器并交互式使用 AiiDA"

#: ../../source/intro/run_docker.rst:24
msgid ""
"Start the container with (replace ``latest`` with the version you want to "
"use, check the `Docker Hub <https://hub.docker.com/r/aiidateam/aiida-core-"
"with-services/tags>`__ for available tags/versions):"
msgstr ""
"用（将 ``latest`` 替换为要使用的版本，查看 `Docker Hub "
"<https://hub.docker.com/r/aiidateam/aiida-core-with-services/tags>`__ "
"以获取可用的标记/版本）启动容器："

#: ../../source/intro/run_docker.rst:30
msgid ""
"You can specify a name for the container with the ``--name`` option for "
"easier reference later on:"
msgstr "您可以使用 ``--name`` 选项为容器指定一个名称，以方便以后参考："

#: ../../source/intro/run_docker.rst:38
msgid "The profile named ``default`` is created under the ``aiida`` user."
msgstr "在 ``aiida`` 用户下创建了名为 ``default`` 的配置文件。"

#: ../../source/intro/run_docker.rst:40
msgid ""
"For example, to check the verdi status, execute the following command inside"
" the container:"
msgstr "例如，要检查 verdi 的状态，请在容器内执行以下命令："

#: ../../source/intro/run_docker.rst:52
msgid "Copy files from your computer to the container"
msgstr "将电脑中的文件复制到容器中"

#: ../../source/intro/run_docker.rst:54
msgid ""
"To copy files from your computer to the container, use the ``docker cp`` "
"command."
msgstr "要将文件从计算机复制到容器中，请使用 ``docker cp`` 命令。"

#: ../../source/intro/run_docker.rst:56
msgid ""
"For example, to copy a file named ``test.txt`` from your current working "
"directory to the ``/home/aiida`` path in the container, run:"
msgstr "例如，要将名为 ``test.txt`` 的文件从当前工作目录复制到容器中的 ``/home/aiida`` 路径，请运行"

#: ../../source/intro/run_docker.rst:62
msgid "Persist data across different containers"
msgstr "在不同容器中持久保存数据"

#: ../../source/intro/run_docker.rst:64
msgid ""
"If you stop the container (`docker stop` or simply `Ctrl+D` from the "
"container) and start it again, any data you created will persist."
msgstr "如果停止容器（ `docker stop` 或从容器中直接 `Ctrl+D`）并再次启动，创建的任何数据都将持续存在。"

#: ../../source/intro/run_docker.rst:70
msgid ""
"However, if you remove the container, **all data will be removed as well**."
msgstr "不过，如果移除容器，** 所有数据也将被移除**。"

#: ../../source/intro/run_docker.rst:77
msgid ""
"The preferred way to persistently store data is to `create a volume "
"<https://docs.docker.com/storage/volumes/>`__."
msgstr ""
"持久存储数据的首选方法是 `create a volume <https://docs.docker.com/storage/volumes/>`__。"

#: ../../source/intro/run_docker.rst:79
msgid "To create a simple volume, run:"
msgstr "要创建一个简单的加密卷，请运行"

#: ../../source/intro/run_docker.rst:85
msgid "Then make sure to mount that volume when running the aiida container:"
msgstr "然后确保在运行 aiida 容器时加载该卷："

#: ../../source/intro/run_docker.rst:91
msgid ""
"Starting the container with the above command, ensures that any data stored "
"in the ``/home/aiida`` path within the container is stored in the "
"``conatiner-home-data`` volume and therefore persists even if the container "
"is removed."
msgstr ""
"使用上述命令启动容器可确保容器内 ``/home/aiida`` 路径中存储的任何数据都存储在 ``conatiner-home-data`` "
"卷中，因此即使容器被移除也会持续存在。"

#: ../../source/intro/run_docker.rst:93
msgid ""
"To persistently store the Python packages installed in the container, use "
"`--user` flag when installing packages with pip, the packages will be "
"installed in the ``/home/aiida/.local`` path which is mounted to the "
"``container-home-data`` volume."
msgstr ""
"要持久存储安装在容器中的 Python 软件包，请在使用 pip 安装软件包时使用 `--user` 标志，这样软件包就会安装在 "
"``/home/aiida/.local`` 路径中，该路径被挂载到 ``container-home-data`` 卷上。"

#: ../../source/intro/run_docker.rst:95
msgid ""
"You can also mount a local directory instead of a volume and to other "
"container paths, please refer to the `Docker documentation "
"<https://docs.docker.com/storage/bind-mounts/>`__ for more information."
msgstr ""
"您还可以挂载本地目录而不是卷，也可以挂载到其他容器路径，详情请参考 `Docker documentation "
"<https://docs.docker.com/storage/bind-mounts/>`__。"

#: ../../source/intro/troubleshooting.rst:5
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../source/intro/troubleshooting.rst:7
msgid ""
"If you experience any problems, first check that all services are up and "
"running:"
msgstr "如果遇到任何问题，请首先检查所有服务是否正常运行："

#: ../../source/intro/troubleshooting.rst:20
msgid ""
"In the example output, all service have a green check mark and so should be "
"running as expected. If all services are up and running and you are still "
"experiencing problems or if you have trouble with the installation of aiida-"
"core and related services, consider the commonly encountered problems below."
" In case you are still experiencing problems, you can request support by "
"opening a post on the `Discourse server <https://aiida.discourse.group/>`_."
msgstr ""
"在示例输出中，所有服务都有一个绿色复选标记，因此应按预期运行。如果所有服务都已启动和运行，但您仍遇到问题，或在安装 aiida-core "
"和相关服务时遇到困难，请考虑以下常见问题。如果您仍遇到问题，可以在 `Discourse server "
"<https://aiida.discourse.group/>`_ 上发帖请求支持。"

#: ../../source/intro/troubleshooting.rst:27
msgid "Installation issues"
msgstr "安装问题"

#: ../../source/intro/troubleshooting.rst:32
msgid "RabbitMQ incompatibility"
msgstr "RabbitMQ 不兼容"

#: ../../source/intro/troubleshooting.rst:34
msgid ""
"RabbitMQ v3.5 and older are `end-of-life "
"<https://www.rabbitmq.com/versions.html>`_ and are not supported in any way."
" For RabbitMQ v3.8.15 and up, AiiDA is not compatible with the default "
"configuration of the server. When AiiDA is run with an incompatible version "
"of RabbitMQ, the following warning will be displayed:"
msgstr ""
"RabbitMQ v3.5 及更早版本为 `end-of-life "
"<https://www.rabbitmq.com/versions.html>`_，不支持任何方式。对于 RabbitMQ v3.8.15 "
"及以上版本，AiiDA 与服务器的默认配置不兼容。当 AiiDA 与不兼容的 RabbitMQ 版本运行时，会显示以下警告："

#: ../../source/intro/troubleshooting.rst:44
msgid "There are two possible solutions:"
msgstr "有两种可能的解决方案："

#: ../../source/intro/troubleshooting.rst:46
msgid ""
"Configure the RabbitMQ server to set a long time for the "
"``consumer_timeout`` parameter."
msgstr "配置 RabbitMQ 服务器，为 ``consumer_timeout`` 参数设置较长的时间。"

#: ../../source/intro/troubleshooting.rst:47
msgid "Downgrade the RabbitMQ server to v3.8.14 or earlier"
msgstr "将 RabbitMQ 服务器降级至 v3.8.14 或更早版本"

#: ../../source/intro/troubleshooting.rst:0
msgid "Configuring"
msgstr "配置"

#: ../../source/intro/troubleshooting.rst:53
msgid ""
"Newer versions of RabbitMQ can be made compatible with AiiDA, but the server"
" will have to be configured. Note that for this administrator access will "
"most likely be required. The name and location of the configuration file "
"depends on the operating system (see the `RabbitMQ documentation "
"<https://www.rabbitmq.com/configure.html#config-location>`_ for details). It"
" is possible that the configuration file does not yet exist, in which case "
"it should be created."
msgstr ""
"较新版本的 RabbitMQ 可以与 AiiDA 兼容，但必须对服务器进行配置。请注意，这很可能需要管理员权限。配置文件的名称和位置取决于操作系统（详见"
" `RabbitMQ documentation <https://www.rabbitmq.com/configure.html#config-"
"location>`_）。配置文件可能还不存在，在这种情况下应创建配置文件。"

#: ../../source/intro/troubleshooting.rst:58
msgid ""
"Add the ``consumer_timeout`` parameter to the config file and give it a "
"sufficiently large number:"
msgstr "在配置文件中添加 ``consumer_timeout`` 参数，并赋予其足够大的数值："

#: ../../source/intro/troubleshooting.rst:64
msgid ""
"For AiiDA to operately safely, this value should be larger than the longest "
"expected run time of any AiiDA workflow or calculation. The suggested number"
" of 10,000 hours should typically be sufficient. See the `RabbitMQ "
"documentation on timeouts "
"<https://www.rabbitmq.com/consumers.html#acknowledgement-timeout>`_ for more"
" details and how with advanced configuration the consumer timeout can even "
"be completely disabled."
msgstr ""
"为使 AiiDA 安全运行，该值应大于任何 AiiDA workflow 或计算的最长预期运行时间。建议的10,000小时通常就足够了。请参阅 "
"`RabbitMQ documentation on timeouts "
"<https://www.rabbitmq.com/consumers.html#acknowledgement-timeout>`_ "
"了解更多详情，以及如何通过高级配置完全禁用消费者超时。"

#: ../../source/intro/troubleshooting.rst:68
msgid ""
"Note that when you have properly configured RabbitMQ, AiiDA will continue to"
" emit the warning because it can only check the version. To suppress the "
"warning set the ``warnings.rabbitmq_version`` to ``False``:"
msgstr ""
"请注意，当你正确配置了 RabbitMQ，AiiDA 将继续发出警告，因为它只能检查版本。要抑制警告，请将 "
"``warnings.rabbitmq_version`` 设置为 ``False``："

#: ../../source/intro/troubleshooting.rst:0
msgid "Downgrading"
msgstr "降级"

#: ../../source/intro/troubleshooting.rst:77
msgid ""
"Downgrading the RabbitMQ server will be dependent on the operating system "
"and/or on how the server was installed. Please refer to the `RabbitMQ "
"installation documentation <https://www.rabbitmq.com/download.html>`_ for "
"instructions."
msgstr ""
"RabbitMQ 服务器的降级将取决于操作系统和/或服务器的安装方式。有关说明，请参阅 `RabbitMQ installation "
"documentation <https://www.rabbitmq.com/download.html>`_。"

#: ../../source/intro/troubleshooting.rst:80
msgid ""
"Further details are maintained on `this wiki page "
"<https://github.com/aiidateam/aiida-core/wiki/RabbitMQ-version-to-use>`_ of "
"the repository."
msgstr ""
"更多详细信息，请参见资料库的 `this wiki page <https://github.com/aiidateam/aiida-"
"core/wiki/RabbitMQ-version-to-use>`_。"

#: ../../source/intro/troubleshooting.rst:84
msgid "numpy dependency"
msgstr "numpy依赖性"

#: ../../source/intro/troubleshooting.rst:86
msgid ""
"On a clean Ubuntu 16.04 install the pip install command ``pip install -e "
"aiida-core`` may fail due to a problem with dependencies on the ``numpy`` "
"package. In this case you may be presented with a message like the "
"following:"
msgstr ""
"在干净的 Ubuntu 16.04 安装中，由于 ``numpy`` 软件包的依赖关系问题，pip install 命令 ``pip install "
"-e aiida-core`` 可能会失败。在这种情况下，您可能会看到如下信息："

#: ../../source/intro/troubleshooting.rst:94
msgid ""
"To fix this, simply install ``numpy`` individually through pip in your "
"virtual env, i.e.:"
msgstr "要解决这个问题，只需在虚拟环境中通过 pip 单独安装 ``numpy`` 即可："

#: ../../source/intro/troubleshooting.rst:100
msgid "followed by executing the original install command once more:"
msgstr "然后再次执行原始安装命令："

#: ../../source/intro/troubleshooting.rst:106
msgid "This should fix the dependency error."
msgstr "这应该能修复依赖性错误。"

#: ../../source/intro/troubleshooting.rst:109
msgid "Database installation and location"
msgstr "数据库的安装和位置"

#: ../../source/intro/troubleshooting.rst:111
msgid ""
"If the installation fails while installing the packages related to the "
"database, you may have not installed or set up the database libraries."
msgstr "如果在安装与数据库相关的软件包时出现故障，则可能是没有安装或设置数据库库。"

#: ../../source/intro/troubleshooting.rst:113
msgid ""
"In particular, on Mac OS X, if you installed the binary package of "
"PostgreSQL, it is possible that the PATH environment variable is not set "
"correctly, and you get a \"Error: pg_config executable not found.\" error. "
"In this case, discover where the binary is located, then add a line to your "
"``~/.bashrc`` file similar to the following:"
msgstr ""
"特别是在 Mac OS X 上，如果你安装了 PostgreSQL 的二进制包，有可能是 PATH 环境变量设置不正确，导致出现 \"Error: "
"pg_config executable not found.\" 错误。在这种情况下，找出二进制包的位置，然后在 ``~/.bashrc`` "
"文件中添加一行类似下面的内容："

#: ../../source/intro/troubleshooting.rst:120
msgid ""
"and then open a new bash shell. Some possible paths can be found at this "
"`Stackoverflow link`_ and a non-exhaustive list of possible paths is the "
"following (version number may change):"
msgstr ""
"然后打开一个新的 bash shell。在 `Stackoverflow link`_ "
"中可以找到一些可能的路径，以下是可能路径的非详尽列表（版本号可能会更改）："

#: ../../source/intro/troubleshooting.rst:123
msgid "``/Applications/Postgres93.app/Contents/MacOS/bin``"
msgstr "``/Applications/Postgres93.app/Contents/MacOS/bin``"

#: ../../source/intro/troubleshooting.rst:124
msgid "``/Applications/Postgres.app/Contents/Versions/9.3/bin``"
msgstr "``/Applications/Postgres.app/Contents/Versions/9.3/bin``"

#: ../../source/intro/troubleshooting.rst:125
msgid "``/Library/PostgreSQL/9.3/bin/pg_config``"
msgstr "``/Library/PostgreSQL/9.3/bin/pg_config``"

#: ../../source/intro/troubleshooting.rst:127
msgid ""
"Similarly, if the package installs but then errors occur during the first of"
" AiiDA (with ``Symbol not found`` errors or similar), you may need to point "
"to the path where the dynamical libraries are. A way to do it is to add a "
"line similar to the following to the ``~/.bashrc`` and then open a new "
"shell:"
msgstr ""
"同样，如果软件包已安装，但在 AiiDA 首次运行时出现错误（``Symbol not found`` "
"错误或类似错误），你可能需要指向动态库所在的路径。一种方法是在 ``~/.bashrc`` 中添加类似下面的一行，然后打开一个新的 shell："

#: ../../source/intro/troubleshooting.rst:134
msgid "(you should of course adapt the path to the PostgreSQL libraries)."
msgstr "(当然，你应该调整 PostgreSQL 库的路径）。"

#: ../../source/intro/troubleshooting.rst:142
msgid "Autodetection of the PostgreSQL setup"
msgstr "自动检测 PostgreSQL 设置"

#: ../../source/intro/troubleshooting.rst:144
msgid ""
"Sometimes AiiDA fails to autodetect the local configuration of PostgreSQL "
"when running ``verdi quicksetup``. In that case try to:"
msgstr ""
"当运行 ``verdi quicksetup`` 时，有时 AiiDA 无法自动检测 PostgreSQL 的本地配置。在这种情况下，请尝试"

#: ../../source/intro/troubleshooting.rst:147
msgid ""
"Create the database manually in PostgreSQL (see "
":ref:`here<intro:install:database>`)."
msgstr "在 PostgreSQL 中手动创建数据库（参见 :ref:`here<intro:install:database>`）。"

#: ../../source/intro/troubleshooting.rst:148
msgid ""
"Then run the full ``verdi setup`` command (see "
":ref:`here<intro:install:verdi_setup>`)."
msgstr "然后运行完整的 ``verdi setup`` 命令（见 :ref:`here<intro:install:verdi_setup>`）。"

#: ../../source/intro/troubleshooting.rst:152
msgid "RabbitMQ Installation (Unix)"
msgstr "RabbitMQ 安装 (Unix)"

#: ../../source/intro/troubleshooting.rst:154
msgid ""
"If in ``verdi status`` RabbitMQ is not connected, first check that RabbitMQ "
"is actually running:"
msgstr "如果在 ``verdi status`` 中 RabbitMQ 未连接，请首先检查 RabbitMQ 是否真正运行："

#: ../../source/intro/troubleshooting.rst:164
msgid ""
"By default, AiiDA profiles are configured to connect to RabbitMQ *via* "
"``amqp://guest:guest@127.0.0.1:5672``, hence this port should be open for "
"connections. In Linux / Mac OSX you can also check which ports a PID has "
"open using:"
msgstr ""
"默认情况下，AiiDA 配置文件被配置为 *通过* ``amqp://guest:guest@127.0.0.1:5672`` 连接 "
"RabbitMQ，因此该端口应为连接开放。在 Linux / Mac OSX 中，您也可以检查 PID 所使用的开放端口："

#: ../../source/intro/troubleshooting.rst:176
msgid ""
"If a connection cannot be found, try starting ``rabbitmq-server`` in non-"
"detached mode. If you encounter an output similar to that below, it may be "
"that your versions of RabbitMQ and erlang (the programming language which "
"RabbitMQ is written in) are incompatible."
msgstr ""
"如果无法找到连接，请尝试以非分离模式启动 ``rabbitmq-server``。如果您遇到类似下面的输出，可能是您的 RabbitMQ 和 "
"erlang（RabbitMQ 使用的编程语言）版本不兼容。"

#: ../../source/intro/troubleshooting.rst:207
msgid "You can check your version of erlang using:"
msgstr "您可以使用以下命令检查您的 erlang 版本："

#: ../../source/intro/troubleshooting.rst:214
msgid "and your version of rabbitmq-server with:"
msgstr "和您的 rabbitmq-server 版本："

#: ../../source/intro/troubleshooting.rst:221
msgid ""
"Then see `RabbitMQ Erlang Version Requirements "
"<https://www.rabbitmq.com/which-erlang.html>`__, to check if these are "
"compatible, and reinstall as appropriate."
msgstr ""
"然后参阅 `RabbitMQ Erlang Version Requirements <https://www.rabbitmq.com/which-"
"erlang.html>`__，检查它们是否兼容，并根据情况重新安装。"

#: ../../source/intro/troubleshooting.rst:223
msgid ""
"See also the `RabbitMQ Troubleshooting "
"<https://www.rabbitmq.com/troubleshooting.html>`__ for further information."
msgstr ""
"另请参阅 `RabbitMQ Troubleshooting "
"<https://www.rabbitmq.com/troubleshooting.html>`__，了解更多信息。"

#: ../../source/intro/troubleshooting.rst:226
msgid "Ensuring a UTF-8 locale"
msgstr "确保 UTF-8 本地化"

#: ../../source/intro/troubleshooting.rst:228
msgid ""
"For some reasons, on some machines (notably often on Mac OS X) there is no "
"default locale defined, and when you run ``verdi setup`` for the first time "
"it fails (see also `this issue`_ of django). Run in your terminal (or maybe "
"even better, add to your ``.bashrc``, but then remember to open a new shell "
"window!):"
msgstr ""
"由于某些原因，在某些机器上（尤其是在 Mac OS X 上）没有定义默认语言，因此第一次运行 ``verdi setup`` 时会失败（另见 "
"django 的 `this issue`_）。在终端中运行（或者添加到 ``.bashrc`` 中更好，但要记得打开一个新的 shell 窗口！）："

#: ../../source/intro/troubleshooting.rst:236
msgid "and then run ``verdi setup`` again."
msgstr "然后再次运行 ``verdi setup``。"

#: ../../source/intro/troubleshooting.rst:241
msgid "Possible Ubuntu dependencies"
msgstr "可能的 Ubuntu 依赖项"

#: ../../source/intro/troubleshooting.rst:243
msgid ""
"Several users reported the need to install also ``libpq-dev`` (header files "
"for libpq5 - PostgreSQL library):"
msgstr "一些用户报告说还需要安装 ``libpq-dev`` （libpq5 - PostgreSQL库的头文件）："

#: ../../source/intro/troubleshooting.rst:249
msgid "But under Ubuntu 12.04 this is not needed."
msgstr "但在 Ubuntu 12.04 中不需要这样做。"

#: ../../source/intro/troubleshooting.rst:252
msgid "verdi not in PATH"
msgstr "verdi 不在 PATH 中"

#: ../../source/intro/troubleshooting.rst:254
msgid ""
"Installing the ``aiida-core`` python package *should* add the ``verdi`` CLI "
"to your ``PATH`` automatically."
msgstr "安装 ``aiida-core`` python 软件包后，``verdi`` CLI 将自动添加到 ``PATH`` 中。"

#: ../../source/intro/troubleshooting.rst:256
msgid ""
"If the ``verdi`` executable is not available in your terminal, the folder "
"where ``pip`` places binaries may not be added to your ``PATH``"
msgstr "如果您的终端中没有 ``verdi`` 可执行文件，则可能无法将 ``pip`` 放置二进制文件的文件夹添加到您的 ``PATH`` 中。"

#: ../../source/intro/troubleshooting.rst:258
msgid ""
"For Linux systems, this folder is usually something like ``~/.local/bin``:"
msgstr "对于 Linux 系统，该文件夹通常是类似于 ``~/.local/bin``："

#: ../../source/intro/troubleshooting.rst:264
msgid ""
"For Mac OS X systems, the path to add is usually "
"``~/Library/Python/2.7/bin``:"
msgstr "对于 Mac OS X 系统，添加路径通常是 ``~/Library/Python/2.7/bin``："

#: ../../source/intro/troubleshooting.rst:270
msgid ""
"After updating your ``PATH``, the ``verdi`` command should be available."
msgstr "更新 ``PATH`` 后，就可以使用 ``verdi`` 命令了。"

#: ../../source/intro/troubleshooting.rst:274
msgid ""
"A preprequisite for ``verdi`` to work is that the ``aiida`` python package "
"is importable. Test this by opening a ``python`` or ``ipython`` shell and "
"typing:"
msgstr ""
"``verdi`` 运行的前提条件是 ``aiida`` python 软件包是 importable 的。请打开 ``python`` 或 "
"``ipython`` shell 并键入以下内容进行测试："

#: ../../source/intro/troubleshooting.rst:281
msgid ""
"If you get an ``ImportError`` (and you are in the environment where AiiDA "
"was installed), you can add it to the ``PYTHONPATH`` manually:"
msgstr ""
"如果你得到一个 ``ImportError``（并且你在安装 AiiDA 的环境中），你可以手动将它添加到 ``PYTHONPATH`` 中："

#: ../../source/intro/troubleshooting.rst:289
msgid "Configuring remote SSH computers"
msgstr "配置远程 SSH 计算机"

#: ../../source/intro/troubleshooting.rst:292
msgid "ssh_kerberos installation"
msgstr "ssh_kerberos 安装"

#: ../../source/intro/troubleshooting.rst:294
msgid ""
"When installing the ``ssh_kerberos`` *optional* requirement through Anaconda"
" you may encounter the following error on Ubuntu machines:"
msgstr ""
"通过 Anaconda 安装 ``ssh_kerberos`` *optional* 要求时，您可能会在 Ubuntu 机器上遇到以下错误："

#: ../../source/intro/troubleshooting.rst:300
msgid ""
"This is related to an open issue in anaconda `ContinuumIO/anaconda-"
"issues#686`_. A potential solution is to run the following command:"
msgstr ""
"这与 anaconda `ContinuumIO/anaconda-issues#686`_ 中的一个公开问题有关。可能的解决方案是运行以下命令："

#: ../../source/intro/troubleshooting.rst:310
msgid "Output from .bashrc and/or .bash_profile on remote computers"
msgstr "远程计算机上 .bashrc 和/或 .bash_profile 的输出结果"

#: ../../source/intro/troubleshooting.rst:314
msgid "This also applies to computers configured via ``local`` transport."
msgstr "这也适用于通过 ``local`` 传输配置的计算机。"

#: ../../source/intro/troubleshooting.rst:316
msgid ""
"When connecting to remote computers, AiiDA (like other codes as ``sftp``) "
"can get confused if you have code in your ``.bashrc`` or ``.bash_profile`` "
"that produces output or e.g. runs commands like ``clean`` that require a "
"terminal."
msgstr ""
"在连接远程计算机时，如果 ``.bashrc`` 或 ``.bash_profile`` 中的代码会产生输出或运行 ``clean`` "
"等需要终端的命令，AiiDA（如 ``sftp``）就会感到困惑。"

#: ../../source/intro/troubleshooting.rst:318
msgid ""
"For instance, if you add a ``echo \"a\"`` in your ``.bashrc`` and then try "
"to SFTP a file from it, you will get an error like ``Received message too "
"long 1091174400``."
msgstr ""
"例如，如果您在 ``.bashrc`` 中添加了 ``echo 193235AD``，然后尝试从该文件进行 SFTP，就会出现类似 ``Received"
" message too long 1091174400`` 的错误。"

#: ../../source/intro/troubleshooting.rst:320
msgid ""
"If you still want to have code that needs an interactive shell (``echo``, "
"``clean``, ...), but you want to disable it for non-interactive shells, put "
"at the top of your file a guard like this:"
msgstr ""
"如果您仍想使用需要交互式 shell 的代码（``echo``、``clean``......），但又想禁用非交互式 "
"shell，可在文件顶端添加这样的保护："

#: ../../source/intro/troubleshooting.rst:329
msgid "Everything below this will not be executed in a non-interactive shell."
msgstr "以下所有内容都不会在非交互式 shell 中执行。"

#: ../../source/intro/troubleshooting.rst:333
msgid ""
"Still, you might want to have some code on top, like e.g. setting the PATH "
"or similar, if this needs to be run also in the case of non-interactive "
"shells."
msgstr "不过，如果在非交互式 shell 的情况下也需要运行该程序，则可能需要在上面添加一些代码，例如设置 PATH 或类似代码。"

#: ../../source/intro/troubleshooting.rst:335
msgid ""
"To test if a the computer does not produce spurious output, run (after "
"configuring):"
msgstr "要测试计算机是否不会产生虚假输出，请运行（配置后）："

#: ../../source/intro/troubleshooting.rst:341
msgid ""
"which checks and, in case of problems, suggests how to solve the problem."
msgstr "检查，并在出现问题时提出解决问题的建议。"

#: ../../source/intro/troubleshooting.rst:345
msgid ""
"If the methods explained above do not work, you can configure AiiDA to not "
"use a login shell when connecting to your computer, which may prevent the "
"spurious output from being printed: During ``verdi computer configure``, set"
" ``-no-use-login-shell`` or when asked to use a login shell, set it to "
"``False``. Note, however, that this may result in a slightly different "
"environment, since `certain startup files are only sourced for login shells "
"<https://unix.stackexchange.com/a/46856/155909>`_."
msgstr ""
"如果上述方法无效，可以配置 AiiDA 在连接电脑时不使用登录 shell，这样可以防止打印出假输出：在 ``verdi computer "
"configure`` 期间，设置 ``-no-use-login-shell`` 或当要求使用登录 shell 时，设置为 "
"``False``。但请注意，这可能会导致环境略有不同，因为 `certain startup files are only sourced for "
"login shells <https://unix.stackexchange.com/a/46856/155909>`_."

#: ../../source/intro/troubleshooting.rst:354
msgid "Improvements for dependencies"
msgstr "改进依赖性"

#: ../../source/intro/troubleshooting.rst:357
msgid "Activating the ASE visualizer"
msgstr "激活 ASE 展示台"

#: ../../source/intro/troubleshooting.rst:359
msgid ""
"Within a virtual environment, attempt to visualize a structure with ``ase`` "
"(either from the shell, or using the command ``verdi data core.structure "
"show --format=ase <PK>``), might end up with the following error message::"
msgstr ""
"在虚拟环境中，尝试使用 ``ase`` 可视化结构(从 shell 或使用命令 ``verdi data core.structure show "
"--format=ase <PK>``)时，可能会出现以下错误信息："

#: ../../source/intro/troubleshooting.rst:363
msgid ""
"The issue is that ``pygtk`` is currently not pip-installable. One has to "
"install it separately and create the appropriate bindings manually in the "
"virtual environment. You can follow the following procedure to get around "
"this issue:"
msgstr ""
"问题在于 ``pygtk`` 目前无法通过 pip 安装。我们必须单独安装它，并在虚拟环境中手动创建相应的绑定。您可以按照以下步骤解决这个问题："

#: ../../source/intro/troubleshooting.rst:366
msgid "Install the ``python-gtk2`` package. Under Ubuntu, do:"
msgstr "安装 ``python-gtk2`` 软件包。在 Ubuntu 下，执行"

#: ../../source/intro/troubleshooting.rst:372
msgid ""
"Create the ``lib/python2.7/dist-packages`` folder within your virtual "
"environment:"
msgstr "在虚拟环境中创建 ``lib/python2.7/dist-packages`` 文件夹："

#: ../../source/intro/troubleshooting.rst:379
msgid ""
"where ``<AIIDA_VENV_FOLDER>`` is the virtual environment folder you have "
"created during the installation process."
msgstr "其中 ``<AIIDA_VENV_FOLDER>`` 是您在安装过程中创建的虚拟环境文件夹。"

#: ../../source/intro/troubleshooting.rst:382
msgid ""
"Create several symbolic links from this folder, pointing to a number of "
"files in ``/usr/lib/python2.7/dist-packages/``:"
msgstr "从该文件夹创建多个符号链接，指向 ``/usr/lib/python2.7/dist-packages/`` 中的多个文件："

#: ../../source/intro/troubleshooting.rst:394
msgid ""
"After that, ``verdi data core.structure show --format=ase <PK>`` should "
"work."
msgstr "之后，``verdi data core.structure show --format=ase <PK>`` 应该可以工作。"

#: ../../source/intro/troubleshooting.rst:397
msgid "Use in ipython/jupyter"
msgstr "在 ipython/jupyter 中使用"

#: ../../source/intro/troubleshooting.rst:399
msgid ""
"In order to use the AiiDA objects and functions in Jupyter, this latter has "
"to be instructed to use the iPython kernel installed in the AiiDA virtual "
"environment. This happens by default if you install AiiDA with ``pip`` "
"including the ``notebook`` option, and run Jupyter from the AiiDA virtual "
"environment."
msgstr ""
"为了在 Jupyter 中使用 AiiDA 对象和函数，后者必须被指示使用安装在 AiiDA 虚拟环境中的 iPython 内核。如果你用 "
"``pip`` 安装 AiiDA，包括 ``notebook`` 选项，并从 AiiDA 虚拟环境运行 Jupyter，默认情况下就会这样。"

#: ../../source/intro/troubleshooting.rst:402
msgid ""
"If for any reason, you do not want to install Jupyter in the virtual "
"environment, you might consider to install it out of the virtual "
"environment, if not already done:"
msgstr "如果出于某种原因不想在虚拟环境中安装 Jupyter，可以考虑将其安装到虚拟环境之外（如果尚未安装）："

#: ../../source/intro/troubleshooting.rst:408
msgid "Then, activate the AiiDA virtual environment:"
msgstr "然后，激活 AiiDA 虚拟环境："

#: ../../source/intro/troubleshooting.rst:414
msgid "and setup the AiiDA iPython kernel:"
msgstr "并设置 AiiDA iPython 内核："

#: ../../source/intro/troubleshooting.rst:421
msgid "where you have chosen a meaningful name for the new kernel."
msgstr "为新内核选择一个有意义的名称。"

#: ../../source/intro/troubleshooting.rst:423
msgid "Finally, start a Jupyter server:"
msgstr "最后，启动 Jupyter 服务器："

#: ../../source/intro/troubleshooting.rst:429
msgid ""
"and from the newly opened browser tab select ``New -> <aiida.kernel.name>``"
msgstr "然后从新打开的浏览器选项卡中选择 ``New -> <aiida.kernel.name>``"

#: ../../source/intro/troubleshooting.rst:434
msgid "Increasing the logging verbosity"
msgstr "提高日志记录的冗余度"

#: ../../source/intro/troubleshooting.rst:436
msgid ""
"By default, the logging level of AiiDA is minimal to avoid too much noise in"
" the logfiles. Only warnings and errors are logged to the daemon log files, "
"while info and debug messages are discarded."
msgstr ""
"默认情况下，AiiDA 的日志级别是最低的，以避免日志文件中出现太多噪音。只有警告和错误会被记录到守护进程日志文件中，而信息和调试信息会被丢弃。"

#: ../../source/intro/troubleshooting.rst:439
msgid ""
"If you are experiencing a problem, you can increase the default minimum "
"logging level of AiiDA messages, with:"
msgstr "如果你遇到问题，你可以增加 AiiDA 信息的默认最低记录级别："

#: ../../source/intro/troubleshooting.rst:445
msgid ""
"You might also be interested in reviewing the circus log messages (the "
"``circus`` library is the daemonizer that manages the daemon runners),"
msgstr "您可能也有兴趣查看 circus 日志信息（``circus`` 库是管理守护进程运行程序的守护进程程序）、"

#: ../../source/intro/troubleshooting.rst:451
msgid ""
"however those messages are usually only relevant to debug AiiDA internals."
msgstr "但这些信息通常只与调试 AiiDA 内部有关。"

#: ../../source/intro/troubleshooting.rst:453
msgid ""
"For each profile that runs a daemon, there are two unique logfiles, one for "
"AiiDA log messages (named ``aiida-<profile_name>.log``) and one for the "
"circus logs (named ``circus-<profile_name>.log``). Those files can be found "
"in the ``~/.aiida/daemon/log`` folder."
msgstr ""
"每个运行守护进程的配置文件都有两个独特的日志文件，一个是 AiiDA 日志信息（名为 "
"``aiida-<profile_name>.log``），另一个是 circus 日志（名为 "
"``circus-<profile_name>.log``）。这些文件可以在 ``~/.aiida/daemon/log`` 文件夹中找到。"

#: ../../source/intro/troubleshooting.rst:456
msgid ""
"After restarting the daemon (``verdi daemon restart``), the number of "
"messages logged will increase significantly and may help in determining the "
"source of the problem."
msgstr "重启守护进程 (``verdi daemon restart``) 后，记录的信息数量将大幅增加，这可能有助于确定问题的根源。"

#: ../../source/intro/troubleshooting.rst:460
msgid ""
"Besides ``DEBUG``, you can also use the levels defined in the `standard "
"Python logging module "
"<https://docs.python.org/3/library/logging.html#logging-levels>`_. In "
"addition to those, AiiDA defines the custom ``REPORT`` level, which, with a "
"value of ``23``, is more verbose than the ``WARNING`` level, but less "
"verbose than ``INFO``. The ``REPORT`` level is AiiDA's default logging "
"level."
msgstr ""
"除了 ``DEBUG``，你还可以使用 `standard Python logging module "
"<https://docs.python.org/3/library/logging.html#logging-levels>`_ "
"中定义的级别。除此以外，AiiDA 定义了自定义的 ``REPORT`` 级别，其值为 ``23``，比 ``WARNING`` 级别更冗长，但比 "
"``INFO`` 少。``REPORT`` 级别是 AiiDA 的默认日志级别。"

#: ../../source/intro/troubleshooting.rst:464
msgid ""
"When the problem is solved, we suggest to reset the default logging level, "
"with:"
msgstr "问题解决后，我们建议重置默认日志级别，方法如下"

#: ../../source/intro/troubleshooting.rst:471
msgid "to avoid too much noise in the logfiles."
msgstr "以避免日志文件中出现过多噪音。"

#: ../../source/intro/troubleshooting.rst:473
msgid "The config options set for the current profile can be viewed using"
msgstr "使用以下命令可以查看为当前配置文件设置的配置选项"

#: ../../source/intro/troubleshooting.rst:479
msgid "in the ``options`` row."
msgstr "在 ``options`` 行中。"

#: ../../source/intro/tutorial.md:22
msgid "Basic tutorial"
msgstr "基本教程"

#: ../../source/intro/tutorial.md:24
msgid ""
"Welcome to the AiiDA tutorial! The goal of this tutorial is to give you a "
"basic idea of how AiiDA helps you in executing data-driven workflows. At the"
" end of this tutorial, you will know how to:"
msgstr "欢迎来到 AiiDA 教程！本教程的目的是让你了解 AiiDA 如何帮助你执行数据驱动的 workflow。在本教程结束时，你将知道如何："

#: ../../source/intro/tutorial.md:28
msgid "Store data in the database and subsequently retrieve it."
msgstr "将数据存储在数据库中，然后进行检索。"

#: ../../source/intro/tutorial.md:29
msgid ""
"Decorate a Python function such that its inputs and outputs are "
"automatically tracked."
msgstr "装饰一个 Python 函数，使其输入和输出都能被自动跟踪。"

#: ../../source/intro/tutorial.md:30
msgid "Run and monitor the status of processes."
msgstr "运行并监控进程状态"

#: ../../source/intro/tutorial.md:31
msgid "Explore and visualize the provenance graph."
msgstr "探索并可视化 provenance graph。"

#: ../../source/intro/tutorial.md:34
msgid ""
"If you are working on your own machine, note that the tutorial assumes that "
"you have a working AiiDA installation and have set up your AiiDA profile in "
"the current Python environment. If this is not the case, consult the "
"{ref}`getting started page<intro:get_started>`."
msgstr ""
"如果你在自己的机器上工作，请注意本教程假设你已经安装了 AiiDA 并在当前 Python 环境中设置了 AiiDA 配置文件。如果没有，请参考 "
"{ref}`getting started page<intro:get_started>`。"

#: ../../source/intro/tutorial.md:39
msgid ""
"This tutorial can be downloaded and run as a Jupyter Notebook: {nb-"
"download}`tutorial.ipynb` {octicon}`download`"
msgstr ""
"本教程可作为 Jupyter Notebook 下载和运行：{nb-download}`tutorial.ipynb` "
"{octicon}`download`"

#: ../../source/intro/tutorial.md:68
msgid "Provenance"
msgstr "Provenance"

#: ../../source/intro/tutorial.md:70
msgid ""
"Before we dive in, we need to briefly introduce one of the most important "
"concepts for AiiDA: *provenance*. An AiiDA database does not only contain "
"the results of your calculations, but also their inputs and each step that "
"was executed to obtain them. All of this information is stored in the form "
"of a *directed acyclic graph* (DAG). As an example, "
"{numref}`fig_intro_workchain_graph` shows the provenance of the calculations"
" of this tutorial."
msgstr ""
"在深入了解之前，我们需要简要介绍一下 AiiDA 最重要的 important 概念之一： *provenance* .AiiDA "
"数据库不仅包含计算结果，还包含计算输入以及为获得计算结果而执行的每个步骤。所有这些信息都以 *有向无环图* "
"（DAG）的形式存储。例如，{numref}`fig_intro_workchain_graph` 显示了本教程计算的 provenance 结果。"

#: ../../source/intro/tutorial.md:81
msgid "Provenance Graph of a basic AiiDA WorkChain."
msgstr "基本 AiiDA 工作链的 Provenance Graph。"

#: ../../source/intro/tutorial.md:84
msgid ""
"In the provenance graph, you can see different types of *nodes* represented "
"by different shapes. The green ellipses are `Data` nodes, the blue ellipse "
"is a `Code` node, and the rectangles represent *processes*, i.e. the "
"calculations performed in your *workflow*."
msgstr ""
"在 provenance graph 中，您可以看到不同类型的 *nodes* 用不同的形状表示。绿色椭圆是 `Data` node，蓝色椭圆是 "
"`Code` node，矩形代表 *过程* ，即在 *workflow* 中执行的计算。"

#: ../../source/intro/tutorial.md:87
msgid ""
"The provenance graph allows us to not only see what data we have, but also "
"how it was produced. During this tutorial, we will be using AiiDA to "
"generate the provenance graph in {numref}`fig_intro_workchain_graph` step by"
" step."
msgstr ""
"provenance graph 让我们不仅能看到我们拥有哪些数据，还能看到这些数据是如何产生的。在本教程中，我们将使用 AiiDA 逐步生成 "
"{numref}`fig_intro_workchain_graph` 中的 provenance graph。"

#: ../../source/intro/tutorial.md:90
msgid "Data nodes"
msgstr "数据 nodes"

#: ../../source/intro/tutorial.md:92
msgid ""
"Before running any calculations, let's create and store a *data node*. AiiDA"
" ships with an interactive IPython shell that has many basic AiiDA classes "
"pre-loaded. To start the IPython shell, simply type in the terminal:"
msgstr ""
"在运行任何计算之前，让我们创建并存储一个 *data node*。AiiDA 附带一个交互式 IPython shell，预装了许多 AiiDA "
"基本类。要启动 IPython shell，只需在终端输入"

#: ../../source/intro/tutorial.md:100
msgid ""
"AiiDA implements data node types for the most common types of data (int, "
"float, str, etc.), which you can extend with your own (composite) data node "
"types if needed. For this tutorial, we'll keep it very simple, and start by "
"initializing an `Int` node and assigning it to the `node` variable:"
msgstr ""
"AiiDA 实现了最常见的数据 node 类型（int、float、str 等），如果需要，你可以扩展你自己的（复合）数据 node "
"类型。在本教程中，我们将保持非常简单，首先初始化一个 `Int` node 并将其赋值给 `node` 变量："

#: ../../source/intro/tutorial.md:109
msgid "We can check the contents of the `node` variable like this:"
msgstr "我们可以这样检查 `node` 变量的内容："

#: ../../source/intro/tutorial.md:115
msgid "Quite a bit of information on our freshly created node is returned:"
msgstr "关于我们刚刚创建的 node 的许多信息都已返回："

#: ../../source/intro/tutorial.md:117
msgid "The data node is of the type `Int`"
msgstr "数据 node 属于 `Int` 类型"

#: ../../source/intro/tutorial.md:118
msgid ""
"The node has the *universally unique identifier* (**UUID**) "
"`eac48d2b-ae20-438b-aeab-2d02b69eb6a8`"
msgstr "node 具有 *通用唯一标识符* ( **UUID** ) `eac48d2b-ae20-438b-aeab-2d02b69eb6a8`"

#: ../../source/intro/tutorial.md:119
msgid "The node is currently not stored in the database `(unstored)`"
msgstr "数据库 `(unstored)` 当前未存储 node"

#: ../../source/intro/tutorial.md:120
msgid "The integer value of the node is `2`"
msgstr "node 的整数值是 `2`"

#: ../../source/intro/tutorial.md:122
msgid "Let's store the node in the database:"
msgstr "将 node 保存在数据库中："

#: ../../source/intro/tutorial.md:128
msgid ""
"As you can see, the data node has now been assigned a *primary key* "
"(**PK**), a number that identifies the node in your database `(pk: 1)`. The "
"PK and UUID both reference the node with the only difference that the PK is "
"unique *for your local database only*, whereas the UUID is a globally unique"
" identifier and can therefore be used between *different* databases. Use the"
" PK only if you are working within a single database, i.e. in an interactive"
" session and the UUID in all other cases."
msgstr ""
"如您所见，数据 node 现在已被分配了一个 *主键* ( **PK** )，这是一个在您的数据库``(pk: 1)``中标识 node 的数字。PK "
"和 UUID 都指向 node，唯一的区别是 PK 仅对本地数据库*唯一，而 UUID "
"是全局唯一标识符，因此可在*不同的数据库之间使用。只有在单个数据库内工作时，即在交互会话中，才使用 PK，而在所有其他情况下都使用 UUID。"

#: ../../source/intro/tutorial.md:133
msgid ""
"The PK numbers shown throughout this tutorial assume that you start from a "
"completely empty database. It is possible that the nodes' PKs will be "
"different for your database!"
msgstr "本教程中显示的 PK 编号假定您是从一个完全空白的数据库开始的。您的数据库中 nodes 的 PK 可能会有所不同！"

#: ../../source/intro/tutorial.md:136
msgid ""
"The UUIDs are generated randomly and are, therefore, **guaranteed** to be "
"different."
msgstr "UUID 是随机生成的，因此 **保证** 不同。"

#: ../../source/intro/tutorial.md:139
msgid ""
"Next, let's leave the IPython shell by typing `exit()` and then enter. Back "
"in the terminal, use the `verdi` command line interface (CLI) to check the "
"data node we have just created:"
msgstr ""
"接下来，让我们离开 IPython shell，输入 `exit()`，然后回车。回到终端，使用 `verdi` "
"命令行界面（CLI）检查我们刚刚创建的数据 node："

#: ../../source/intro/tutorial.md:146
msgid ""
"Once again, we can see that the node is of type `Int`, has PK = 1, and UUID "
"= `eac48d2b-ae20-438b-aeab-2d02b69eb6a8`. Besides this information, the "
"`verdi node show` command also shows the (empty) `label` and `description`, "
"as well as the time the node was created (`ctime`) and last modified "
"(`mtime`)."
msgstr ""
"我们再次可以看到，node 的类型是 `Int`，PK = 1，UUID = "
"`eac48d2b-ae20-438b-aeab-2d02b69eb6a8`。除了这些信息，``verdi node "
"show``命令还显示了（空）`label` 和 `description`，以及 node "
"的创建时间（`ctime`）和最后修改时间（`mtime`）。"

#: ../../source/intro/tutorial.md:150
msgid ""
"AiiDA already provides many standard data types, but you can also "
"{ref}`create your own<topics:data_types:plugin>`."
msgstr ""
"AiiDA 已经提供了许多标准数据类型，但您也可以使用 {ref}`create your "
"own<topics:data_types:plugin>`。"

#: ../../source/intro/tutorial.md:153
msgid "Calculation functions"
msgstr "计算功能"

#: ../../source/intro/tutorial.md:155
msgid ""
"Once your data is stored in the database, it is ready to be used for some "
"computational task. For example, let's say you want to multiply two `Int` "
"data nodes. The following Python function:"
msgstr "数据存储到数据库后，就可以用于某些计算任务了。例如，假设您想将两个 `Int` 数据 node 相乘。下面的 Python 函数"

#: ../../source/intro/tutorial.md:164
msgid ""
"will give the desired result when applied to two `Int` nodes, but the "
"calculation will not be stored in the provenance graph. However, we can use "
"a [Python decorator](https://docs.python.org/3/glossary.html#term-decorator)"
" provided by AiiDA to automatically make it part of the provenance graph. "
"Start up the AiiDA IPython shell again using `verdi shell` and execute the "
"following code snippet:"
msgstr ""
"在两个 `Int` node 上应用时，将得到所需的结果，但计算结果不会存储在 provenance graph 中。不过，我们可以使用 AiiDA "
"提供的[Python 装饰器](https://docs.python.org/3/glossary.html#term-"
"decorator)，自动使其成为 provenance graph 的一部分。使用 `verdi shell` 再次启动 AiiDA IPython "
"shell，执行以下代码片段："

#: ../../source/intro/tutorial.md:176
msgid ""
"This converts the `multiply` function into an AiIDA *calculation function*, "
"the most basic execution unit in AiiDA. Next, load the `Int` node you have "
"created in the previous section using the `load_node` function and the PK of"
" the data node:"
msgstr ""
"这样就将 `multiply` 函数转换为 AiiDA 的 *计算函数* ，这是 AiiDA 中最基本的执行单元。接下来，使用 `load_node` "
"函数和数据 node 的 PK 加载上一节创建的 `Int` node："

#: ../../source/intro/tutorial.md:183
msgid ""
"Of course, we need another integer to multiply with the first one. Let's "
"create a new `Int` data node and assign it to the variable `y`:"
msgstr "当然，我们需要另一个整数与第一个整数相乘。让我们创建一个新的 `Int` 数据 node，并将其赋值给变量 `y`："

#: ../../source/intro/tutorial.md:190
msgid "Now it's time to multiply the two numbers!"
msgstr "现在是将这两个数字相乘的时候了！"

#: ../../source/intro/tutorial.md:196
msgid ""
"Success! The `calcfunction`-decorated `multiply` function has multiplied the"
" two `Int` data nodes and returned a new `Int` data node whose value is the "
"product of the two input nodes. Note that by executing the `multiply` "
"function, all input and output nodes are automatically stored in the "
"database:"
msgstr ""
"成功！装饰了 `calcfunction` 的 `multiply` 函数对两个 `Int` 数据 node 进行了乘法运算，并返回了一个新的 "
"`Int` 数据 node，其值是两个输入 node 的乘积。请注意，执行 `multiply` 函数后，所有输入和输出 node "
"都会自动存储在数据库中："

#: ../../source/intro/tutorial.md:204
msgid ""
"We had not yet stored the data node assigned to the `y` variable, but by "
"providing it as an input argument to the `multiply` function, it was "
"automatically stored with PK = 2. Similarly, the returned `Int` node with "
"value 6 has been stored with PK = 4."
msgstr ""
"我们尚未存储分配给 `y` 变量的数据 node，但将其作为输入参数提供给 `multiply` 函数后，它就自动以 PK = 2 "
"的值存储了。同样，返回值为 6 的 `Int` node 也被存储为 PK = 4。"

#: ../../source/intro/tutorial.md:207
msgid ""
"Let's once again leave the IPython shell with `exit()` and look for the "
"process we have just run using the `verdi` CLI:"
msgstr "让我们再次离开 `exit()` 的 IPython shell，使用 `verdi` CLI 查找刚才运行的进程："

#: ../../source/intro/tutorial.md:213
msgid ""
"The returned list will be empty, but don't worry! By default, `verdi process"
" list` only returns the *active* processes. If you want to see *all* "
"processes (i.e. also the processes that are *terminated*), simply add the "
"`-a` option:"
msgstr ""
"返回的列表将是空的，但不用担心！默认情况下，``verdi 进程列表``只返回 *活跃* 的进程。如果想查看 *所有* 进程（即 *终止* "
"的进程），只需添加 `-a` 选项即可："

#: ../../source/intro/tutorial.md:221
msgid ""
"We can see that our `multiply` calcfunction was created 1 minute ago, "
"assigned the PK 3, and has `Finished`."
msgstr "我们可以看到，我们的 `multiply` 计算函数是在 1 分钟前创建的，被分配了 PK 3，并且有 `Finished`。"

#: ../../source/intro/tutorial.md:223
msgid ""
"As a final step, let's have a look at the provenance of this simple "
"calculation. The provenance graph can be automatically generated using the "
"verdi CLI. Let's generate the provenance graph for the `multiply` "
"calculation function we have just run with PK = 3:"
msgstr ""
"最后，让我们来看看这个简单计算的 provenance 结果。provenance graph 可以使用 verdi CLI "
"自动生成。让我们为刚才运行的 `multiply` 计算函数（PK = 3）生成 provenance graph："

#: ../../source/intro/tutorial.md:231
msgid ""
"The command will write the provenance graph to a `.pdf` file. Use your "
"favorite PDF viewer to have a look. It should look something like the graph "
"shown below."
msgstr "该命令将把 provenance graph 写入 `.pdf` 文件。请使用您最喜欢的 PDF 查看器查看。它看起来应该与下图类似。"

#: ../../source/intro/tutorial.md:237
msgid "Provenance graph of the `multiply` calculation function."
msgstr "`multiply` 计算功能的 Provenance graph。"

#: ../../source/intro/tutorial.md:255
msgid ""
"Remember that the PK of the `CalcJob` can be different for your database."
msgstr "请记住，`CalcJob` 的 PK 可能与您的数据库不同。"

#: ../../source/intro/tutorial.md:260
msgid "CalcJobs"
msgstr "计算工作"

#: ../../source/intro/tutorial.md:262
msgid ""
"When running calculations that require an external code or run on a remote "
"machine, a simple calculation function is no longer sufficient. For this "
"purpose, AiiDA provides the `CalcJob` process class."
msgstr "当运行需要外部代码或在远程机器上运行的计算时，简单的计算函数已经不能满足需要。为此，AiiDA 提供了 `CalcJob` 进程类。"

#: ../../source/intro/tutorial.md:265
msgid ""
"To run a `CalcJob`, you need to set up two things: a `code` that is going to"
" implement the desired calculation and a `computer` for the calculation to "
"run on."
msgstr "要运行 `CalcJob`，需要设置两样东西：执行所需计算的 `code` 和运行计算的 `computer`。"

#: ../../source/intro/tutorial.md:267
msgid ""
"If you're running this tutorial in the Quantum Mobile VM or on Binder, these"
" have been pre-configured for you. If you're running on your own machine, "
"you can follow the instructions in the panel below."
msgstr ""
"如果你在 Quantum Mobile VM 或 Binder "
"上运行本教程，这些都已为你预先配置好。如果在自己的机器上运行，可以按照下面面板中的说明进行操作。"

#: ../../source/intro/tutorial.md:270
msgid "More details for how to {ref}`run external codes <how-to:run-codes>`."
msgstr "有关如何使用 {ref}`run external codes <how-to:run-codes>` 的更多详情。"

#: ../../source/intro/tutorial.md:0
msgid "Install localhost computer and code"
msgstr "安装本地主机计算机和代码"

#: ../../source/intro/tutorial.md:275
msgid ""
"Let's begin by setting up the computer using the ``verdi computer`` "
"subcommand:"
msgstr "首先使用 ``verdi computer`` 子命令设置计算机："

#: ../../source/intro/tutorial.md:282
msgid "The first commands sets up the computer with the following options:"
msgstr "第一条命令使用以下选项设置计算机："

#: ../../source/intro/tutorial.md:284
msgid "*label* (`-L`): tutor"
msgstr "*标签* （`-L`）：导师"

#: ../../source/intro/tutorial.md:285
msgid "*hostname* (`-H`): localhost"
msgstr "*hostname* (`-H`)：localhost"

#: ../../source/intro/tutorial.md:286
msgid "*transport* (`-T`): local"
msgstr "*transport* (`-T`)：本地"

#: ../../source/intro/tutorial.md:287
msgid "*scheduler* (`-S`): direct"
msgstr "*scheduler* (`-S`)：直达"

#: ../../source/intro/tutorial.md:288
msgid "*work-dir* (`-w`): The `work` subdirectory of the current directory"
msgstr "*work-dir* （`-w`）：当前目录的 `work` 子目录"

#: ../../source/intro/tutorial.md:290
msgid ""
"The second command *configures* the computer with a minimum interval between"
" connections (`--safe-interval`) of 1 second. For both commands, the *non-"
"interactive* option (`-n`) is added to not prompt for extra input."
msgstr ""
"第二条命令 * 配置计算机，连接 (`--safe-interval`) 的最小间隔时间为 1 秒。这两条命令都添加了 *非交互* 选项 "
"(`-n`)，以避免提示输入额外信息。"

#: ../../source/intro/tutorial.md:293
msgid "Next, let's set up the code we're going to use for the tutorial:"
msgstr "接下来，让我们设置本教程要使用的代码："

#: ../../source/intro/tutorial.md:299
msgid ""
"This command sets up a code with *label* `add` on the *computer* `tutor`, "
"using the *plugin* `core.arithmetic.add`."
msgstr ""
"该命令使用 *plugin* `core.arithmetic.add` 在 *computer* `tutor` 上设置 *label* `add` "
"的代码。"

#: ../../source/intro/tutorial.md:311
msgid ""
"A typical real-world example of a computer is a remote supercomputing "
"facility. Codes can be anything from a Python script to powerful *ab initio*"
" codes such as Quantum Espresso or machine learning tools like Tensorflow. "
"Let's have a look at the codes that are available to us:"
msgstr ""
"计算机在现实世界中的一个典型例子是远程超级计算设施。代码可以是任何东西，从Python脚本到强大的*ab initio*代码（如Quantum "
"Espresso）或机器学习工具（如Tensorflow）。让我们来看看我们可以使用的代码："

#: ../../source/intro/tutorial.md:319
msgid ""
"You can see a single code `add@tutor`, with PK = 5, in the printed list. "
"This code allows us to add two integers together. The `add@tutor` identifier"
" indicates that the code with label `add` is run on the computer with label "
"`tutor`. To see more details about the computer, you can use the following "
"`verdi` command:"
msgstr ""
"您可以在打印的列表中看到 PK = 5 的单个代码 `add@tutor`。该代码允许我们将两个整数相加。`add@tutor` 标识表明，标签为 "
"`add` 的代码在标签为 `tutor` 的计算机上运行。要查看有关计算机的更多详细信息，可以使用以下 `verdi` 命令："

#: ../../source/intro/tutorial.md:328
msgid ""
"We can see that the *Work directory* has been set up as the `work` "
"subdirectory of the current directory. This is the directory in which the "
"calculations running on the `tutor` computer will be executed."
msgstr "我们可以看到，*Work 目录* 已被设置为当前目录下的 `work` 子目录。在 `tutor` 计算机上运行的计算将在此目录下执行。"

#: ../../source/intro/tutorial.md:332
msgid ""
"You may have noticed that the PK of the `tutor` computer is 1, same as the "
"`Int` node we created at the start of this tutorial. This is because "
"different entities, such as nodes, computers and groups, are stored in "
"different tables of the database. So, the PKs for each entity type are "
"unique for each database, but entities of different types can have the same "
"PK within one database."
msgstr ""
"您可能已经注意到，`tutor` 计算机的 PK 值是 1，与本教程开始时创建的 `Int` node 相同。这是因为 "
"node、计算机和组等不同实体存储在数据库的不同表中。因此，每个实体类型的 PK 在每个数据库中都是唯一的，但不同类型的实体可以在一个数据库中具有相同的"
" PK。"

#: ../../source/intro/tutorial.md:337
msgid ""
"Let's now start up the `verdi shell` again and load the `add@tutor` code "
"using its label:"
msgstr "现在让我们再次启动 `verdi shell` 并使用其标签加载 `add@tutor` 代码："

#: ../../source/intro/tutorial.md:344
msgid ""
"Every code has a convenient tool for setting up the required input, called "
"the *builder*. It can be obtained by using the `get_builder` method:"
msgstr "每个代码都有一个用于设置所需输入的便捷工具，称为 `` *生成器* ``。它可以通过使用 `get_builder` 方法获得："

#: ../../source/intro/tutorial.md:352
msgid ""
"Using the builder, you can easily set up the calculation by directly "
"providing the input arguments. Let's use the `Int` node that was created by "
"our previous `calcfunction` as one of the inputs and a new node as the "
"second input:"
msgstr ""
"使用生成器，您可以直接提供输入参数，轻松设置计算。让我们使用之前的 `calcfunction` 创建的 `Int` node "
"作为输入参数之一，并使用新的 node 作为第二个输入参数："

#: ../../source/intro/tutorial.md:361
msgid ""
"In case that your nodes' PKs are different and you don't remember the PK of "
"the output node from the previous calculation, check the provenance graph "
"you generated earlier and use the UUID of the output node instead:"
msgstr ""
"如果您的 node 的 PK 不同，而且您不记得之前计算的输出 node 的 PK，请检查您之前生成的 provenance graph 并使用输出 "
"node 的 UUID："

#: ../../source/intro/tutorial.md:368
msgid ""
"Note that you don't have to provide the entire UUID to load the node. As "
"long as the first part of the UUID is unique within your database, AiiDA "
"will find the node you are looking for."
msgstr ""
"请注意，你不必提供整个 UUID 来加载 node。只要 UUID 的第一部分在你的数据库中是唯一的，AiiDA 就能找到你要的 node。"

#: ../../source/intro/tutorial.md:372
msgid ""
"One nifty feature of the builder is the ability to use tab completion for "
"the inputs. Try it out by typing `builder.` + `<TAB>` in the verdi shell."
msgstr "该生成器的一个有趣功能是可以使用制表符完成输入。在 verdi shell 中键入 `builder.` + `<TAB>`，试试看。"

#: ../../source/intro/tutorial.md:376
msgid ""
"To execute the `CalcJob`, we use the `run` function provided by the AiiDA "
"engine, and wait for the process to complete:"
msgstr "为了执行 `CalcJob`，我们使用 AiiDA engine 提供的 `run` 功能，并等待过程完成："

#: ../../source/intro/tutorial.md:382
msgid ""
"Besides the sum of the two `Int` nodes, the calculation function also "
"returns two other outputs: one of type `RemoteData` and one of type "
"`FolderData`. See the {ref}`topics section on calculation jobs "
"<topics:calculations:usage:calcfunctions>` for more details. Now, exit the "
"IPython shell and once more check for *all* processes:"
msgstr ""
"除了两个 `Int` node 的和之外，计算函数还返回另外两个输出：一个是 `RemoteData` 类型，另一个是 `FolderData` "
"类型。更多详情，请参阅 {ref}`topics section on calculation jobs "
"<topics:calculations:usage:calcfunctions>`。现在，退出 IPython shell 并再次检查 *所有* "
"进程："

#: ../../source/intro/tutorial.md:390
msgid ""
"You should now see two processes in the list. One is the `multiply` "
"calcfunction you ran earlier, the second is the `ArithmeticAddCalculation` "
"CalcJob that you have just run. Grab the PK of the "
"`ArithmeticAddCalculation`, and generate the provenance graph. The result "
"should look like the graph shown below."
msgstr ""
"现在，您应该可以在列表中看到两个进程。一个是您之前运行的 `multiply` 计算函数，另一个是您刚刚运行的 "
"`ArithmeticAddCalculation` 计算任务。抓取 `ArithmeticAddCalculation` 的 PK，生成 "
"provenance graph。结果应如下图所示。"

#: ../../source/intro/tutorial.md:419
msgid ""
"You can see more details on any process, including its inputs and outputs, "
"using the verdi shell:"
msgstr "您可以使用 verdi shell 查看任何进程的详细信息，包括其输入和输出："

#: ../../source/intro/tutorial.md:425
msgid "Workflows"
msgstr "Workflows"

#: ../../source/intro/tutorial.md:427
msgid ""
"So far we have executed each process manually. AiiDA allows us to automate "
"these steps by linking them together in a *workflow*, whose provenance is "
"stored to ensure reproducibility. For this tutorial we have prepared a basic"
" `WorkChain` that is already implemented in `aiida-core`. You can see the "
"code below:"
msgstr ""
"到目前为止，我们都是手动执行每个过程。AiiDA 允许我们将这些步骤自动连接到 *workflow* 中，并存储其 provenance "
"以确保可重复性。在本教程中，我们准备了一个已经在 `aiida-core` 中实现的 `WorkChain` 基本电路。代码如下："

#: ../../source/intro/tutorial.md:0
msgid "MultiplyAddWorkChain code"
msgstr "乘法添加工作链代码"

#: ../../source/intro/tutorial.md:439
msgid ""
"First, we recognize the `multiply` function we have used earlier, decorated "
"as a `calcfunction`. The `define` class method specifies the `input` and "
"`output` of the `WorkChain`, as well as the `outline`, which are the steps "
"of the workflow. These steps are provided as methods of the "
"`MultiplyAddWorkChain` class."
msgstr ""
"首先，我们识别出前面使用过的 `multiply` 函数，它被装饰成 `calcfunction`。`define` 类方法指定了 "
"`WorkChain` 的 `input` 和 `output`，以及 workflow 的步骤 `outline`。这些步骤作为 "
"`MultiplyAddWorkChain` 类的方法提供。"

#: ../../source/intro/tutorial.md:504
msgid ""
"Besides WorkChain's, workflows can also be implemented as {ref}`work "
"functions <topics:workflows:concepts:workfunctions>`. These are ideal for "
"workflows that are not very computationally intensive and can be easily "
"implemented in a Python function."
msgstr ""
"除了 WorkChain 之外，workflow 也可以实现为 {ref}`work functions "
"<topics:workflows:concepts:workfunctions>`。对于计算密集度不高的 workflow "
"而言，这些都是理想的选择，而且可以在 Python 函数中轻松实现。"

#: ../../source/intro/tutorial.md:508
msgid "Let's run the `WorkChain` above!"
msgstr "让我们运行上面的 `WorkChain`！"

#: ../../source/intro/tutorial.md:510
msgid ""
"Start up the `verdi shell` and load the `MultiplyAddWorkChain` using the "
"`WorkflowFactory`:"
msgstr "启动 `verdi shell` 并使用 `WorkflowFactory` 加载 `MultiplyAddWorkChain`："

#: ../../source/intro/tutorial.md:517
msgid ""
"The `WorkflowFactory` loads workflows based on their {ref}`entry point "
"<topics:plugins:entrypoints>`, e.g. `'core.arithmetic.multiply_add'` in this"
" case. The entry point mechanism allows AiiDA to automatically discover "
"workflows provided by  `aiida-core` and {ref}`AiiDA plugins <how-to:plugins-"
"install>`, and display them to the user, e.g. via `verdi plugin list "
"aiida.workflows`. Pass the entry point as an argument to display detailed "
"information, e.g. via `verdi plugin list aiida.workflows "
"core.arithmetic.multiply_add`."
msgstr ""
"`WorkflowFactory` 根据其 {ref}`entry point <topics:plugins:entrypoints>` 加载 "
"workflow，例如本例中的 `'core.arithmetic.multiply_add'`。entry point 机制允许 AiiDA 自动发现"
" `aiida-core` 和 {ref}`AiiDA plugins <how-to:plugins-install>` 提供的 "
"workflow，并显示给用户，例如通过 `verdi plugin list aiida.workflows`。将 entry point "
"作为参数传递，以显示详细信息，例如通过 `verdi plugin list aiida.workflows "
"core.arithmetic.multiply_add`。"

#: ../../source/intro/tutorial.md:520
msgid ""
"Similar to a `CalcJob`, the `WorkChain` input can be set up using a builder:"
msgstr "与 `CalcJob` 类似，`WorkChain` 输入也可以使用构建器进行设置："

#: ../../source/intro/tutorial.md:532
msgid ""
"Once the `WorkChain` input has been set up, we run it with the AiiDA engine:"
msgstr "设置好 `WorkChain` 输入后，我们用 AiiDA engine 运行它："

#: ../../source/intro/tutorial.md:539
msgid "Now quickly leave the IPython shell and check the process list:"
msgstr "现在迅速离开 IPython shell，查看进程列表："

#: ../../source/intro/tutorial.md:0 ../../source/intro/tutorial.md:610
msgid "Submitting to the daemon"
msgstr "向守护进程提交"

#: ../../source/intro/tutorial.md:547
msgid ""
"If instead we had submitted to the daemon (see {ref}`tutorial:daemon`), we "
"would see the the process status of the workchain and its dependants:"
msgstr "如果我们提交的是守护进程（参见 {ref}`tutorial:daemon`），就会看到工作链及其附属进程的进程状态："

#: ../../source/intro/tutorial.md:567
msgid ""
"We can see that the `MultiplyAddWorkChain` is currently waiting for its "
"*child process*, the `ArithmeticAddCalculation`, to finish. Check the "
"process list again for *all* processes (You should know how by now!). After "
"about half a minute, all the processes should be in the `Finished` state. "
"The `verdi process status` command prints a *hierarchical* overview of the "
"processes called by the work chain:"
msgstr ""
"我们可以看到，`MultiplyAddWorkChain` 目前正在等待其 *子进程* `ArithmeticAddCalculation` "
"的结束。再次检查进程列表中的所有个进程（你现在应该知道怎么做了！）。大约半分钟后，所有进程都应该处于 `Finished` 状态。 `verdi "
"process status` 命令会打印工作链调用的进程的 *层次* 概览："

#: ../../source/intro/tutorial.md:576
msgid ""
"The bracket `[3:result]` indicates the current step in the outline of the "
"{py:class}`~aiida.workflows.arithmetic.multiply_add.MultiplyAddWorkChain` "
"(step 3, with name `result`). The `process status` is particularly useful "
"for debugging complex work chains, since it helps pinpoint where a problem "
"occurred."
msgstr ""
"括号 `[3:result]` 表示 "
"{py:class}`~aiida.workflows.arithmetic.multiply_add.MultiplyAddWorkChain`（步骤"
" 3，名称为 `result`）大纲中的当前步骤。 `process status` 对于调试复杂的工作链特别有用，因为它可以帮助找出问题发生的位置。"

#: ../../source/intro/tutorial.md:579
msgid ""
"We can now generate the full provenance graph for the `WorkChain` with:"
msgstr "现在，我们可以为 `WorkChain` 生成完整的 provenance graph 数据："

#: ../../source/intro/tutorial.md:605
msgid ""
"Look familiar? The provenance graph should be similar to the one we showed "
"at the start of this tutorial ({numref}`fig_intro_workchain_graph`)."
msgstr ""
"眼熟吗？provenance graph 应该与我们在本教程开始时展示的 provenance graph "
"类似（{numref}`fig_intro_workchain_graph`）。"

#: ../../source/intro/tutorial.md:612
msgid ""
"When we used the `run` command in the previous sections, the IPython shell "
"was blocked while it was waiting for the `CalcJob` to finish. This is not a "
"problem when we're simply adding two number together, but if we want to run "
"multiple calculations that take hours or days, this is no longer practical. "
"Instead, we are going to *submit* the `CalcJob` to the AiiDA *daemon*. The "
"daemon is a program that runs in the background and manages submitted "
"calculations until they are *terminated*. Let's first check the status of "
"the daemon using the `verdi` CLI:"
msgstr ""
"当我们在前面的章节中使用 `run` 命令时，IPython shell 在等待 `CalcJob` "
"完成时被阻塞。如果我们只是简单地将两个数字相加，这并不是问题，但如果我们要运行多个需要数小时或数天的计算，这就不太现实了。相反，我们要把 "
"`CalcJob` 提交给 AiiDA 守护进程。守护进程是一个在后台运行的程序，负责管理已提交的计算，直到*结束。让我们首先使用 `verdi` "
"CLI 检查守护进程的状态："

#: ../../source/intro/tutorial.md:622
msgid ""
"If the daemon is running, the output will be something like the following:"
msgstr "如果守护进程正在运行，输出结果将如下所示："

#: ../../source/intro/tutorial.md:634
msgid "In this case, let's stop it for now:"
msgstr "在这种情况下，让我们暂时停止吧："

#: ../../source/intro/tutorial.md:640
msgid ""
"Next, let's *submit* the `CalcJob` we ran previously. Start the `verdi "
"shell` and execute the Python code snippet below. This follows all the steps"
" we did previously, but now uses the `submit` function instead of `run`:"
msgstr ""
"接下来，让我们 *提交* 之前运行的 `CalcJob`。启动 `verdi shell` 并执行下面的 Python "
"代码段。这与我们之前所做的步骤相同，但现在使用的是 `submit` 函数，而不是 `run`："

#: ../../source/intro/tutorial.md:655
msgid ""
"When using `submit` the calculation job is not run in the local interpreter "
"but is sent off to the daemon and you get back control instantly. Instead of"
" the *result* of the calculation, it returns the node of the `CalcJob` that "
"was just submitted:"
msgstr ""
"使用 `submit` 时，计算任务不在本地解释器中运行，而是发送到守护进程，您可以立即取回控制权。它返回的不是计算的*结果，而是刚刚提交的 "
"`CalcJob` 的 node："

#: ../../source/intro/tutorial.md:662
msgid "Let's exit the IPython shell and have a look at the process list:"
msgstr "让我们退出 IPython shell，看看进程列表："

#: ../../source/intro/tutorial.md:668
msgid ""
"You should see the `CalcJob` you have just submitted, with the state "
"`Created`:"
msgstr "您应该能看到刚刚提交的 `CalcJob` 文件，其状态为 `Created`："

#: ../../source/intro/tutorial.md:680
msgid ""
"The `CalcJob` process is now waiting to be picked up by a daemon runner, but"
" the daemon is currently disabled. Let's start it up (again):"
msgstr "`CalcJob` 进程现在正等待守护进程运行程序的启动，但该守护进程目前已被禁用。让我们再次启动它："

#: ../../source/intro/tutorial.md:687
msgid ""
"Now you can either use `verdi process list` to follow the execution of the "
"`CalcJob`, or `watch` its progress:"
msgstr "现在，您可以使用 `verdi 进程列表` 来跟踪 `CalcJob` 或 `watch` 的执行进度："

#: ../../source/intro/tutorial.md:693
msgid ""
"Let's wait for the `CalcJob` to complete and then use `verdi process list "
"-a` to see all processes we have run so far:"
msgstr "让我们等待 `CalcJob` 完成，然后使用 `verdi process list -a` 查看迄今为止运行的所有进程："

#: ../../source/intro/tutorial.md:709
msgid "Next Steps"
msgstr "下一步工作"

#: ../../source/intro/tutorial.md:711
msgid ""
"Congratulations! You have completed the first step to becoming an AiiDA "
"expert."
msgstr "恭喜您你已经完成了成为 AiiDA 专家的第一步。"

#: ../../source/intro/tutorial.md:713
msgid ""
"We have compiled how-to guides that are especially relevant for the "
"following use cases:"
msgstr "我们汇编了与以下使用案例特别相关的操作指南："

#: ../../source/intro/tutorial.md:0
msgid "Run pure Python lightweight computations"
msgstr "运行纯 Python 轻量级计算"

#: ../../source/intro/tutorial.md:719
msgid "Designing a workflow"
msgstr "设计 workflow"

#: ../../source/intro/tutorial.md:720
msgid ""
"After reading the {ref}`Basic Tutorial <tutorial:basic>`, you may want to "
"learn about how to encode the logic of a typical scientific workflow in the "
"{ref}`writing workflows how-to <how-to:write-workflows>`."
msgstr ""
"阅读完 {ref}`Basic Tutorial <tutorial:basic>` 后，您可能想了解如何在 {ref}`writing "
"workflows how-to <how-to:write-workflows>` 中对典型科学 workflow 的逻辑进行编码。"

#: ../../source/intro/tutorial.md:722
msgid "Reusable data types"
msgstr "可重复使用的数据类型"

#: ../../source/intro/tutorial.md:723
msgid ""
"If you have a certain input or output data type, which you use often, then "
"you may wish to turn it into its own {ref}`data plugin "
"<topics:data_types:plugin>`."
msgstr ""
"如果您有某种经常使用的输入或输出数据类型，那么您可能希望将其变成自己的 {ref}`data plugin "
"<topics:data_types:plugin>`。"

#: ../../source/intro/tutorial.md:725
msgid "Finding and querying for your data"
msgstr "查找和查询数据"

#: ../../source/intro/tutorial.md:726 ../../source/intro/tutorial.md:759
msgid ""
"Once you have run multiple computations, the {ref}`find and query data how-"
"to <how-to:query>` can show you how to efficiently explore your data. The "
"data lineage can also be visualised as a {ref}`provenance graph <how-"
"to:data:visualise-provenance>`."
msgstr ""
"运行多次计算后，{ref}`find and query data how-to <how-to:query>` "
"可以告诉您如何有效地探索数据。数据序列也可以可视化为 {ref}`provenance graph <how-to:data:visualise-"
"provenance>`。"

#: ../../source/intro/tutorial.md:728 ../../source/intro/tutorial.md:761
msgid "Sharing your data"
msgstr "共享您的数据"

#: ../../source/intro/tutorial.md:729 ../../source/intro/tutorial.md:762
msgid ""
"You can export all or part of your data to file with the {ref}`export/import"
" functionality<how-to:share:archives>` or you can even serve your data over "
"HTTP(S) using the {ref}`AiiDA REST API <how-to:share:serve>`."
msgstr ""
"您可以使用 {ref}`export/import functionality<how-to:share:archives>` "
"将全部或部分数据导出到文件中，也可以使用 {ref}`AiiDA REST API <how-to:share:serve>` 通过 HTTP(S) "
"提供数据。"

#: ../../source/intro/tutorial.md:731
msgid "Sharing your workflows"
msgstr "分享您的 workflows"

#: ../../source/intro/tutorial.md:732
msgid ""
"Once you have a working computation workflow, you may also wish to "
"{ref}`package it into a python module <how-to:plugins-develop>` for others "
"to use."
msgstr ""
"一旦您有了可用的计算 workflow，您可能还希望将 {ref}`package it into a python module <how-"
"to:plugins-develop>` 提供给其他人使用。"

#: ../../source/intro/tutorial.md:0
msgid "Run compute-intensive codes"
msgstr "运行计算密集型代码"

#: ../../source/intro/tutorial.md:737 ../../source/intro/tutorial.md:754
msgid "Working with external codes"
msgstr "使用外部代码"

#: ../../source/intro/tutorial.md:738 ../../source/intro/tutorial.md:755
msgid ""
"Existing calculation plugins, for interfacing with external codes, are "
"available on the [aiida plugin registry](https://aiidateam.github.io/aiida-"
"registry/). If none meet your needs, then the {ref}`external codes how-to "
"<how-to:plugin-codes>` can show you how to create your own calculation "
"plugin."
msgstr ""
"用于与外部代码接口的现有计算插件可在 [aiida 插件注册表](https://aiidateam.github.io/aiida-"
"registry/) 上找到。如果没有符合您需求的插件，{ref}`external codes how-to <how-to:plugin-"
"codes>` 可以向您演示如何创建自己的计算插件。"

#: ../../source/intro/tutorial.md:741
msgid "Tuning performance"
msgstr "调整性能"

#: ../../source/intro/tutorial.md:742
msgid ""
"To optimise the performance of AiiDA for running many concurrent "
"computations see the {ref}`tuning performance how-to <how-"
"to:installation:performance>`."
msgstr ""
"要优化 AiiDA 的性能以运行许多并发计算，请参阅 {ref}`tuning performance how-to <how-"
"to:installation:performance>`。"

#: ../../source/intro/tutorial.md:744
msgid "Saving computational resources"
msgstr "节省计算资源"

#: ../../source/intro/tutorial.md:745
msgid ""
"AiiDA can cache and reuse the outputs of identical computations, as "
"described in the {ref}`caching how-to <how-to:run-codes:caching>`."
msgstr ""
"如 {ref}`caching how-to <how-to:run-codes:caching>` 所述，AiiDA "
"可以缓存和重复使用相同计算的输出。"

#: ../../source/intro/tutorial.md:0
msgid "Run computations on High Performance Computers"
msgstr "在高性能计算机上运行计算"

#: ../../source/intro/tutorial.md:750
msgid "Connecting to supercomputers"
msgstr "连接超级计算机"

#: ../../source/intro/tutorial.md:751
msgid ""
"To setup up a computer which can communicate with a high-performance "
"computer over SSH, see the {ref}`how-to for running external codes <how-"
"to:run-codes>`, or add a {ref}`custom transport "
"<topics:transport:develop_plugin>`. AiiDA has pre-written scheduler plugins "
"to work with LSF, PBSPro, SGE, Slurm and Torque."
msgstr ""
"要设置一台可通过 SSH 与高性能计算机通信的计算机，请参阅 {ref}`how-to for running external codes <how-"
"to:run-codes>`，或添加 {ref}`custom transport "
"<topics:transport:develop_plugin>`。AiiDA 有预写的调度插件，可与 LSF、PBSPro、SGE、Slurm 和 "
"Torque 配合使用。"

#: ../../source/intro/tutorial.md:758
msgid "Exploring your data"
msgstr "探索您的数据"

#: ../../source/intro/tutorial.md:764
msgid "Sharing your calculation plugin"
msgstr "分享您的计算插件"

#: ../../source/intro/tutorial.md:765
msgid ""
"Once you have a working plugin, you may also wish to {ref}`package it into a"
" python module <how-to:plugins-develop>` for others to use."
msgstr ""
"一旦您有了一个可以正常工作的插件，您可能还希望将 {ref}`package it into a python module <how-"
"to:plugins-develop>` 提供给其他人使用。"

#: ../../source/intro/tutorial.md:772
msgid "Todo"
msgstr "Todo"

#: ../../source/intro/tutorial.md:773
msgid ""
"Add to \"Connecting to supercomputers\": , or you can add a {ref}`custom "
"scheduler <topics:schedulers:develop_plugin>`."
msgstr ""
"添加到 \"Connecting to supercomputers\": , 或者您可以添加一个 {ref}`custom scheduler "
"<topics:schedulers:develop_plugin>`。"
