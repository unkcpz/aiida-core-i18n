# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-01 16:11+0000\n"
"PO-Revision-Date: 2020-07-01 16:11+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/source/internals/index.rst:3
msgid "Internal architecture"
msgstr ""

#: ../docs/source/internals/index.rst:10
msgid "Todo"
msgstr ""

#: ../docs/source/internals/index.rst:12
msgid "global_design orm data_storage engine plugin_system rest_api"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:5
msgid "Plugin system"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:7
msgid ""
"This page explains how to contribute to the plugin system in ``aiida-core``."
" For instrucions on how to develop plugins, see :ref:`how-to:plugins`."
msgstr ""

#: ../docs/source/internals/plugin_system.rst:11
msgid "Design Principles"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:13
msgid "Only restrict plugin developers when really necessary;"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:15
msgid "Avoid database schema changes whenever reasonably possible;"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:17
msgid ""
"Finding and loading plugins must be as fast as the plugin allows, especially"
" for command line interface (CLI) commands. In other words, directly "
"importing a plugin class should not be noticeably faster than using the "
"plugin loader/factory;"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:20
msgid ""
"Implement as a drop-in replacement, provide backwards compatibility to "
"pre-0.9 plugin system;"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:22
msgid ""
"Plugin management should be as user friendly from the verdi shell as from "
"the CLI."
msgstr ""

#: ../docs/source/internals/plugin_system.rst:25
msgid "Mini-Spec"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:28
msgid "Nomenclature"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:35
msgid "``plugin_name``"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:30
msgid "A unique name identifying the plugin. Suggested naming scheme is"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:32
msgid "``aiida-<plugin-name>`` for pypi distribution / source code repository"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:33
msgid ""
"``aiida_<plugin_name>`` for python package (``import aiida_<plugin_name>``; "
"dashes replaced by underscores)"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:34
msgid "``<plugin_name>.ep_name`` for entry points"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:41
msgid "``category``"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:38
msgid ""
"A name given to each aspect of AiiDA that can be extended via plugins, such "
"as ``calculations``, ``schedulers``, ... (see output of ``verdi plugin "
"list`` for a complete list)."
msgstr ""

#: ../docs/source/internals/plugin_system.rst:41
msgid "Each category maps to an *entry point group* ``aiida.<category>``."
msgstr ""

#: ../docs/source/internals/plugin_system.rst:44
msgid "Interfaces"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:47
msgid "Pluginloader"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:48
msgid ""
"The plugin loading functionality is defined in "
":py:mod:`aiida.plugins.entry_point` and relies on the `reentry package "
"<https://pypi.org/project/reentry/>`_ to find and load entry points. "
"``reentry`` is about 10x faster than the equivalent functionality in "
"``pkg_resources`` from ``setuptools``, leading to significant speedup of "
"tab-autocompletion in the ``verdi`` cli. If, for some reason, ``reentry`` is"
" not found, the plugin system falls back on ``pkg_resources``."
msgstr ""

#: ../docs/source/internals/plugin_system.rst:53
msgid "Registry Tools"
msgstr ""

#: ../docs/source/internals/plugin_system.rst:54
msgid "See the API documentation in :py:mod:`aiida.plugins`."
msgstr ""
