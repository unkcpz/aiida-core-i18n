# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jason.Eu <morty.yu@yahoo.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-16 20:22+0000\n"
"PO-Revision-Date: 2019-05-17 20:01+0000\n"
"Last-Translator: Jason.Eu <morty.yu@yahoo.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/source/tutorial/index.rst:1
msgid ""
"Here you will find all sorts of tutorials that show how to work with AiiDA "
"and the various plug-ins that are available for it The AiiDA plugins for "
"Quantum ESPRESSO provide a set of tutorials for some of the main Quantum "
"ESPRESSO codes (PW, PH, CP, and one of the post-processing tools PROJWFC). "
"You can find them on the `plugin documentation page <http://aiida-"
"quantumespresso.readthedocs.io/en/latest/user_guide/get_started/index.html>`_."
msgstr ""
"你会在该章节中找到与使用 AiiDA 相关以及与AiiDA相关的各种插件。 Quantum ESPRESSO 的AiiDA插件提供了 provide a"
" set of tutorials for some of the main Quantum ESPRESSO codes (PW, PH, CP, "
"and one of the post-processing tools PROJWFC). You can find them on the "
"`plugin documentation page <http://aiida-"
"quantumespresso.readthedocs.io/en/latest/user_guide/get_started/index.html>`_."

#: ../docs/source/tutorial/index.rst:8
msgid "Visualising Provenance Graphs"
msgstr ""

#: ../docs/source/tutorial/index.rst:18
msgid "StructureData"
msgstr "StructureData"

#: ../docs/source/tutorial/index.rst:28
msgid "Pseudopotentials"
msgstr "赝势"

#: ../docs/source/tutorial/index.rst:37
msgid "Plugin development"
msgstr "插件开发"

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:7
msgid "Visualizing Provenance Graphs"
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:11
msgid ""
"This tutorial can be downloaded and run as a Jupyter Notebook: "
":download:`visualising_graphs.ipynb`"
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:14
msgid ""
"The provenance graph of a database can be visually inspected, *via* "
"`graphviz <https://www.graphviz.org/>`__, using both the python API and "
"command-line interface."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:20
msgid "``verdi graph generate -h``"
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:22
msgid "We first load the database and required modules:"
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:34
msgid ""
"The example provenance graph, used in this tutorial, can then be imported "
"into the database:"
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:47
msgid ""
"The :py:class:`~aiida.tools.visualization.graph.Graph` class is used to "
"store visual representations of the nodes and edges, which can be added "
"separately or cumulatively by one of the graph traversal methods. The "
":py:attr:`~aiida.tools.visualization.graph.Graph.graphviz` attribute returns"
" a `graphviz.Digraph <https://graphviz.readthedocs.io/en/stable/>`__ "
"instance, which will auto-magically render the graph in the notebook, or can"
" be used to save the graph to file."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:90
msgid ""
"The :py:class:`~aiida.tools.visualization.graph.Graph` can also be "
"initialized with global style attributes, as outlined in the `graphviz "
"attributes table <https://www.graphviz.org/doc/info/attrs.html>`__."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:108
msgid ""
"Additionally functions can be parsed to the "
":py:class:`~aiida.tools.visualization.graph.Graph` initializer, to specify "
"exactly how each node will be represented. For example, the "
":py:func:`~aiida.tools.visualization.graph.pstate_node_styles` function "
"colors process nodes by their process state."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:131
msgid ""
"Edges can be annotated by one or both of their edge label and link type."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:148
msgid ""
"The :meth:`~aiida.tools.visualization.graph.Graph.recurse_descendants` and "
":meth:`~aiida.tools.visualization.graph.Graph.recurse_ancestors` methods can"
" be used to construct a full provenance graph."
msgstr ""

#: ../docs/source/tutorial/visualising_graphs/visualising_graphs.rst:166
msgid ""
"The link types can also be filtered, to view only the ‘data’ or ‘logical’ "
"provenance."
msgstr ""
