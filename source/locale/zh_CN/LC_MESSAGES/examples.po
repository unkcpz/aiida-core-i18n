# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jianxing Huang <jx.huang.x@gmail.com>, 2019
# Jason.Eu <morty.yu@yahoo.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-16 20:22+0000\n"
"PO-Revision-Date: 2019-05-17 20:01+0000\n"
"Last-Translator: Jason.Eu <morty.yu@yahoo.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/source/examples/pseudo_tutorial.rst:4
msgid "Introduction: Pseudopotential families"
msgstr "介绍：赝势族"

#: ../docs/source/examples/pseudo_tutorial.rst:6
msgid ""
"The procedure of attaching a pseudopotential file to each atomic species can"
" easily become tedious. In many situations, you will not produce a different"
" pseudopotential file for every calculation you perform; most likely, when "
"you start a project you will stick to a pseudopotential file that is "
"adequate for what you need. Furthermore, in a high-throughput calculation, "
"you will like to do calculations over several elements while keeping the "
"same functional. That is also part of the reason why there are several "
"projects (like the `PSLibrary <http://qe-"
"forge.org/gf/project/pslibrary/frs/>`_ or `GBRV "
"<http://www.physics.rutgers.edu/gbrv/>`_ to name a few), that intend to "
"develop a set of pseudopotentials that covers most of the periodic table for"
" different functionals."
msgstr ""
"给每个原子都附上赝势文件是枯燥的。很多情况下，不需要给所有计算都准备不同的赝势文件；最有可能的情况是，对于一个项目通常固定一个能满足需求的合适的赝势文件。此外，对于高通量计算，经常是保持相同的需求并对多种元素进行计算。有些项目（仅举几例，如"
" `PSLibrary <http://qe-forge.org/gf/project/pslibrary/frs/>`_ 或是 `GBRV "
"<http://www.physics.rutgers.edu/gbrv/>` ）的目的是开发一组迁移性好的赝势来同时涵盖到不同需求。"

#: ../docs/source/examples/pseudo_tutorial.rst:18
msgid ""
"For this reason we introduced the concept of *pseudopotential families*. "
"Each family is a set of pseudopotentials that are grouped together in a "
"special type of `AiiDA Group of nodes`. Within each family, at most one "
"pseudopotential can be present for a given chemical element."
msgstr ""
"因此，AiiDA引入了*赝势族*的概念。每个赝势族都是一组特殊的 `AiiDA Group of nodes` "
"类型的赝势。在每个赝势族中，对于每个给定的化学元素，仅有一个赝势与之对应。"

#: ../docs/source/examples/pseudo_tutorial.rst:23
msgid ""
"A pseudopotential family does not necessarily have to  cover the whole "
"periodic table. This means that you can create a pseudopotential family "
"containing only the pseudopotentials for a few elements that you are "
"interested in."
msgstr "赝势族不需要涵盖整张周期表。这意味着可以建立一个仅包含待研究的几种元素的赝势族。"

#: ../docs/source/examples/pseudo_tutorial.rst:28
msgid ""
"In principle, you can group different kinds of pseudopotentials into the "
"same family. It is your responsibility to group only those with the same "
"type, or obtained using the same functionals, approximations and / or levels"
" of theory."
msgstr "原则上，可以将不同种类的赝势放入同一个赝势族中。但是赝势族理应用作相同类型或是实现相同功能，近似，理论水平的赝势的分类。"

#: ../docs/source/examples/pseudo_tutorial.rst:33
msgid "Creating a pseudopotential family"
msgstr "新建一个赝势族"

#: ../docs/source/examples/pseudo_tutorial.rst:36
msgid ""
"The following commands are specific to the `Quantum ESPRESSO interface "
"<https://github.com/aiidateam/aiida-quantumespresso/>`_. For interfaces to "
"other codes, please refer to the respective plugin documentation."
msgstr ""
"以下命令仅对 `Quantum ESPRESSO 接口 <https://github.com/aiidateam/aiida-"
"quantumespresso/>`_. 生效。对于其他计算代码接口，请参阅相应的插件文档。"

#: ../docs/source/examples/pseudo_tutorial.rst:40
msgid ""
"In the following, we will create a pseudopotential family. First, you need "
"to collect the pseudopotential files which should go into the family in a "
"single folder -- we'll call it ``path/to/folder``. You can then add the "
"family to the AiiDA database with ``verdi``::"
msgstr ""
"接下来，就让我们开始创建一个赝势族。首先，需要准备一个 ``path/to/folder`` 文件夹，其中用来放置将属于同一赝势族的赝势文件。之后可以用"
" ``verdi`` 来把赝势族添加至AiiDA数据库中 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:47
msgid ""
"where ``name_of_the_family`` should be a unique name for the family, and the"
" final parameter is a string that is set in the ``description`` field of the"
" group."
msgstr ""
"其中 ``name_of_the_family`` 是赝势族的唯一名称，最后一个参数用来设置 ``description`` "
"字段（译者注：用作描述赝势族，用来记录更多详细的信息）。"

#: ../docs/source/examples/pseudo_tutorial.rst:50
msgid ""
"If the a pseudopotential family with the same ``name_of_the_family`` exists "
"already, the pseudopotentials in the folder will be added to the existing "
"group. The code will raise an error if you try to add two (different) "
"pseudopotentials for the same element."
msgstr ""
"如果有相同 ``name_of_the_family`` "
"的赝势族已经存在，则该文件中的赝势将会被添加至此赝势族中。如果尝试为同种元素添加两个（不同的）赝势，则将会引发错误。"

#: ../docs/source/examples/pseudo_tutorial.rst:54
msgid ""
"After the upload (which may take some seconds, so please be patient) the "
"pseudopotential family will be ready for use."
msgstr "上传完成之后（可能需要几秒钟的时间，请耐心等待），就可以使用赝势族了。"

#: ../docs/source/examples/pseudo_tutorial.rst:58
msgid ""
"If you upload pseudopotentials which are already present in your database, "
"AiiDA will use the existing ``UPFData`` node instead of creating a duplicate"
" one. You can use the optional flag ``--stop-if-existing`` to instead abort "
"(without changing anything in the database) if an existing pseudopotential "
"is found."
msgstr ""
"如果上传了一个已存在于数据库中的赝势，AiiDA将会使用已存在的 ``UPFData`` 节点，而不会创建重复的节点。使用可选标签 ``--stop-"
"if-existing`` 的话，当发现已有赝势时会上传将会中止（不更改数据库中的任何内容）。"

#: ../docs/source/examples/pseudo_tutorial.rst:65
msgid "Getting the list of existing families"
msgstr "查询已有赝势族列表"

#: ../docs/source/examples/pseudo_tutorial.rst:66
msgid ""
"To see wich pseudopotential families already exist in the database, type ::"
msgstr "输入以下命令可查看数据库中已有的赝势族 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:71
msgid ""
"Add a ``-d`` (or ``--with-description``) flag if you also want to read the "
"description of each family."
msgstr "如果想获取每个赝势族描述信息的话，请使用 ``-d`` （或是 ``--with-description`` ）标签。"

#: ../docs/source/examples/pseudo_tutorial.rst:73
msgid ""
"You can also filter the groups to get only a list of those containing a "
"given set of elements using the ``-e`` option. For instance, if you want to "
"get only the families containing the elements ``Ba``, ``Ti`` and ``O``, use "
"::"
msgstr ""
"也可以使用 ``-e`` 选项筛选得到包含给定一组元素的赝势族。比如，如果想要得到包含 ``Ba``, ``Ti`` 和 ``O`` "
"元素的赝势族，可以使用如下命令 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:81
msgid "For more information on the command line options, type ::"
msgstr "使用如下命令查看更多的可选信息 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:88
msgid "Manually adding pseudopotentials"
msgstr "手动添加赝势"

#: ../docs/source/examples/pseudo_tutorial.rst:90
msgid ""
"If you do not want to use pseudopotentials from a family, it is also "
"possible to manually add them to the database (even though we discourage "
"this in general)."
msgstr "如果不想通过赝势族来使用赝势，也可以手动把赝势添加至数据库中（一般不推荐这么做）。"

#: ../docs/source/examples/pseudo_tutorial.rst:93
msgid ""
"A possible way of doing it is the following: we start by creating a list of "
"pseudopotential filenames that we need to use::"
msgstr "比较合适的做法是：首先新建一份赝势文件文件名的列表，如下所示 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:101
msgid ""
"In this simple example, we expect the pseudopotentials to be in the same "
"folder of the script. Then, we loop over the filenames and add them to the "
"AiiDA database. The ``get_or_create`` method checks if the pseudopotential "
"is already in the database and either stores it, or just returns the node "
"already present in the database. The second value returned is a boolean and "
"tells us if the pseudopotential was already present or not. We also store "
"the returned nodes in a list (``pseudos_to_use``)."
msgstr ""
"在这个简短的例子中，赝势文件应和脚本位于同一文件夹中。之后，用循环遍历这些文件名并将其添加至AiiDA数据库中。``get_or_create`` "
"方法可检查赝势是否已在数据库中，有的话会返回数据库中已有的节点，如果没，则会储存它。返回的第二个值是布尔值，表示赝势是否已有。之后，将返回的节点存入列表（"
" ``pseudos_to_use`` ）中。"

#: ../docs/source/examples/pseudo_tutorial.rst:118
msgid ""
"As the last step, we make a loop over the pseudopotentials, and attach its "
"pseudopotential object to the calculation::"
msgstr "最后一步，用循环遍历所有的赝势并将此对象输入至算例中 ::"

#: ../docs/source/examples/pseudo_tutorial.rst:125
msgid ""
"When the pseudopotential is created, it is parsed and the elements to which "
"it refers is stored in the database and can be accessed using the "
"``pseudo.element`` property, as shown above."
msgstr "新建赝势对象时，会对其进行解析，将其对应的元素存入数据库中，并能像上面所示那样使用 ``pseudo.element`` 属性来进行访问。"

#: ../docs/source/examples/structure_tutorial.rst:4
msgid "General comments"
msgstr "引言"

#: ../docs/source/examples/structure_tutorial.rst:6
msgid ""
"This section contains an example of how you can use the "
":py:class:`~aiida.orm.nodes.data.structure.StructureData` object to create "
"complex crystals."
msgstr ""
"本节包括了如何使用 :py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"对象来创建复杂晶体的示例。"

#: ../docs/source/examples/structure_tutorial.rst:10
msgid ""
"With the :py:class:`~aiida.orm.nodes.data.structure.StructureData` class we "
"did not try to have a full set of features to manipulate crystal structures."
" Indeed, other libraries such as `ASE <https://wiki.fysik.dtu.dk/ase/>`_ "
"exist, and we simply provide easy ways to convert between the ASE and the "
"AiiDA formats. On the other hand, we tried to define a \"standard\" format "
"for structures in AiiDA, that can be used across different codes."
msgstr ""
":py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"类中并不包含操作晶体结构的整套方法。实际上，已存在操作晶体结构的python包，比如 `ASE "
"<https://wiki.fysik.dtu.dk/ase/>`_ ，因此仅需提供 "
"ASE与AiiDA格式之间相互转换的简单方法。另一方面，已为AiiDA中的结构定义了“标准”的格式，以便其可以在不同的代码中被使用。"

#: ../docs/source/examples/structure_tutorial.rst:20
msgid "How to use ``StructureData``"
msgstr "如何使用 ``StructureData``"

#: ../docs/source/examples/structure_tutorial.rst:22
msgid "Take a look at the following example::"
msgstr "请看一下以下的例子 ::"

#: ../docs/source/examples/structure_tutorial.rst:33
msgid ""
"With the commands above, we have created a crystal structure ``s`` with a "
"cubic unit cell and lattice parameter of 4 angstrom, and two atoms in the "
"cell: one iron (Fe) atom in the origin, and one oxygen (O) at the center of "
"the cube (this cell has been just chosen as an example and most probably "
"does not exist)."
msgstr ""
"通过以上命令，使用立方晶胞且晶格参数取4埃来创建晶体结构 ``s`` "
"，晶胞中有两个原子：原点处有一个铁（Fe）原子，体心处又一个氧（O）原子（此晶胞只是一个例子，很可能不存在这样的晶胞）。"

#: ../docs/source/examples/structure_tutorial.rst:39
msgid ""
"As you can see in the example above, both the cell coordinates and the atom "
"coordinates are expressed in angstrom, and the position of the atoms are "
"given in a global absolute reference frame."
msgstr "正如以上例子所示，晶胞坐标和原子坐标的单位均为埃，原子的位置为绝对坐标参考系。"

#: ../docs/source/examples/structure_tutorial.rst:43
msgid ""
"In this way, any periodic structure can be defined. If you want to import "
"from ASE in order to specify the coordinates, e.g., in terms of the crystal "
"lattice vectors, see the guide on the conversion to/from ASE below."
msgstr "用这种方法可以定义任意的周期性结构。为了从ASE导入以便指定坐标，比如根据晶格向量，请参阅下面关于从ASE导入/导出的教程。"

#: ../docs/source/examples/structure_tutorial.rst:47
msgid ""
"When using the "
":py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` method,"
" further parameters can be passed. In particular, one can specify the mass "
"of the atom, particularly important if you want e.g. to run a phonon "
"calculation. If no mass is specified, the mass provided by `NIST "
"<http://www.nist.gov/pml/data/index.cfm>`_ (retrieved in October 2014) is "
"going to be used. The list of masses is stored in the module "
":py:mod:`aiida.common.constants`, in the ``elements`` dictionary."
msgstr ""
"使用 :py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` "
"方法时，可传入更多的参数。特别重要的一点是，可以指定原子的质量。比如对于声子计算，如果未指定质量，则会使用 `NIST "
"<http://www.nist.gov/pml/data/index.cfm>`_ 提供的数据（2014年10月检索）。原子质量的列表储存在 "
":py:mod:`aiida.common.constants` 模块的 ``elements`` 字典中。"

#: ../docs/source/examples/structure_tutorial.rst:56
msgid ""
"Moreover, in the :py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"class of AiiDA we also support the storage of crystal structures with "
"alloys, vacancies or partial occupancies. In this case, the argument of the "
"parameter ``symbols`` should be a list of symbols, if you want to consider "
"an alloy; moreover, you must pass a ``weights`` list, with the same length "
"as ``symbols``, and with values between 0. (no occupancy) and 1. (full "
"occupancy), to specify the fractional occupancy of that site for each of the"
" symbols specified in the ``symbols`` list. The sum of all occupancies must "
"be lower or equal to one; if the sum is lower than one, it means that there "
"is a given probability of having a vacancy at that specific site position."
msgstr ""
"此外，在AiiDA的 :py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"类中还有合金，空位或是部分占据的晶体结构。如果选择合金，则参数 ``symbols`` 应为元素符号的列表，且要提供与 ``symbols`` "
"长度相同的 ``weights`` 列表，其值介于 0.（未占用）和 1.（全占用）之间，这用来指示 ``symbols`` "
"列表中各元素在该位点处所占的比例。占用率的总和须小于或等于1，如果总和小于1，则意味着此位点有存在空位的可能性。"

#: ../docs/source/examples/structure_tutorial.rst:69
msgid "As an example, you could use::"
msgstr "举个例子 ::"

#: ../docs/source/examples/structure_tutorial.rst:73
msgid ""
"to add a site at the origin of a structure ``s`` consisting of an alloy of "
"90% of Barium and 10% of Calcium (again, just an example)."
msgstr "会在结构 ``s`` 的原点处添加一个由90%的钡和10%的钙组成的合金的位点（再次说明，这仅仅是个例子）。"

#: ../docs/source/examples/structure_tutorial.rst:76
msgid "The following line instead::"
msgstr "如果是如下代码 ::"

#: ../docs/source/examples/structure_tutorial.rst:80
msgid ""
"would create a site with 90% probability of being occupied by Calcium, and "
"10% of being a vacancy."
msgstr "则会添加一个90%概率被钙占用但是10%概率是空位的位点。"

#: ../docs/source/examples/structure_tutorial.rst:83
msgid ""
"Utility properties ``s.is_alloy`` and ``s.has_vacancies`` can be used to "
"verify, respectively, if more than one element if given in the symbols list,"
" and if the sum of all weights is smaller than one."
msgstr ""
"实用的属性 ``s.is_alloy`` 和 ``s.has_vacancies`` "
"可分别用作验证给定的元素符号列表中是否多于一种元素，以及所有权重之和是否小于1。"

#: ../docs/source/examples/structure_tutorial.rst:87
msgid ""
"if you pass more than one symbol, the property ``s.is_alloy`` will always be"
" ``True``, even if only one symbol has occupancy 1 and all others have "
"occupancy zero::"
msgstr "如果传递了超过一种元素符号，``s.is_alloy`` 属性就为 ``True`` ，即使只有一种元素占用率为1，而其余元素为0 ::"

#: ../docs/source/examples/structure_tutorial.rst:98
msgid "Internals: Kinds and Sites"
msgstr "内部类：Kinds与Sites"

#: ../docs/source/examples/structure_tutorial.rst:99
msgid ""
"Internally, the "
":py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` method "
"works by manipulating the kinds and sites of the current structure. Kinds "
"are instances of the :py:class:`~aiida.orm.nodes.data.structure.Kind` class "
"and represent a chemical species, with given properties (composing element "
"or elements, occupancies, mass, ...) and identified by a label (normally, "
"simply the element chemical symbol)."
msgstr ""
"在内部，:py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` "
"方法用来操作结构中的元素类型（kind）与位点（site）。``Kinds`` 是 "
":py:class:`~aiida.orm.nodes.data.structure.Kind` "
"类的实例，用来表示包含给定属性（组成元素或是元素，占用率，质量，……）的化学元素，并由标签（通常仅使用化学元素符号）进行识别。"

#: ../docs/source/examples/structure_tutorial.rst:106
msgid ""
"Sites are instances of the :py:class:`~aiida.orm.nodes.data.structure.Site` "
"class and represent instead each single site. Each site refers to a "
":py:class:`~aiida.orm.nodes.data.structure.Kind`  to identify its properties"
" (which element it is, the mass, ...) and to its three spatial coordinates."
msgstr ""
"``Sites`` 是 :py:class:`~aiida.orm.nodes.data.structure.Site` "
"类的实例，可用来表示单独的位点。每个位点都引用一个 :py:class:`~aiida.orm.nodes.data.structure.Kind` "
"来表示它们的属性（哪个元素，质量多少，……）以及三个空间坐标。"

#: ../docs/source/examples/structure_tutorial.rst:112
msgid ""
"The :py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` "
"works in the following way:"
msgstr ""
":py:meth:`~aiida.orm.nodes.data.structure.StructureData.append_atom` "
"按以下规则来运行："

#: ../docs/source/examples/structure_tutorial.rst:115
msgid ""
"It creates a new :py:class:`~aiida.orm.nodes.data.structure.Kind` class with"
" the properties passed as parameters (i.e., all parameters except "
"``position``)."
msgstr ""
"它创建来一个新的 :py:class:`~aiida.orm.nodes.data.structure.Kind` 类，其属性作为参数进行传递（即除了 "
"``position`` 以外的所有参数）。"

#: ../docs/source/examples/structure_tutorial.rst:119
msgid ""
"It tries to identify if an identical Kind already exists in the list of "
"kinds of the structure (e.g., in the same atom with the same mass was "
"already previously added). Comparison of kinds is performed using "
":py:meth:`aiida.orm.nodes.data.structure.Kind.compare_with`, and in "
"particular it returns ``True`` if the mass and the list of symbols and of "
"weights are identical (within a threshold). If an identical kind ``k`` is "
"found, it simply adds a new site referencing to kind ``k`` and with the "
"provided ``position``. Otherwise, it appends ``k`` to the list of kinds of "
"the current structure and then creates the site referencing to ``k``. The "
"name of the kind is chosen, by default, equal to the name of the chemical "
"symbol (e.g., \"Fe\" for iron)."
msgstr ""
"它会识别结构的元素类型列表中是否已存在相同的元素（例如先前已添加了具有相同质量的相同原子）。可使用 "
":py:meth:`aiida.orm.nodes.data.structure.Kind.compare_with` "
"来比较元素类型，特别地，如果质量以及元素符号和权重列表都相同（差异在某个阈值之内），其会返回 ``True`` 。如果发现了同种元素类型 ``k`` "
"，将仅会根据提供的 ``position`` 来新建一个元素类型 ``k`` 的位点。否则，会把 ``k`` 添加至当前结构的元素类型列表中，之后再新建"
" ``k`` 的位点。默认情况下，用化学元素符号来选择元素类型（比如，“Fe”之于铁）。"

#: ../docs/source/examples/structure_tutorial.rst:131
msgid ""
"If you pass more than one species for the same chemical symbol, but e.g. "
"with different masses, a new kind is created and the name is obtained "
"postponing an integer to the chemical symbol name. For instance, the "
"following lines::"
msgstr ""
"如果对于相同的化学元素符号传递了不止一个元素类别，比如使用了不同的质量。那么，会创建新的元素类型，其名字为在元素符号后面附加一个整数。例如，使用以下几行"
" ::"

#: ../docs/source/examples/structure_tutorial.rst:139
msgid ""
"will automatically create three kinds, all for iron, with names ``Fe``, "
"``Fe1`` and ``Fe2``, and masses 55.8, 57. and 59. respecively."
msgstr ""
"将会自动新建三种元素类型，都表示铁，其名字分别为 ``Fe``, ``Fe1`` 和 ``Fe2`` ，质量分别为 55.8, 57. 和 59. 。"

#: ../docs/source/examples/structure_tutorial.rst:142
msgid ""
"In case of alloys, the kind name is obtained concatenating all chemical "
"symbols names (and a X is the sum of weights is less than one). The same "
"rules as above are used to append a digit to the kind name, if needed."
msgstr ""
"如果是合金，元素类型的名字是所有元素符号名字连接在一起（并且X为所有权重之和，其值小于1）。如果需要，会按照上一条规则将数字附加至元素类型名称之后。"

#: ../docs/source/examples/structure_tutorial.rst:146
msgid ""
"Finally, you can simply specify the kind_name to automatically generate a "
"new kind with a specific name. This is the case if you want a name different"
" from the automatically generated one, or for instance if you want to create"
" two different species with the same properties (same mass, symbols, ...). "
"This is for instance the case in Quantum ESPRESSO in order to describe an "
"antiferromagnetic cyrstal, with different magnetizations on the different "
"atoms in the unit cell."
msgstr ""
"指定 ``kind_name`` "
"可指定生成特定名字的元素类型。这种情况发生于要让元素类型的名字与自动生成的不同，比如，要新建两个具有相同属性（相同的质量，相同的元素符号，……）的不同物种。例如，这是在"
" Quantum ESPRESSO 中为了描述反铁磁性晶体晶胞中不同原子上不同磁性的情况。"

#: ../docs/source/examples/structure_tutorial.rst:154
msgid "In this case, you can for instance use::"
msgstr "这种情况下，可以按如下方法使用 ::"

#: ../docs/source/examples/structure_tutorial.rst:159
msgid ""
"To create two species ``Fe1`` and ``Fe2`` for iron, with the same mass."
msgstr "为铁新建两个质量相等的新元素类型 ``Fe1`` 和 ``Fe2`` 。"

#: ../docs/source/examples/structure_tutorial.rst:161
msgid ""
"You do not need to specify explicitly the mass if the default one is ok for "
"you. However, when you pass explicitly a name and it coincides with the name"
" of an existing species, all properties that you specify must be identical "
"to the ones of the existing species, or the method will raise an exception."
msgstr ""
"如果默认值较为合适，可以不必去特意指定质量。但是，当给指定名字的元素类型传递参数时，如果此名字的元素类型已存在，那么指定的属性必须与已存在的元素类型相同，否则该方法会引发一个异常。"

#: ../docs/source/examples/structure_tutorial.rst:167
msgid ""
"If you prefer to work with the internal "
":py:class:`~aiida.orm.nodes.data.structure.Kind` and "
":py:class:`~aiida.orm.nodes.data.structure.Site` classes, you can obtain the"
" same result of the two lines above with::"
msgstr ""
"如果更倾向于用内部的 :py:class:`~aiida.orm.nodes.data.structure.Kind` 和 "
":py:class:`~aiida.orm.nodes.data.structure.Site` 类，可以获得与以上两行相同的结果 ::"

#: ../docs/source/examples/structure_tutorial.rst:181
msgid "Conversion to/from ASE"
msgstr "导出/导入ASE数据"

#: ../docs/source/examples/structure_tutorial.rst:183
msgid ""
"If you have an AiiDA structure ``s``, you can get an ``ase.Atom`` object by "
"just calling the "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_ase` method::"
msgstr ""
"对于AiiDA结构 ``s`` ，使用 "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_ase` 方法可以得到 "
"``ase.Atom`` 对象 ::"

#: ../docs/source/examples/structure_tutorial.rst:189
msgid ""
"As we support alloys and vacancies in AiiDA, while ``ase.Atom`` does not, it"
" is not possible to export to ASE a structure with vacancies or alloys."
msgstr "因为AiiDA支持合金与空位，而 ``ase.Atom`` 不支持，因此不能把空位或合金输出为ASE数据。"

#: ../docs/source/examples/structure_tutorial.rst:192
msgid ""
"If instead you have as ASE Atoms object and you want to load the structure "
"from it, just pass it when initializing the class::"
msgstr "如果有了ASE ``Atoms`` 对象，要加载其中的结构，那么只需在初始化类的时候把参数传递给它 ::"

#: ../docs/source/examples/structure_tutorial.rst:201
msgid "Creating multiple species"
msgstr "新建多个元素种类"

#: ../docs/source/examples/structure_tutorial.rst:203
msgid ""
"We implemented the possibility of specifying different Kinds (species) in "
"the ``ase.atoms`` and then importing them."
msgstr "可以在 ``ase.atoms`` 中创建不同的元素类型（元素种类），然后再导入它们。"

#: ../docs/source/examples/structure_tutorial.rst:206
msgid ""
"In particular, if you specify atoms with different mass in ASE, during the "
"import phase different kinds will be created::"
msgstr "特别地，如果用ASE创建了不同质量的原子，在导入阶段则会新建不同的元素类型 ::"

#: ../docs/source/examples/structure_tutorial.rst:221
msgid ""
"Moreover, even if the mass is the same, but you want to get different "
"species, you can use the ASE ``tags`` to specify the number to append to the"
" element symbol in order to get the species name::"
msgstr ""
"此外，即使质量相同，如果要得到不同的元素类型，可以使用ASE的 ``tags`` 来指定附在元素符号后面的符号，从而用其当作元素种类的名字 ::"

#: ../docs/source/examples/structure_tutorial.rst:237
msgid ""
"in complicated cases (multiple tags, masses, ...), it is possible that "
"exporting a AiiDA structure to ASE and then importing it again will not "
"perfectly preserve the kinds and kind names."
msgstr ""
"在复杂的情况中（多标签，多质量，……），把AiiDA结构输出为ASE数据，再重新把ASE导入回到AiiDA结构，可能无法很好地保持元素类型以及其名字不变。"

#: ../docs/source/examples/structure_tutorial.rst:243
msgid "Conversion to/from pymatgen"
msgstr "导出/导入pymatgen数据"

#: ../docs/source/examples/structure_tutorial.rst:245
msgid ""
"AiiDA structure can be converted to pymatgen's `Molecule`_ and `Structure`_ "
"objects by using, accordingly, "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen_molecule`"
" and "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen_structure`"
" methods::"
msgstr ""
"使用 "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen_molecule`"
" 和 "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen_structure`"
" 方法可以把 AiiDA结构导出为pymatgen的 `Molecule`_ 和 `Structure`_ 对象 ::"

#: ../docs/source/examples/structure_tutorial.rst:255
msgid ""
"A single method "
":py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen` can "
"be used for both tasks: converting periodic structures (periodic boundary "
"conditions are met in all three directions) to pymatgen's Structure and "
"other structures to pymatgen's Molecule::"
msgstr ""
"单个方法 :py:class:`~aiida.orm.nodes.data.structure.StructureData.get_pymatgen` "
"可以用作以下两种任务：把周期性结构（在三个方向上都满足周期性边界条件）导出为pymatgen的 ``Structure`` "
"，以及把其他结构导出为pymatgen的 ``Molecule`` ::"

#: ../docs/source/examples/structure_tutorial.rst:263
msgid ""
"It is also possible to convert pymatgen's Molecule and Structure objects to "
"AiiDA structures::"
msgstr "也可以把pymatgen的 ``Molecule`` 和 ``Structure`` 对象导入进AiiDA结构中 ::"

#: ../docs/source/examples/structure_tutorial.rst:270
msgid "Also in this case, a generic converter is provided::"
msgstr "在这种情况下，也可以使用通用的转化器 ::"

#: ../docs/source/examples/structure_tutorial.rst:276
msgid ""
"Converters work with version 3.0.13 or later of pymatgen. Earlier versions "
"may cause errors."
msgstr "转化器仅用于3.0.13及其之后版本的pymatgen。早期版本可能会报错。"
