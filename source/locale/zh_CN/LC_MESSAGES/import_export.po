# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jianxing Huang <jx.huang.x@gmail.com>, 2019
# Jason.Eu <morty.yu@yahoo.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-16 20:22+0000\n"
"PO-Revision-Date: 2019-05-17 20:00+0000\n"
"Last-Translator: Jason.Eu <morty.yu@yahoo.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/source/import_export/dbimporters/cod.rst:2
msgid "COD database importer"
msgstr "COD数据库导入工具"

#: ../docs/source/import_export/dbimporters/cod.rst:4
msgid ""
"COD database importer is used to import crystal structures from the "
"`Crystallography Open Database <http://www.crystallography.net>`_ (COD) to "
"AiiDA."
msgstr ""
"COD数据库导入模块用于从`Crystallography Open Database "
"<http://www.crystallography.net>`_ (COD) 中导入晶体结构到AiiDA。"

#: ../docs/source/import_export/dbimporters/cod.rst:7
#: ../docs/source/import_export/dbimporters/icsd.rst:19
msgid "Setup"
msgstr "配置"

#: ../docs/source/import_export/dbimporters/cod.rst:9
msgid ""
"An instance of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter` is created as"
" follows:"
msgstr ""
"一个 :py:class:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter` "
"的实例可按照以下方法创建:"

#: ../docs/source/import_export/dbimporters/cod.rst:17
msgid ""
"No additional parameters are required for standard queries on the main COD "
"server."
msgstr "在COD主服务器上进行标准查询不需要额外参数。"

#: ../docs/source/import_export/dbimporters/cod.rst:20
#: ../docs/source/import_export/dbimporters/icsd.rst:70
msgid "How to do a query"
msgstr "如何进行查询"

#: ../docs/source/import_export/dbimporters/cod.rst:22
msgid ""
"A search is initiated by using the "
":py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.query` method, "
"supplying statements using the ``keyword=value`` syntax:"
msgstr ""
"搜索可由 :py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.query` "
"方法进行初始化，支持使用 ``keyword=value`` 语法:"

#: ../docs/source/import_export/dbimporters/cod.rst:28
msgid ""
"List of possible keywords can be listed using the method "
":py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.get_supported_keywords`:"
msgstr ""
"可能的关键词的列表可由 "
":py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.get_supported_keywords`"
" 方法得到:"

#: ../docs/source/import_export/dbimporters/cod.rst:34
msgid ""
"Values for most of the keywords can be encapsulated in a list. In that case "
"the query will return entries that match any of the values (binary `OR`) "
"from the list. Moreover, in the case of multiple keywords, entries that "
"match all the conditions imposed by the keywords, will be returned (binary "
"`AND`)."
msgstr ""
"大部分关键词的值可被压缩在一个列表中。在这种情况下，查询会返回与列表中的值（二进制 `OR` "
"）匹配的任何入口。更进一步地，当有多个关键词的情况下，满足全部关键词要求条件的才会被返回（二进制 `AND` ）。"

#: ../docs/source/import_export/dbimporters/cod.rst:38
msgid "Example:"
msgstr "例如: "

#: ../docs/source/import_export/dbimporters/cod.rst:44
msgid "is equivalent to the following SQL statement:"
msgstr "等价于以下的SQL语句: "

#: ../docs/source/import_export/dbimporters/cod.rst:52
msgid ""
"A query returns an instance of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodSearchResults`, which can"
" be used in the same way as a list of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` instances:"
msgstr ""
"查询会返回一个 :py:class:`~aiida.tools.dbimporters.plugins.cod.CodSearchResults` "
"实例，可以与 :py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` "
"的一个实例的列表用同样方式使用。"

#: ../docs/source/import_export/dbimporters/cod.rst:64
msgid ""
"Using data from :py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry`"
msgstr "使用 :py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` 得到的数据"

#: ../docs/source/import_export/dbimporters/cod.rst:66
msgid ""
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` has a few methods "
"(inherited from :py:class:`~aiida.tools.dbimporters.baseclasses.CifEntry`) "
"to access the contents of its instances:"
msgstr ""
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` 有几种方法（继承自 "
":py:class:`~aiida.tools.dbimporters.baseclasses.CifEntry` ）可以访问实例的内容: "

#: ../docs/source/import_export/dbimporters/cod.rst:68
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`"
msgstr ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`"

#: ../docs/source/import_export/dbimporters/cod.rst:69
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_ase_structure`"
msgstr ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_ase_structure`"

#: ../docs/source/import_export/dbimporters/cod.rst:70
msgid ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`"
msgstr ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`"

#: ../docs/source/import_export/dbimporters/cod.rst:71
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_parsed_cif`"
msgstr ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_parsed_cif`"

#: ../docs/source/import_export/dbimporters/cod.rst:72
msgid ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_raw_cif`"
msgstr ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_raw_cif`"

#: ../docs/source/import_export/dbimporters/icsd.rst:5
msgid "ICSD database importer"
msgstr "ICSD数据库导入工具"

#: ../docs/source/import_export/dbimporters/icsd.rst:7
msgid ""
"In this section we explain how to import CIF files from the ICSD database "
"using the :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` "
"class."
msgstr ""
"在本部分中我们将介绍如何利用 "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` "
"从ICSD数据库中导入CIF文件。"

#: ../docs/source/import_export/dbimporters/icsd.rst:9
msgid ""
"Before being able to query ICSD, provided by FIZ Karlsruhe, you should have "
"the intranet database installed on a server (http://www2.fiz-"
"karlsruhe.de/icsd_intranet.html). Follow the installation as described in "
"the manual."
msgstr ""
"根据 FIZ Karlsruhe 提供的信息，你需在服务器上预先安装内联网数据库（http://www2.fiz-"
"karlsruhe.de/icsd_intranet.html）才可以使用ICSD数据库进行查询。请根据手册中的安装步骤执行。"

#: ../docs/source/import_export/dbimporters/icsd.rst:12
msgid ""
"It is necessary to know the webpage of the ICSD web interface and have "
"access to the full database from the local machine."
msgstr "知道ICSD网页的页面布局并从本地访问整个数据库是必要的。"

#: ../docs/source/import_export/dbimporters/icsd.rst:14
msgid ""
"You can either query the MySQL database or the web page. The latter is "
"restricted to a maximum of 1000 search results, which makes it unsuitable "
"for data mining. For this purpose, we recommend you to set up the MySQL "
"connection."
msgstr ""
"你也可以用MYSQL数据库或者用网页来进行请求。后者将最大搜索结果数限制在1000条，因而不适于进行数据挖掘。出于此目的，推荐设置MYSQL连接。"

#: ../docs/source/import_export/dbimporters/icsd.rst:21
msgid ""
"An instance of the "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` can be "
"created as follows:"
msgstr ""
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` "
"的一个实例可由如下方式创建: "

#: ../docs/source/import_export/dbimporters/icsd.rst:29
msgid ""
"Here is a list of the most important input parameters with an explanation."
msgstr "以下是包含大部分重要输入参数和对应的一条解释的列表。"

#: ../docs/source/import_export/dbimporters/icsd.rst:31
msgid "For both connection types (web and SQL):"
msgstr "对两种连接方式（网页或者SQL）都有: "

#: ../docs/source/import_export/dbimporters/icsd.rst:33
msgid ""
"``server``: Address of web interface of the ICSD database. It should contain"
" both the protocol and the domain name, ending with a slash. Example:"
msgstr "``server``: ICSD数据库页面的地址。须包含协议和域名，并以斜线结束。例如:"

#: ../docs/source/import_export/dbimporters/icsd.rst:41
msgid "The following parameters are required only for the MySQL query:"
msgstr "以下参数对于MYSQL查询是必要的:"

#: ../docs/source/import_export/dbimporters/icsd.rst:43
msgid "``host``: Database host name address."
msgstr "``host``: 数据库主机的地址"

#: ../docs/source/import_export/dbimporters/icsd.rst:45
msgid ""
"If the database is not hosted on your local machine, it can be useful to "
"create an ssh tunnel to the 3306 port of the database host::"
msgstr "若数据库不在本地计算机上，与数据库主机通过3306端口建立起ssh隧道会很有用::"

#: ../docs/source/import_export/dbimporters/icsd.rst:49
msgid ""
"If you get an URLError with Errno 111 (Connection refused) when you query "
"the database, try to instead use::"
msgstr "若你在查询数据库时接收到 Errno 111 (Connection refused) 的URLError，请尝试换用以下方法::"

#: ../docs/source/import_export/dbimporters/icsd.rst:53
msgid "The database can then be accessed using \"127.0.0.1\" as host::"
msgstr "此时，数据库可用 \"127.0.0.1\" 作为主机名来访问::"

#: ../docs/source/import_export/dbimporters/icsd.rst:57
msgid ""
"``user`` / ``pass_wd`` / ``db`` / ``port``: Login username, password, name "
"of database, and port of your MySQL database, respectively. If the standard "
"installation of the ICSD intranet version has been followed, the default "
"values should work. Otherwise contact your system administrator to get the "
"required information::"
msgstr ""
"``user`` / ``pass_wd`` / ``db`` / ``port``: 分别表示登录用户名、密码、数据库名称、MYSQL数据库端口。若 "
"ICSD 内联网版本已经根据前文所述标准安装，默认值即可生效。否则你需要询问你的系统管理员获取所需的信息::"

#: ../docs/source/import_export/dbimporters/icsd.rst:63
msgid "Other settings:"
msgstr "其他设置:"

#: ../docs/source/import_export/dbimporters/icsd.rst:65
msgid ""
"``querydb``: If ``True`` (default) the MySQL database is queried, otherwise "
"the web page is queried."
msgstr "``querydb``: 若为 ``True`` （默认），会查询MYSQL，否则会通过网页查询。"

#: ../docs/source/import_export/dbimporters/icsd.rst:67
msgid ""
"A more detailed documentation and additional settings can be found under "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter`."
msgstr ""
"更详细的文档和额外设置项可在以下部分找到 "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` 。"

#: ../docs/source/import_export/dbimporters/icsd.rst:72
msgid "If the setup worked, you can do your first query:"
msgstr "若安装正确，你可以按照以下步骤进行第一次查询:"

#: ../docs/source/import_export/dbimporters/icsd.rst:80
msgid "All supported keywords can be obtained using:"
msgstr "全部支持的关键词可由以下方式获得:"

#: ../docs/source/import_export/dbimporters/icsd.rst:86
msgid ""
"More information on the keywords can be found `here <http://www2.fiz-"
"karlsruhe.de/fileadmin/be_user/ICSD/PDF/sci_man_ICSD_v1.pdf>`_."
msgstr ""
"关于关键词的更多信息请参阅 `此处 <http://www2.fiz-"
"karlsruhe.de/fileadmin/be_user/ICSD/PDF/sci_man_ICSD_v1.pdf>`_ 。"

#: ../docs/source/import_export/dbimporters/icsd.rst:88
msgid ""
"A query returns an instance of "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdSearchResults`."
msgstr ""
"一次查询的返回是 :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdSearchResults`"
" 的一个实例。"

#: ../docs/source/import_export/dbimporters/icsd.rst:90
msgid ""
"The :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` at position "
"``i`` can be accessed using:"
msgstr ""
"``i`` 位置处的 :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` "
"可通过以下方式访问:"

#: ../docs/source/import_export/dbimporters/icsd.rst:96
msgid "You can also iterate through all query results:"
msgstr "你也可以迭代得到全部的查询结果:"

#: ../docs/source/import_export/dbimporters/icsd.rst:103
msgid ""
"Instances of :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` "
"have the following methods:"
msgstr ""
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` 的实例包含了以下方法:"

#: ../docs/source/import_export/dbimporters/icsd.rst:105
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`: "
"Return an instance of :py:class:`~aiida.orm.nodes.data.cif.CifData`, which "
"can be used in an AiiDA workflow."
msgstr ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`: 可返回 "
":py:class:`~aiida.orm.nodes.data.cif.CifData` 的一个实例，从而可被AiiDA工作流调用。"

#: ../docs/source/import_export/dbimporters/icsd.rst:107
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`:"
" Return an AiiDA :py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"instance."
msgstr ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`:"
" 返回一个 :py:class:`~aiida.orm.nodes.data.structure.StructureData` 实例。"

#: ../docs/source/import_export/dbimporters/icsd.rst:109
msgid ""
":py:meth:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry.get_ase_structure`:"
" Return an ASE structure."
msgstr ""
":py:meth:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry.get_ase_structure`:"
" 返回ASE结构。"

#: ../docs/source/import_export/dbimporters/icsd.rst:111
msgid "The most convenient format can be chosen for further processing."
msgstr "大部分便于更进一步处理的格式都可以选择。"

#: ../docs/source/import_export/dbimporters/icsd.rst:115
msgid "Full example"
msgstr "完整的例子"

#: ../docs/source/import_export/dbimporters/icsd.rst:117
msgid "Here is a full example how the ICSD importer can be used:"
msgstr "以下是如何使用ICSD导入模块的完整例子:"

#: ../docs/source/import_export/dbimporters/icsd.rst:143
msgid "Troubleshooting: Testing the MySQL connection"
msgstr "疑难解答: 测试MYSQL连接"

#: ../docs/source/import_export/dbimporters/icsd.rst:145
msgid ""
"To test your MySQL connection, first make sure that you can connect to the "
"3306 port of the machine hosting the database. If the database is not hosted"
" by your local machine, use the local port tunneling provided by ssh, as "
"follows::"
msgstr ""
"为测试MYSQL连接，首先确保你可以通过3306端口与运行数据库的服务器连接。若数据库不在本地，请用本地端口通过ssh隧道建立连接，具体操作如下:"

#: ../docs/source/import_export/dbimporters/icsd.rst:150
msgid ""
"If you get an URLError with Errno 111 (Connection refused) when you query "
"the database, try to use instead:"
msgstr "若在访问数据库时报Errno 111 (Connection refused)的URLError，请换用以下命令:"

#: ../docs/source/import_export/dbimporters/icsd.rst:156
msgid "You need an account on the host machine."
msgstr "你需要主机上的一个账户。"

#: ../docs/source/import_export/dbimporters/icsd.rst:158
msgid ""
"There are plenty of explanations online on how to setup a tunnel over a SSH "
"connection using the ``-L`` option."
msgstr "如何通过 ``-L`` 选项建立ssh连接，有很多在线的教程。"

#: ../docs/source/import_export/dbimporters/icsd.rst:160
msgid "Then open a new ``verdi shell`` and type:"
msgstr "然后打开一个新的 ``verdi shell`` 并输入:"

#: ../docs/source/import_export/dbimporters/icsd.rst:169
msgid ""
"If you do not get an error and it does not timeout, you have successfully "
"established your connection to the MySQL database."
msgstr "若未报任何错并且没有连接超时，你便已经与MYSQL数据库成功建立了连接。"

#: ../docs/source/import_export/external_dbs.rst:3
msgid "Structures and external databases"
msgstr "结构信息和外部数据库"

#: ../docs/source/import_export/external_dbs.rst:5
msgid ""
"AiiDA support the automatic import and export of atomic structures from and "
"to selected external databases."
msgstr "AiiDA支持由选定的外部数据库中自动导入原子结构或导出到该数据库中。"

#: ../docs/source/import_export/external_dbs.rst:8
#: ../docs/source/import_export/main.rst:25
msgid "Import"
msgstr "导入"

#: ../docs/source/import_export/external_dbs.rst:10
msgid ""
"The base class that defines the API for the importers can be found here: "
":py:class:`~aiida.tools.dbimporters.baseclasses.DbImporter`."
msgstr ""
"导入模块的基本类被定义为 :py:class:`~aiida.tools.dbimporters.baseclasses.DbImporter` 。"

#: ../docs/source/import_export/external_dbs.rst:13
msgid "Below is a list of available plugins:"
msgstr "以下是可用插件的列表:"

#: ../docs/source/import_export/index.rst:3
msgid "Import and Export"
msgstr "导入和导出"

#: ../docs/source/import_export/main.rst:3
msgid "AiiDA Graphs"
msgstr "AiiDA图"

#: ../docs/source/import_export/main.rst:5
msgid ""
"AiiDA offers tools for exporting selected parts of an AiiDA graph to a file "
"for backup or sharing purposes."
msgstr "AiiDA提供工具，以导出选定部分的图到文件中，以便备份或者分享。"

#: ../docs/source/import_export/main.rst:8
msgid "Export"
msgstr "导出"

#: ../docs/source/import_export/main.rst:10
msgid ""
"Use ``verdi export create`` to export a selection of nodes, codes, groups, "
"users, or computers."
msgstr "使用 ``verdi export create`` 导出选定的节点、代码、组、用户、机器等。"

#: ../docs/source/import_export/main.rst:12
msgid ""
"**Selection:** Nodes can be selected via identifier (PK, UUID, label) or by "
"exporting predefined groups of nodes."
msgstr "**选项:** 节点可由身份验证信息（PK, UUID, label）选取，或导出预定义组的节点。"

#: ../docs/source/import_export/main.rst:13
msgid ""
"**Augmentation:** By default, the export function augments the selection of "
"nodes by their parents in order to preserve the provenance. For calculation "
"nodes, the direct outputs are also added. By default, comments and logs are "
"also added for each exported node. These may be excluded using the proper "
"flags. There are several other options to export specific parts of the "
"provenance graph, starting from the selection."
msgstr ""
"**扩增:** "
"默认情况下，导出函数通过它们的父对象扩大选择的节点以便保持可验证性。对于算例节点来说，直接的输出也被加入。默认情况下，每个被导出节点的注释和日志也被加入。以上情况可由增加合适的flag排除。同时，也有其他几种选项可以根据选择导出可验证性图的特定部分。"

#: ../docs/source/import_export/main.rst:18
msgid ""
"**File content:** The export file contains all information pertaining to the"
" exported nodes: both the information stored in the database and files "
"stored in the AiiDA repository."
msgstr "**包含的文件:** 导出的文件包括被导出节点的全部信息: 全部信息都被储存在数据库中，而文件被储存在 AiiDA 仓库中。"

#: ../docs/source/import_export/main.rst:19
msgid ""
"**Compression:** By default, the export file is compressed using gzip, "
"creating a tar ball (tar.gz). It is also possible to create a compressed or "
"uncompressed zip file."
msgstr ""
"**压缩:** 默认情况下，导出文件以gzip形式被压缩，因而创建一个tar.gz格式压缩文件。也可以创建为压缩的或者未经压缩的zip格式文件。"

#: ../docs/source/import_export/main.rst:22
msgid "See ``verdi export create -h`` for a full list of available options."
msgstr "更多可用功能请参阅 ``verdi export create -h`` 提供的信息。"

#: ../docs/source/import_export/main.rst:27
msgid ""
"Use ``verdi import`` to import an AiiDA export archive generated by ``verdi "
"export create``, either a local file or an URL."
msgstr ""
"使用 ``verdi import`` 导入由 ``verdi export create`` "
"生成的AiiDA导出存档，该存档可以是本地文件或者一个URL。"

#: ../docs/source/import_export/main.rst:29
msgid ""
"**Duplication:** AiiDA will avoid identifier collisions and node duplication"
" based on UUIDs or email comparisons."
msgstr "**复制:** AiiDA会根据UUID或邮箱的比较规避身份识别信息的冲突和重复的节点。"

#: ../docs/source/import_export/main.rst:30
msgid ""
"**Merging:** By default, all existing entities will be updated with the most"
" recent changes. Node extras and comments have special modes for determining"
" how to import them."
msgstr "**合并:** 默认情况下，全部现存实体都会随最近改动被更新。节点的额外信息以及注释则有特殊模式可决定如何导入。"

#: ../docs/source/import_export/main.rst:33
msgid ""
"See ``verdi import -h`` for a full list of available options and their "
"descriptions."
msgstr "请参阅 ``verdi import -h`` 提供的信息查看可用选项和它们的描述的完整列表。"

#: ../docs/source/import_export/main.rst:38
msgid "Export File Format"
msgstr "导出文件格式"

#: ../docs/source/import_export/main.rst:40
msgid ""
"An AiiDA export file is an archive of ``.zip`` or ``.tar.gz`` format with "
"the following content:"
msgstr "AiiDA格式可以是包含以下信息的 ``.zip`` 或 ``.tar.gz`` 格式的存档:"

#: ../docs/source/import_export/main.rst:42
msgid ""
"``metadata.json`` file containing information on the version of AiiDA as "
"well as the database schema."
msgstr " ``metadata.json`` 文件，包含了AiiDA版本和数据库架构信息的。"

#: ../docs/source/import_export/main.rst:43
msgid "``data.json`` file containing the exported nodes and their links."
msgstr "``data.json`` 文件，包含了导出的节点和链接。"

#: ../docs/source/import_export/main.rst:44
msgid ""
"``nodes/`` directory containing the repository files corresponding to the "
"exported nodes."
msgstr "``nodes/`` 文件夹，包含导出节点对应的仓库文件。"

#: ../docs/source/import_export/main.rst:49
msgid "``metadata.json``"
msgstr "``metadata.json``"

#: ../docs/source/import_export/main.rst:51
msgid ""
"This file contains important information, and it is necessary for the "
"correct interpretation of ``data.json``. Apart from the data schema, the "
"AiiDA and export versions are also mentioned. This is used to avoid any "
"incompatibilities among different versions of AiiDA. It should be noted that"
" the schema described in ``metadata.json`` is related to the data itself - "
"abstracted schema focused on the extracted information - and not how the "
"data is stored in the database (database schema). This makes the "
"import/export mechanism transparent to the database system used, backend "
"selected and how the data is organised in the database (database schema)."
msgstr ""
"该文件包含了重要的信息，并且对正确解析 ``data.json`` "
"也是必要的。除了数据结构，AiiDA和导出的版本信息也被提到，主要是为了防止不同版本的AiiDA间的不兼容性。需要注意的是 "
"``metadata.json`` "
"中描述的数据结构信息与数据自身有关，是由提取的数据抽象得到的，而不是数据在数据库中存储的结构（数据库结构）。这使得导入和导出的机制与使用的数据库系统、选取的后端、数据在数据库中的存储（数据库结构）都有关系。"

#: ../docs/source/import_export/main.rst:57
msgid "Let's have a look at the contents of ``metadata.json``:"
msgstr "来看 ``metadata.json`` 的内容:"

#: ../docs/source/import_export/main.rst:157
msgid ""
"At the beginning of the file, we see the version of the export file and the "
"version of the AiiDA code."
msgstr "文件的开头部分，可见导出文件和AiiDA代码的版本:"

#: ../docs/source/import_export/main.rst:159
msgid ""
"The entities that are exported are mentioned in *unique_identifiers* with "
"their respective unique identifiers. Knowing the unique IDs is useful for "
"duplicate avoidance (in order to avoid the insertion of the node multiple "
"times)."
msgstr ""
"在 *unique_identifiers* "
"中，被导出的实体唯一的身份认证信息被提到。知道了唯一的ID，对于防止产生副本是很有用的（为防止节点被多次插入）。"

#: ../docs/source/import_export/main.rst:162
msgid ""
"Then in *all_fields_info*, the properties of each entity are mentioned. The "
"correlations with other entities are also mentioned. For example, the entity"
" *Node* is related to a *Computer* and a *User*. The corresponding entity "
"names appear nested next to the properties to show this correlation."
msgstr ""
"在 *all_fields_info* 中，每个实体的性质以及实体间的相互关系被提到。例如，实体 *Node* 与 *Computer* 和 "
"*User* 有关。相关实体的名字被列在性质旁边以展示这种相关性。"

#: ../docs/source/import_export/main.rst:169
msgid ""
"If you have migrated an export archive to the newest export version, there "
"may be an extra entry in ``metadata.json``. This simply states from which "
"export version the archive was migrated."
msgstr "若你已经将导出的存档迁移到最新导出版本， ``metadata.json`` 中可能会有额外入口。这取决于存档被迁移到哪个版本。"

#: ../docs/source/import_export/main.rst:174
msgid ""
"If you supply an old export archive that the current AiiDA code does not "
"support, ``verdi import`` will automatically try to migrate the archive by "
"calling ``verdi export migrate``."
msgstr ""
"若提供当前AiiDA 代码不支持的旧版导出存档， ``verdi import`` 会自动尝试调用 ``verdi export migrate`` "
"移植此存档。"

#: ../docs/source/import_export/main.rst:179
msgid "``data.json``"
msgstr "``data.json``"

#: ../docs/source/import_export/main.rst:181
msgid "A sample of the ``data.json`` file follows:"
msgstr " ``data.json`` 的一个样例如下所示:"

#: ../docs/source/import_export/main.rst:311
msgid ""
"At the start of the JSON file shown above, the links among the various AiiDA"
" nodes are stated (*links_uuid* field). For every link the UUIDs (universal "
"unique identifiers) of the connected nodes, as well as the name of the link,"
" are mentioned."
msgstr ""
"在以上JSON文件的起始部分，不同AiiDA节点间的链接被列出（ *links_uuid* 区域）。对于每个链接所连接的节点，其UUID "
"(universal unique identifiers) 和名称都被提到。"

#: ../docs/source/import_export/main.rst:314
msgid ""
"Then the export data follows, where the data appears \"grouped\" into entity"
" types. It is worth noticing the references between the instances of the "
"various entities. For example the DbNode with identifier *5921143* belongs "
"to the user with identifier 2 and was generated by the computer with "
"identifier 1."
msgstr ""
"随后是导出的数据，数据在其中依据实体类型分组。值得注意的是多种实体的实例间的参考。例如标识符为 *5921143* "
"的DbNode属于标识符为2的用户，并由标识符为1的机器生成。"

#: ../docs/source/import_export/main.rst:318
msgid ""
"The name of the entities is a reference to the base ORM entities. This "
"ensuries that the export files are cross-backend compatible."
msgstr "实体的名字是基本ORM实体的一个参考。这保证了导出的文件可以保持对不同后端的兼容性。"

#: ../docs/source/import_export/main.rst:321
msgid ""
"If any groups are extracted, then they are mentioned in the corresponding "
"field (*groups_uuid*)."
msgstr "若任何组被提取出来，它们会在相应区域被提到（*groups_uuid*）。"

#: ../docs/source/import_export/main.rst:323
msgid ""
"Attributes and extras of the extracted nodes, are described in the final "
"part of the JSON file. The identifier of the corresponding node is used as a"
" key for the attribute or extra."
msgstr "被提取节点的属性和额外信息在JSON文件的最后部分被提到。对应节点的身份识别信息作为属性或额外信息的key使用。"

#: ../docs/source/import_export/main.rst:328
msgid "Export Archive Migration"
msgstr "导出存档的迁移"

#: ../docs/source/import_export/main.rst:330
msgid ""
"Old AiiDA archives may be migrated to the newest version using ``verdi "
"export migrate``, in order to make them importable into the newest AiiDA "
"version."
msgstr "旧版AiiDA存档可通过 ``verdi export migrate`` 被迁移到新版，目的是使他们在新版AiiDA中可被导入。"

#: ../docs/source/import_export/main.rst:332
msgid ""
"New export versions are introduced for several different reasons. This may "
"generally be when * a change occurs in what can or cannot be exported for "
"each entity, * the schemes in ``metadata.json`` are updated or changed, * or"
" standardized exported property values (like the one for ``node_type`` or "
"similar) are updated in AiiDA."
msgstr ""
"新版导出版本因为几种不同原因而被引入。通常是当* 每个实体可以或不可以导出的内容发生变化时，* ``metadata.json`` "
"中的结构被更新或修改，* 标准化的导出性质的值（如``node_type``或类似值）在AiiDA中更新。"

#: ../docs/source/import_export/main.rst:338
msgid ""
"As a default, ``verdi import`` will call ``verdi export migrate`` if an old "
"archive is supplied."
msgstr "默认情况下，若旧版存档被提供， ``verdi import`` 会调用 ``verdi export migrate`` 。"

#: ../docs/source/import_export/main.rst:342
msgid ""
"It is not possible to \"downgrade\" an archive to previous export versions. "
"However, since the migration will produce a new file, you will have your "
"archive in at least two different export versions."
msgstr "将存档“降级”到旧版是不可能的。然而，由于迁移会产生新文件，你需要至少两个不同导出版本的存档。"

#: ../docs/source/import_export/main.rst:347
msgid ""
"For archives of version 0.3 and older (run either ``verdi export inspect -v "
"<ARCHIVE>`` or inspect your ``metadata.json`` file directly to check the "
"version), it is advisable that you manually try to convince yourself that "
"the migration was completely successful. While all migrations are tested, "
"trying to include reasonable edge-cases, the migrations involed in going "
"from version 0.3 to 0.4 are intricate and it is virtually impossible to "
"account for all edge-cases that may occur. It is worth noting that if you "
"ever have an issue, please report it on `GitHub "
"<https://www.github.com/aiidateam/aiida_core/issues/new>`_, join the `AiiDA "
"mailing list <http://www.aiida.net/mailing-list/>`_, or use the `contact "
"form <http://www.aiida.net/contact-new/>`_."
msgstr ""
"对于0.3版及以后的存档（运行 ``verdi export inspect -v <ARCHIVE>`` 或直接检查 "
"``metadata.json`` "
"文件以检查版本号），手动确认迁移是否正确完成是推荐的。虽然所有迁移都经过测试，试图包含合理的边缘情况，但从版本0.3到0.4的调用迁移是复杂的，可能不会考虑到可能发生的所有边缘情况。值得注意的是，如果您遇到问题，请在"
" `GitHub <https://www.github.com/aiidateam/aiida_core/issues/new>`_, join "
"the `AiiDA mailing list <http://www.aiida.net/mailing-list/>`_, or use the "
"`contact form <http://www.aiida.net/contact-new/>`_ 上提出。"

#: ../docs/source/import_export/main.rst:353
msgid "Inspect Export Archives"
msgstr "检查导出存档"

#: ../docs/source/import_export/main.rst:355
msgid "You can inspect an export archive by using ``verdi export inspect``."
msgstr "你可以 ``verdi export inspect`` 命令检查导出存档。"

#: ../docs/source/import_export/main.rst:357
msgid ""
"This is useful to get a quick overview of the amount of different entities "
"contained in the archive. Furthermore, using the ``-v`` flag, you can "
"quickly inspect the archive's export version."
msgstr "快速得到存档中包含的实体的数量是有用的。更深层次地说，使用 ``-v`` flag，你可以快速检查存档的版本。"

#: ../docs/source/import_export/main.rst:360
msgid ""
"Note that for archives with export versions prior to 0.3 (0.3 not included),"
" the quick entities overview is not accurate. Future updates to AiiDA and "
"the export/import schemes may change the validity of other export versions."
msgstr "注意到对版本在0.3以前的导出存档，快速实体预览是不准确的。未来对AiiDA和导入/导出结构的更新将会改变对其他导出版本的有效性。"
