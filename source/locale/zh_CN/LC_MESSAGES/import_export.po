# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-16 20:22+0000\n"
"PO-Revision-Date: 2019-05-17 20:00+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/source/import_export/dbimporters/cod.rst:2
msgid "COD database importer"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:4
msgid ""
"COD database importer is used to import crystal structures from the "
"`Crystallography Open Database <http://www.crystallography.net>`_ (COD) to "
"AiiDA."
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:7
#: ../docs/source/import_export/dbimporters/icsd.rst:19
msgid "Setup"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:9
msgid ""
"An instance of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter` is created as"
" follows:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:17
msgid ""
"No additional parameters are required for standard queries on the main COD "
"server."
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:20
#: ../docs/source/import_export/dbimporters/icsd.rst:70
msgid "How to do a query"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:22
msgid ""
"A search is initiated by using the "
":py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.query` method, "
"supplying statements using the ``keyword=value`` syntax:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:28
msgid ""
"List of possible keywords can be listed using the method "
":py:meth:`~aiida.tools.dbimporters.plugins.cod.CodDbImporter.get_supported_keywords`:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:34
msgid ""
"Values for most of the keywords can be encapsulated in a list. In that case "
"the query will return entries that match any of the values (binary `OR`) "
"from the list. Moreover, in the case of multiple keywords, entries that "
"match all the conditions imposed by the keywords, will be returned (binary "
"`AND`)."
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:38
msgid "Example:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:44
msgid "is equivalent to the following SQL statement:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:52
msgid ""
"A query returns an instance of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodSearchResults`, which can"
" be used in the same way as a list of "
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` instances:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:64
msgid ""
"Using data from :py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry`"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:66
msgid ""
":py:class:`~aiida.tools.dbimporters.plugins.cod.CodEntry` has a few methods "
"(inherited from :py:class:`~aiida.tools.dbimporters.baseclasses.CifEntry`) "
"to access the contents of its instances:"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:68
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:69
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_ase_structure`"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:70
msgid ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:71
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_parsed_cif`"
msgstr ""

#: ../docs/source/import_export/dbimporters/cod.rst:72
msgid ":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_raw_cif`"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:5
msgid "ICSD database importer"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:7
msgid ""
"In this section we explain how to import CIF files from the ICSD database "
"using the :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` "
"class."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:9
msgid ""
"Before being able to query ICSD, provided by FIZ Karlsruhe, you should have "
"the intranet database installed on a server (http://www2.fiz-"
"karlsruhe.de/icsd_intranet.html). Follow the installation as described in "
"the manual."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:12
msgid ""
"It is necessary to know the webpage of the ICSD web interface and have "
"access to the full database from the local machine."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:14
msgid ""
"You can either query the MySQL database or the web page. The latter is "
"restricted to a maximum of 1000 search results, which makes it unsuitable "
"for data mining. For this purpose, we recommend you to set up the MySQL "
"connection."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:21
msgid ""
"An instance of the "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter` can be "
"created as follows:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:29
msgid ""
"Here is a list of the most important input parameters with an explanation."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:31
msgid "For both connection types (web and SQL):"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:33
msgid ""
"``server``: Address of web interface of the ICSD database. It should contain"
" both the protocol and the domain name, ending with a slash. Example:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:41
msgid "The following parameters are required only for the MySQL query:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:43
msgid "``host``: Database host name address."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:45
msgid ""
"If the database is not hosted on your local machine, it can be useful to "
"create an ssh tunnel to the 3306 port of the database host::"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:49
msgid ""
"If you get an URLError with Errno 111 (Connection refused) when you query "
"the database, try to instead use::"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:53
msgid "The database can then be accessed using \"127.0.0.1\" as host::"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:57
msgid ""
"``user`` / ``pass_wd`` / ``db`` / ``port``: Login username, password, name "
"of database, and port of your MySQL database, respectively. If the standard "
"installation of the ICSD intranet version has been followed, the default "
"values should work. Otherwise contact your system administrator to get the "
"required information::"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:63
msgid "Other settings:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:65
msgid ""
"``querydb``: If ``True`` (default) the MySQL database is queried, otherwise "
"the web page is queried."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:67
msgid ""
"A more detailed documentation and additional settings can be found under "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdDbImporter`."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:72
msgid "If the setup worked, you can do your first query:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:80
msgid "All supported keywords can be obtained using:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:86
msgid ""
"More information on the keywords can be found `here <http://www2.fiz-"
"karlsruhe.de/fileadmin/be_user/ICSD/PDF/sci_man_ICSD_v1.pdf>`_."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:88
msgid ""
"A query returns an instance of "
":py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdSearchResults`."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:90
msgid ""
"The :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` at position "
"``i`` can be accessed using:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:96
msgid "You can also iterate through all query results:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:103
msgid ""
"Instances of :py:class:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry` "
"have the following methods:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:105
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_cif_node`: "
"Return an instance of :py:class:`~aiida.orm.nodes.data.cif.CifData`, which "
"can be used in an AiiDA workflow."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:107
msgid ""
":py:meth:`~aiida.tools.dbimporters.baseclasses.CifEntry.get_aiida_structure`:"
" Return an AiiDA :py:class:`~aiida.orm.nodes.data.structure.StructureData` "
"instance."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:109
msgid ""
":py:meth:`~aiida.tools.dbimporters.plugins.icsd.IcsdEntry.get_ase_structure`:"
" Return an ASE structure."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:111
msgid "The most convenient format can be chosen for further processing."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:115
msgid "Full example"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:117
msgid "Here is a full example how the ICSD importer can be used:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:143
msgid "Troubleshooting: Testing the MySQL connection"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:145
msgid ""
"To test your MySQL connection, first make sure that you can connect to the "
"3306 port of the machine hosting the database. If the database is not hosted"
" by your local machine, use the local port tunneling provided by ssh, as "
"follows::"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:150
msgid ""
"If you get an URLError with Errno 111 (Connection refused) when you query "
"the database, try to use instead:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:156
msgid "You need an account on the host machine."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:158
msgid ""
"There are plenty of explanations online on how to setup a tunnel over a SSH "
"connection using the ``-L`` option."
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:160
msgid "Then open a new ``verdi shell`` and type:"
msgstr ""

#: ../docs/source/import_export/dbimporters/icsd.rst:169
msgid ""
"If you do not get an error and it does not timeout, you have successfully "
"established your connection to the MySQL database."
msgstr ""

#: ../docs/source/import_export/external_dbs.rst:3
msgid "Structures and external databases"
msgstr ""

#: ../docs/source/import_export/external_dbs.rst:5
msgid ""
"AiiDA support the automatic import and export of atomic structures from and "
"to selected external databases."
msgstr ""

#: ../docs/source/import_export/external_dbs.rst:8
#: ../docs/source/import_export/main.rst:25
msgid "Import"
msgstr ""

#: ../docs/source/import_export/external_dbs.rst:10
msgid ""
"The base class that defines the API for the importers can be found here: "
":py:class:`~aiida.tools.dbimporters.baseclasses.DbImporter`."
msgstr ""

#: ../docs/source/import_export/external_dbs.rst:13
msgid "Below is a list of available plugins:"
msgstr ""

#: ../docs/source/import_export/index.rst:3
msgid "Import and Export"
msgstr ""

#: ../docs/source/import_export/main.rst:3
msgid "AiiDA Graphs"
msgstr ""

#: ../docs/source/import_export/main.rst:5
msgid ""
"AiiDA offers tools for exporting selected parts of an AiiDA graph to a file "
"for backup or sharing purposes."
msgstr ""

#: ../docs/source/import_export/main.rst:8
msgid "Export"
msgstr ""

#: ../docs/source/import_export/main.rst:10
msgid ""
"Use ``verdi export create`` to export a selection of nodes, codes, groups, "
"users, or computers."
msgstr ""

#: ../docs/source/import_export/main.rst:12
msgid ""
"**Selection:** Nodes can be selected via identifier (PK, UUID, label) or by "
"exporting predefined groups of nodes."
msgstr ""

#: ../docs/source/import_export/main.rst:13
msgid ""
"**Augmentation:** By default, the export function augments the selection of "
"nodes by their parents in order to preserve the provenance. For calculation "
"nodes, the direct outputs are also added. By default, comments and logs are "
"also added for each exported node. These may be excluded using the proper "
"flags. There are several other options to export specific parts of the "
"provenance graph, starting from the selection."
msgstr ""

#: ../docs/source/import_export/main.rst:18
msgid ""
"**File content:** The export file contains all information pertaining to the"
" exported nodes: both the information stored in the database and files "
"stored in the AiiDA repository."
msgstr ""

#: ../docs/source/import_export/main.rst:19
msgid ""
"**Compression:** By default, the export file is compressed using gzip, "
"creating a tar ball (tar.gz). It is also possible to create a compressed or "
"uncompressed zip file."
msgstr ""

#: ../docs/source/import_export/main.rst:22
msgid "See ``verdi export create -h`` for a full list of available options."
msgstr ""

#: ../docs/source/import_export/main.rst:27
msgid ""
"Use ``verdi import`` to import an AiiDA export archive generated by ``verdi "
"export create``, either a local file or an URL."
msgstr ""

#: ../docs/source/import_export/main.rst:29
msgid ""
"**Duplication:** AiiDA will avoid identifier collisions and node duplication"
" based on UUIDs or email comparisons."
msgstr ""

#: ../docs/source/import_export/main.rst:30
msgid ""
"**Merging:** By default, all existing entities will be updated with the most"
" recent changes. Node extras and comments have special modes for determining"
" how to import them."
msgstr ""

#: ../docs/source/import_export/main.rst:33
msgid ""
"See ``verdi import -h`` for a full list of available options and their "
"descriptions."
msgstr ""

#: ../docs/source/import_export/main.rst:38
msgid "Export File Format"
msgstr ""

#: ../docs/source/import_export/main.rst:40
msgid ""
"An AiiDA export file is an archive of ``.zip`` or ``.tar.gz`` format with "
"the following content:"
msgstr ""

#: ../docs/source/import_export/main.rst:42
msgid ""
"``metadata.json`` file containing information on the version of AiiDA as "
"well as the database schema."
msgstr ""

#: ../docs/source/import_export/main.rst:43
msgid "``data.json`` file containing the exported nodes and their links."
msgstr ""

#: ../docs/source/import_export/main.rst:44
msgid ""
"``nodes/`` directory containing the repository files corresponding to the "
"exported nodes."
msgstr ""

#: ../docs/source/import_export/main.rst:49
msgid "``metadata.json``"
msgstr ""

#: ../docs/source/import_export/main.rst:51
msgid ""
"This file contains important information, and it is necessary for the "
"correct interpretation of ``data.json``. Apart from the data schema, the "
"AiiDA and export versions are also mentioned. This is used to avoid any "
"incompatibilities among different versions of AiiDA. It should be noted that"
" the schema described in ``metadata.json`` is related to the data itself - "
"abstracted schema focused on the extracted information - and not how the "
"data is stored in the database (database schema). This makes the "
"import/export mechanism transparent to the database system used, backend "
"selected and how the data is organised in the database (database schema)."
msgstr ""

#: ../docs/source/import_export/main.rst:57
msgid "Let's have a look at the contents of ``metadata.json``:"
msgstr ""

#: ../docs/source/import_export/main.rst:157
msgid ""
"At the beginning of the file, we see the version of the export file and the "
"version of the AiiDA code."
msgstr ""

#: ../docs/source/import_export/main.rst:159
msgid ""
"The entities that are exported are mentioned in *unique_identifiers* with "
"their respective unique identifiers. Knowing the unique IDs is useful for "
"duplicate avoidance (in order to avoid the insertion of the node multiple "
"times)."
msgstr ""

#: ../docs/source/import_export/main.rst:162
msgid ""
"Then in *all_fields_info*, the properties of each entity are mentioned. The "
"correlations with other entities are also mentioned. For example, the entity"
" *Node* is related to a *Computer* and a *User*. The corresponding entity "
"names appear nested next to the properties to show this correlation."
msgstr ""

#: ../docs/source/import_export/main.rst:169
msgid ""
"If you have migrated an export archive to the newest export version, there "
"may be an extra entry in ``metadata.json``. This simply states from which "
"export version the archive was migrated."
msgstr ""

#: ../docs/source/import_export/main.rst:174
msgid ""
"If you supply an old export archive that the current AiiDA code does not "
"support, ``verdi import`` will automatically try to migrate the archive by "
"calling ``verdi export migrate``."
msgstr ""

#: ../docs/source/import_export/main.rst:179
msgid "``data.json``"
msgstr ""

#: ../docs/source/import_export/main.rst:181
msgid "A sample of the ``data.json`` file follows:"
msgstr ""

#: ../docs/source/import_export/main.rst:311
msgid ""
"At the start of the JSON file shown above, the links among the various AiiDA"
" nodes are stated (*links_uuid* field). For every link the UUIDs (universal "
"unique identifiers) of the connected nodes, as well as the name of the link,"
" are mentioned."
msgstr ""

#: ../docs/source/import_export/main.rst:314
msgid ""
"Then the export data follows, where the data appears \"grouped\" into entity"
" types. It is worth noticing the references between the instances of the "
"various entities. For example the DbNode with identifier *5921143* belongs "
"to the user with identifier 2 and was generated by the computer with "
"identifier 1."
msgstr ""

#: ../docs/source/import_export/main.rst:318
msgid ""
"The name of the entities is a reference to the base ORM entities. This "
"ensuries that the export files are cross-backend compatible."
msgstr ""

#: ../docs/source/import_export/main.rst:321
msgid ""
"If any groups are extracted, then they are mentioned in the corresponding "
"field (*groups_uuid*)."
msgstr ""

#: ../docs/source/import_export/main.rst:323
msgid ""
"Attributes and extras of the extracted nodes, are described in the final "
"part of the JSON file. The identifier of the corresponding node is used as a"
" key for the attribute or extra."
msgstr ""

#: ../docs/source/import_export/main.rst:328
msgid "Export Archive Migration"
msgstr ""

#: ../docs/source/import_export/main.rst:330
msgid ""
"Old AiiDA archives may be migrated to the newest version using ``verdi "
"export migrate``, in order to make them importable into the newest AiiDA "
"version."
msgstr ""

#: ../docs/source/import_export/main.rst:332
msgid ""
"New export versions are introduced for several different reasons. This may "
"generally be when * a change occurs in what can or cannot be exported for "
"each entity, * the schemes in ``metadata.json`` are updated or changed, * or"
" standardized exported property values (like the one for ``node_type`` or "
"similar) are updated in AiiDA."
msgstr ""

#: ../docs/source/import_export/main.rst:338
msgid ""
"As a default, ``verdi import`` will call ``verdi export migrate`` if an old "
"archive is supplied."
msgstr ""

#: ../docs/source/import_export/main.rst:342
msgid ""
"It is not possible to \"downgrade\" an archive to previous export versions. "
"However, since the migration will produce a new file, you will have your "
"archive in at least two different export versions."
msgstr ""

#: ../docs/source/import_export/main.rst:347
msgid ""
"For archives of version 0.3 and older (run either ``verdi export inspect -v "
"<ARCHIVE>`` or inspect your ``metadata.json`` file directly to check the "
"version), it is advisable that you manually try to convince yourself that "
"the migration was completely successful. While all migrations are tested, "
"trying to include reasonable edge-cases, the migrations involed in going "
"from version 0.3 to 0.4 are intricate and it is virtually impossible to "
"account for all edge-cases that may occur. It is worth noting that if you "
"ever have an issue, please report it on `GitHub "
"<https://www.github.com/aiidateam/aiida_core/issues/new>`_, join the `AiiDA "
"mailing list <http://www.aiida.net/mailing-list/>`_, or use the `contact "
"form <http://www.aiida.net/contact-new/>`_."
msgstr ""

#: ../docs/source/import_export/main.rst:353
msgid "Inspect Export Archives"
msgstr ""

#: ../docs/source/import_export/main.rst:355
msgid "You can inspect an export archive by using ``verdi export inspect``."
msgstr ""

#: ../docs/source/import_export/main.rst:357
msgid ""
"This is useful to get a quick overview of the amount of different entities "
"contained in the archive. Furthermore, using the ``-v`` flag, you can "
"quickly inspect the archive's export version."
msgstr ""

#: ../docs/source/import_export/main.rst:360
msgid ""
"Note that for archives with export versions prior to 0.3 (0.3 not included),"
" the quick entities overview is not accurate. Future updates to AiiDA and "
"the export/import schemes may change the validity of other export versions."
msgstr ""
