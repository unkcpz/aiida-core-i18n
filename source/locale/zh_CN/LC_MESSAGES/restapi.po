# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 14:09+0800\n"
"PO-Revision-Date: 2019-05-15 06:24+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/scut-ccmp/teams/98995/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/restapi/index.rst:5
msgid "REST API for AiiDA"
msgstr ""

#: ../../source/restapi/index.rst:7
msgid ""
"AiiDA provides a `RESTful "
"<https://en.wikipedia.org/wiki/Representational_state_transfer/>`_ `API "
"<https://en.wikipedia.org/wiki/Application_programming_interface/>`_ that "
"provides access to the AiiDA objects stored in the database."
msgstr ""

#: ../../source/restapi/index.rst:12
msgid ""
"The AiiDA REST API is implemented using the ``Flask RESTFul`` framework and "
"supports only GET methods (reading) for the time being. The response "
"contains the data in ``JSON`` format."
msgstr ""

#: ../../source/restapi/index.rst:16
msgid ""
"In this document, file paths are given relative to the AiiDA installation "
"folder. The source files of the API are contained in the folder "
"``aiida/restapi``."
msgstr ""

#: ../../source/restapi/index.rst:20
msgid "Running the REST API"
msgstr ""

#: ../../source/restapi/index.rst:22
msgid "To start the REST server open a terminal and type"
msgstr ""

#: ../../source/restapi/index.rst:28
msgid ""
"This command will hook up a REST api with the default parameters, namely on "
"port ``5000`` of ``localhost``, connect to the default AiiDA profile and "
"assuming the default folder for the REST configuration files, namely "
"``common``."
msgstr ""

#: ../../source/restapi/index.rst:32
msgid "For an overview of options accepted by ``verdi restapi`` you can type"
msgstr ""

#: ../../source/restapi/index.rst:39
msgid ""
"Like all ``verdi`` commands, the AiiDA profile can be changed by putting "
"``-p PROFILE`` right after ``verdi``."
msgstr ""

#: ../../source/restapi/index.rst:41
msgid "The base url for your REST API is::"
msgstr ""

#: ../../source/restapi/index.rst:45
msgid ""
"where the last field identifies the version of the API (currently ``v2``). "
"Simply type this URL in your browser or use command-line tools such as "
"``curl`` or ``wget``."
msgstr ""

#: ../../source/restapi/index.rst:48
msgid ""
"For the full list of configuration options, see ``aiida/restapi/config.py``."
msgstr ""

#: ../../source/restapi/index.rst:52
msgid "General form of the urls"
msgstr ""

#: ../../source/restapi/index.rst:54
msgid "A generic url to send requests to the REST API is formed by:"
msgstr ""

#: ../../source/restapi/index.rst:56
msgid ""
"the base url. It specifies the host and the version of the API. Example::"
msgstr ""

#: ../../source/restapi/index.rst:60
msgid ""
"the path. It defines the kind of resource requested by the client and the "
"type of query."
msgstr ""

#: ../../source/restapi/index.rst:61
msgid ""
"the query string (not mandatory). It can be used for any further "
"specification of the request, e.g. to introduce query filters, to give "
"instructions for ordering, to set how results have to be paginated, etc."
msgstr ""

#: ../../source/restapi/index.rst:63
msgid ""
"The query string is introduced by the question mark character ``?``. Here "
"are some examples::"
msgstr ""

#: ../../source/restapi/index.rst:69
msgid "The trailing slash at the end of the path is not mandatory."
msgstr ""

#: ../../source/restapi/index.rst:72
msgid "How to set the number of results"
msgstr ""

#: ../../source/restapi/index.rst:74
msgid ""
"Before exploring in details the functionalities of the API it is important "
"to know that the AiiDA RESTAPI provides two different ways to limit the "
"number of results returned by the server: using pagination, or specifying "
"explicitly *limit* and *offset*."
msgstr ""

#: ../../source/restapi/index.rst:77
msgid "Pagination"
msgstr ""

#: ../../source/restapi/index.rst:79
msgid ""
"The complete set of results is divided in *pages* containing by default 20 "
"results each. Individual pages are accessed by appending ``/page/(PAGE)`` to"
" the end of the path, where ``(PAGE)`` has to be replaced by the number of "
"the required page. The number of results contained in each page can be "
"altered by specifying the ``perpage=(PERPAGE)`` field in the query string. "
"However, ``(PERPAGE)`` values larger than 400 are not allowed. Examples::"
msgstr ""

#: ../../source/restapi/index.rst:85
msgid ""
"If no page number is specified, as in the last example, the system redirects"
" the request to page 1. When pagination is used the header of the response "
"contains two more non-empty fields:"
msgstr ""

#: ../../source/restapi/index.rst:87
msgid ""
"``X-Total-Counts`` (custom field): the total number of results returned by "
"the query, i.e.the sum of the results of all pages)"
msgstr ""

#: ../../source/restapi/index.rst:88
msgid ""
"``Links``: links to the first, previous, next, and last page. Suppose you "
"send a request whose results would fill 8 pages. Then the value of the "
"``Links`` field would look like::"
msgstr ""

#: ../../source/restapi/index.rst:96
msgid "Setting *limit* and *offset*"
msgstr ""

#: ../../source/restapi/index.rst:98
msgid "You can specify two special fields in the query string:"
msgstr ""

#: ../../source/restapi/index.rst:100
msgid ""
"``limit=(LIMIT)``: field that specifies the largest number of results that "
"will be returned, ex: \"limit=20\". The default and highest allowed "
"``LIMIT`` is 400."
msgstr ""

#: ../../source/restapi/index.rst:101
msgid ""
"``offset=(OFFSET)``: field that specifies how many entries are skipped "
"before returning results, ex: ``offset=20``. By default no offset applies."
msgstr ""

#: ../../source/restapi/index.rst:103
msgid "Example::"
msgstr ""

#: ../../source/restapi/index.rst:109
msgid "How to build the path"
msgstr ""

#: ../../source/restapi/index.rst:111
msgid ""
"The first element of the path is the *Resource* corresponding to the AiiDA "
"object(s) you want to request. The following resources are available:"
msgstr ""

#: ../../source/restapi/index.rst:115
msgid "Class"
msgstr ""

#: ../../source/restapi/index.rst:115
msgid "Resource"
msgstr ""

#: ../../source/restapi/index.rst:117
msgid ":py:class:`ProcessNode <aiida.orm.nodes.process.ProcessNode>`"
msgstr ""

#: ../../source/restapi/index.rst:117
msgid "``/calculations``"
msgstr ""

#: ../../source/restapi/index.rst:119
msgid ":py:class:`Computer <aiida.orm.Computer>`"
msgstr ""

#: ../../source/restapi/index.rst:119
msgid "``/computers``"
msgstr ""

#: ../../source/restapi/index.rst:121
msgid ":py:class:`Data <aiida.orm.nodes.data.data.Data>`"
msgstr ""

#: ../../source/restapi/index.rst:121
msgid "``/data``"
msgstr ""

#: ../../source/restapi/index.rst:123
msgid ":py:class:`Group <aiida.orm.groups.Group>`"
msgstr ""

#: ../../source/restapi/index.rst:123
msgid "``/groups``"
msgstr ""

#: ../../source/restapi/index.rst:125
msgid ":py:class:`Node <aiida.orm.nodes.Node>`"
msgstr ""

#: ../../source/restapi/index.rst:125
msgid "``/nodes``"
msgstr ""

#: ../../source/restapi/index.rst:127
msgid ":py:class:`User <aiida.orm.User>`"
msgstr ""

#: ../../source/restapi/index.rst:127
msgid "``/users``"
msgstr ""

#: ../../source/restapi/index.rst:129
msgid ":py:class:`BandsData <aiida.orm.nodes.data.array.bands.BandsData>`"
msgstr ""

#: ../../source/restapi/index.rst:129
msgid "``/bands``"
msgstr ""

#: ../../source/restapi/index.rst:131
msgid ":py:class:`CifData <aiida.orm.nodes.data.cif.CifData>`"
msgstr ""

#: ../../source/restapi/index.rst:131
msgid "``/cifs``"
msgstr ""

#: ../../source/restapi/index.rst:133
msgid ""
":py:class:`KpointsData <aiida.orm.nodes.data.array.kpoints.KpointsData>`"
msgstr ""

#: ../../source/restapi/index.rst:133
msgid "``/kpoints``"
msgstr ""

#: ../../source/restapi/index.rst:135
msgid ""
":py:class:`StructureData <aiida.orm.nodes.data.structure.StructureData>`"
msgstr ""

#: ../../source/restapi/index.rst:135
msgid "``/structures``"
msgstr ""

#: ../../source/restapi/index.rst:137
msgid ":py:class:`UpfData <aiida.orm.nodes.data.upf.UpfData>`"
msgstr ""

#: ../../source/restapi/index.rst:137
msgid "``/upfs``"
msgstr ""

#: ../../source/restapi/index.rst:140
msgid ""
"For a **full list** of available endpoints for each resource, simply query "
"the base URL of the REST API."
msgstr ""

#: ../../source/restapi/index.rst:142
msgid ""
"There are two types of paths: you may either request a list of objects or "
"one specific object of a resource."
msgstr ""

#: ../../source/restapi/index.rst:145
msgid ""
"If no specific endpoint is appended to the name of the resource, the Api "
"returns the full list of objects of that resource (default limits apply)."
msgstr ""

#: ../../source/restapi/index.rst:148
msgid ""
"Appending the endpoint ``schema`` to a resource will give the list of fields"
" that are normally returned by the Api for an object of a specific resource,"
" whereas the endpoint ``statistics`` returns a list of statistical facts "
"concerning a resource. Here are few examples of valid URIs::"
msgstr ""

#: ../../source/restapi/index.rst:163
msgid ""
"If you request informations of a specific object, in general you have to "
"append its entire *uuid* or the starting pattern of its *uuid* to the path."
msgstr ""

#: ../../source/restapi/index.rst:160
msgid "Here are two examples that should return the same object::"
msgstr ""

#: ../../source/restapi/index.rst:165
msgid ""
"In the first URL, we have specified the full *uuid*, whereas in the second "
"only a chunk of its first characters that is sufficiently long to match only"
" one *uuid* in the database. Il the *uuid* pattern is not long enough to "
"identify a unique object, the API will raise an exception. The only "
"exception to this rule is the resource *users* since the corresponding "
"AiiDA``User`` class has no *uuid* attribute. In this case, you have to "
"specify the *pk* (integer) of the object. Here is an example::"
msgstr ""

#: ../../source/restapi/index.rst:171
msgid ""
"When you ask for a single object (and only in that case) you can construct "
"more complex requests, namely, you can ask for its inputs/outputs or for its"
" attributes/extras. In the first case you have to append to the path the "
"string ``/io/inputs`` or ``io/outputs`` depending on the desired relation "
"between the nodes, whereas in the second case you have to append "
"``content/attributes`` or ``content/extras`` depending on the kind of "
"content you want to access. Here are some examples::"
msgstr ""

#: ../../source/restapi/index.rst:178
msgid ""
"As you can see from the last examples, a *Node* object can be accessed "
"requesting either a generic ``nodes`` resource or requesting the resource "
"corresponding to its specific type (``data``, ``codes``, ``calculations``, "
"``kpoints``, ... ). This is because in AiiDA  the classes *Data*, *Code*, "
"and *Calculation* are derived from the class *Node*. In turn, *Data* is the "
"baseclass of a number of built-in and custom classes, e.g. ``KpointsData``, "
"``StructureData``, ``BandsData``, ..."
msgstr ""

#: ../../source/restapi/index.rst:181
msgid "How to build the query string"
msgstr ""

#: ../../source/restapi/index.rst:183
msgid ""
"The query string is formed by one or more fields separated by the special "
"character ``&``. Each field has the form (``key``)(``operator``)(``value``)."
" The same constraints that apply to the names of python variables determine "
"what are the valid keys, namely, only alphanumeric characters plus ``_`` are"
" allowed and the first character cannot be a number."
msgstr ""

#: ../../source/restapi/index.rst:187
msgid "Special keys"
msgstr ""

#: ../../source/restapi/index.rst:189
msgid ""
"There are several special keys that can be specified only once in a query "
"string. All of them must be followed by the operator ``=``. Here is the "
"complete list:"
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "limit"
msgstr ""

#: ../../source/restapi/index.rst:191
msgid "This key only supports integer values."
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "offset"
msgstr ""

#: ../../source/restapi/index.rst:193 ../../source/restapi/index.rst:195
msgid "Same format as ``limit``."
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "perpage"
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "orderby"
msgstr ""

#: ../../source/restapi/index.rst:197
msgid ""
"This key is used to impose a specific ordering to the results. Two orderings"
" are supported, ascending or descending. The value for the ``orderby`` key "
"must be the name of the property with respect to which to order the results."
" Additionally, ``+`` or ``-`` can be pre-pended to the value in order to "
"select, respectively, ascending or descending order. Specifying no leading "
"character is equivalent to select ascending order. Ascending (descending) "
"order for strings corresponds to alphabetical (reverse-alphabetical) order, "
"whereas for datetime objects it corresponds to chronological (reverse-"
"chronological order). Examples:"
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "alist"
msgstr ""

#: ../../source/restapi/index.rst:206
msgid ""
"This key is used to specify which attributes of a specific object have to be"
" returned. The desired attributes have to be provided as a comma-separated "
"list of values. It requires that the path contains the endpoint "
"``/content/attributes``. Example:"
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "nalist"
msgstr ""

#: ../../source/restapi/index.rst:214
msgid ""
"(incompatible with ``alist``) This key is used to specify which attributes "
"of a specific object should not be returned. The syntax is identical to "
"``alist``. The system returns all the attributes except those specified in "
"the list of values."
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "elist"
msgstr ""

#: ../../source/restapi/index.rst:216
msgid ""
"Similar to ``alist`` but for extras. It requires that the path contains the "
"endpoint ``/content/extras``."
msgstr ""

#: ../../source/restapi/index.rst:0
msgid "nelist"
msgstr ""

#: ../../source/restapi/index.rst:218
msgid ""
"(incompatible with ``elist``) Similar to ``nalist`` but for extras. It "
"requires that the path contains the endpoint ``/content/extras``."
msgstr ""

#: ../../source/restapi/index.rst:221
msgid "Filters"
msgstr ""

#: ../../source/restapi/index.rst:223
msgid ""
"All the other fields composing a query string are filters, that is, "
"conditions that have to be fulfilled by the retrieved objects. When a query "
"string contains multiple filters, those are applied as if they were related "
"by the AND logical clause, that is, the results have to fulfill all the "
"conditions set by the filters (and not any of them). Each filter key is "
"associated to a unique value type. The possible types are:"
msgstr ""

#: ../../source/restapi/index.rst:0 ../../source/restapi/index.rst:258
#: ../../source/restapi/index.rst:260 ../../source/restapi/index.rst:262
#: ../../source/restapi/index.rst:264 ../../source/restapi/index.rst:266
#: ../../source/restapi/index.rst:268 ../../source/restapi/index.rst:270
#: ../../source/restapi/index.rst:272 ../../source/restapi/index.rst:274
#: ../../source/restapi/index.rst:276 ../../source/restapi/index.rst:278
#: ../../source/restapi/index.rst:290 ../../source/restapi/index.rst:292
#: ../../source/restapi/index.rst:294
msgid "string"
msgstr ""

#: ../../source/restapi/index.rst:225
msgid ""
"Text enclosed in double quotes. If the string contains double quotes those "
"have to be escaped as ``\"\"`` (two double quotes). Note that in the "
"unlikely occurrence of a sequence of double quotes you will have to escape "
"it by writing twice as many double quotes."
msgstr ""

#: ../../source/restapi/index.rst:0 ../../source/restapi/index.rst:254
#: ../../source/restapi/index.rst:256
msgid "integer"
msgstr ""

#: ../../source/restapi/index.rst:227
msgid "Positive integer numbers."
msgstr ""

#: ../../source/restapi/index.rst:0 ../../source/restapi/index.rst:282
#: ../../source/restapi/index.rst:284 ../../source/restapi/index.rst:286
#: ../../source/restapi/index.rst:288
msgid "datetime"
msgstr ""

#: ../../source/restapi/index.rst:229
msgid ""
"Datetime objects expressed in the format ``(DATE)T(TIME)(SHIFT)`` where "
"``(SHIFT)`` is the time difference with respect to the UTC time. This is "
"required to avoid any problem arising from comparing datetime values "
"expressed in different time zones. The formats of each field are:"
msgstr ""

#: ../../source/restapi/index.rst:231
msgid "``YYYY-MM-DD`` for ``(DATE)`` (mandatory)."
msgstr ""

#: ../../source/restapi/index.rst:232
msgid ""
"``HH:MM:SS`` for ``(TIME)`` (optional). The formats ``HH`` and ``HH:MM`` are"
" supported too."
msgstr ""

#: ../../source/restapi/index.rst:233
msgid ""
"``+/-HH:MM`` for ``(SHIFT)`` (optional, if present requires ``(TIME)`` to be"
" specified). The format ``+/-HH`` is allowed too. If no shift is specified "
"UTC time is assumed. The shift format follows the general convention that "
"eastern (western) shifts are positive (negative). The API is unaware of "
"daylight saving times so the user is required to adjust the shift to take "
"them into account."
msgstr ""

#: ../../source/restapi/index.rst:235
msgid ""
"This format is ``ISO-8601`` compliant. Note that date and time fields have "
"to be separated by the character ``T``. Examples:"
msgstr ""

#: ../../source/restapi/index.rst:0 ../../source/restapi/index.rst:280
msgid "bool"
msgstr ""

#: ../../source/restapi/index.rst:244
msgid "It can be either true or false (lower case)."
msgstr ""

#: ../../source/restapi/index.rst:246
msgid ""
"The following table reports what is the value type and the supported "
"resources associated to each key. .. note:: In the following *id* is a "
"synonym for *pk* (often used in other sections of the documentation)."
msgstr ""

#: ../../source/restapi/index.rst:249
msgid ""
"If a key is present in the resource *data*, it will be also in the derived "
"resources: *kpoints*, *structures*, *bands*"
msgstr ""

#: ../../source/restapi/index.rst:252
msgid "key"
msgstr ""

#: ../../source/restapi/index.rst:252
msgid "value type"
msgstr ""

#: ../../source/restapi/index.rst:252
msgid "resources"
msgstr ""

#: ../../source/restapi/index.rst:254
msgid "id"
msgstr ""

#: ../../source/restapi/index.rst:254
msgid "users, computers, groups, nodes, calculations, codes, data"
msgstr ""

#: ../../source/restapi/index.rst:256
msgid "user_id"
msgstr ""

#: ../../source/restapi/index.rst:256
msgid "groups"
msgstr ""

#: ../../source/restapi/index.rst:258
msgid "uuid"
msgstr ""

#: ../../source/restapi/index.rst:258
msgid "computers, groups, nodes, calculations, codes, data"
msgstr ""

#: ../../source/restapi/index.rst:260
msgid "name"
msgstr ""

#: ../../source/restapi/index.rst:260 ../../source/restapi/index.rst:272
msgid "computers, groups"
msgstr ""

#: ../../source/restapi/index.rst:262
msgid "first_name"
msgstr ""

#: ../../source/restapi/index.rst:262 ../../source/restapi/index.rst:264
#: ../../source/restapi/index.rst:266 ../../source/restapi/index.rst:268
#: ../../source/restapi/index.rst:280 ../../source/restapi/index.rst:286
#: ../../source/restapi/index.rst:288
msgid "users"
msgstr ""

#: ../../source/restapi/index.rst:264
msgid "last_name"
msgstr ""

#: ../../source/restapi/index.rst:266
msgid "institution"
msgstr ""

#: ../../source/restapi/index.rst:268
msgid "email *"
msgstr ""

#: ../../source/restapi/index.rst:270
msgid "label"
msgstr ""

#: ../../source/restapi/index.rst:270 ../../source/restapi/index.rst:282
#: ../../source/restapi/index.rst:284 ../../source/restapi/index.rst:292
msgid "nodes, calculations, codes, data"
msgstr ""

#: ../../source/restapi/index.rst:272
msgid "description"
msgstr ""

#: ../../source/restapi/index.rst:274
msgid "transport_type"
msgstr ""

#: ../../source/restapi/index.rst:274 ../../source/restapi/index.rst:276
#: ../../source/restapi/index.rst:278 ../../source/restapi/index.rst:294
msgid "computers"
msgstr ""

#: ../../source/restapi/index.rst:276
msgid "transport_params"
msgstr ""

#: ../../source/restapi/index.rst:278
msgid "scheduler_type"
msgstr ""

#: ../../source/restapi/index.rst:280
msgid "is_active *"
msgstr ""

#: ../../source/restapi/index.rst:282
msgid "ctime"
msgstr ""

#: ../../source/restapi/index.rst:284
msgid "mtime"
msgstr ""

#: ../../source/restapi/index.rst:286
msgid "last_login *"
msgstr ""

#: ../../source/restapi/index.rst:288
msgid "date_joined"
msgstr ""

#: ../../source/restapi/index.rst:290
msgid "type"
msgstr ""

#: ../../source/restapi/index.rst:290
msgid "groups, nodes, calculations, codes, data"
msgstr ""

#: ../../source/restapi/index.rst:292
msgid "state"
msgstr ""

#: ../../source/restapi/index.rst:294
msgid "hostname"
msgstr ""

#: ../../source/restapi/index.rst:297
msgid ""
"\\* Key not available via the ``/users/`` endpoint for reasons of privacy."
msgstr ""

#: ../../source/restapi/index.rst:299
msgid ""
"The operators supported by a specific key are uniquely determined by the "
"value type associated to that key. For example, a key that requires a "
"boolean value admits only the identity operator ``=``, whereas an integer "
"value enables the usage of the relational operators ``=``, ``<``, ``<=``, "
"``>``, ``>=`` plus the membership operator ``=in=``. Please refer to the "
"following table for a comprehensive list."
msgstr ""

#: ../../source/restapi/index.rst:303
msgid "operator"
msgstr ""

#: ../../source/restapi/index.rst:303
msgid "meaning"
msgstr ""

#: ../../source/restapi/index.rst:303
msgid "accepted value types"
msgstr ""

#: ../../source/restapi/index.rst:305
msgid "``=``"
msgstr ""

#: ../../source/restapi/index.rst:305
msgid "identity"
msgstr ""

#: ../../source/restapi/index.rst:305
msgid "integers, strings, bool, datetime"
msgstr ""

#: ../../source/restapi/index.rst:307
msgid "``>``"
msgstr ""

#: ../../source/restapi/index.rst:307
msgid "greater than"
msgstr ""

#: ../../source/restapi/index.rst:307 ../../source/restapi/index.rst:309
#: ../../source/restapi/index.rst:311 ../../source/restapi/index.rst:313
#: ../../source/restapi/index.rst:320
msgid "integers, strings, datetime"
msgstr ""

#: ../../source/restapi/index.rst:309
msgid "``<``"
msgstr ""

#: ../../source/restapi/index.rst:309
msgid "lower than"
msgstr ""

#: ../../source/restapi/index.rst:311
msgid "``>=``"
msgstr ""

#: ../../source/restapi/index.rst:311
msgid "greater than or equal to"
msgstr ""

#: ../../source/restapi/index.rst:313
msgid "``<=``"
msgstr ""

#: ../../source/restapi/index.rst:313
msgid "lower than or equal to"
msgstr ""

#: ../../source/restapi/index.rst:315
msgid "``=like=``"
msgstr ""

#: ../../source/restapi/index.rst:315
msgid "pattern matching"
msgstr ""

#: ../../source/restapi/index.rst:315 ../../source/restapi/index.rst:317
msgid "strings"
msgstr ""

#: ../../source/restapi/index.rst:317
msgid "``=ilike=``"
msgstr ""

#: ../../source/restapi/index.rst:317
msgid "case-insensitive pattern matching"
msgstr ""

#: ../../source/restapi/index.rst:320
msgid "``=in=``"
msgstr ""

#: ../../source/restapi/index.rst:320
msgid "identity with one"
msgstr ""

#: ../../source/restapi/index.rst:321
msgid "element of a list"
msgstr ""

#: ../../source/restapi/index.rst:324
msgid ""
"The pattern matching operators ``=like=`` and ``=ilike=`` must be followed "
"by the pattern definition, namely, a string where two characters assume "
"special meaning:"
msgstr ""

#: ../../source/restapi/index.rst:326
msgid ""
"``%`` is used to replace an arbitrary sequence of characters, including no "
"characters."
msgstr ""

#: ../../source/restapi/index.rst:327
msgid "``_`` is used to replace one or zero characters."
msgstr ""

#: ../../source/restapi/index.rst:329
msgid ""
"Differently from ``=like=``, ``=ilike=`` assumes that two characters that "
"only differ in the case are equal."
msgstr ""

#: ../../source/restapi/index.rst:331
msgid ""
"To prevent interpreting special characters as wildcards, these have to be "
"escaped by pre-pending the character ``\\``."
msgstr ""

#: ../../source/restapi/index.rst:333 ../../source/restapi/index.rst:363
msgid "Examples:"
msgstr ""

#: ../../source/restapi/index.rst:336
msgid "Filter"
msgstr ""

#: ../../source/restapi/index.rst:336
msgid "Matched string"
msgstr ""

#: ../../source/restapi/index.rst:336
msgid "Non-matched string"
msgstr ""

#: ../../source/restapi/index.rst:338
msgid "``name=like=\"a%d_\"``"
msgstr ""

#: ../../source/restapi/index.rst:338 ../../source/restapi/index.rst:342
#: ../../source/restapi/index.rst:344
msgid "\"aiida\""
msgstr ""

#: ../../source/restapi/index.rst:338
msgid "\"AiiDA\""
msgstr ""

#: ../../source/restapi/index.rst:340
msgid "``name=ilike=\"a%d_\"``"
msgstr ""

#: ../../source/restapi/index.rst:340
msgid "\"aiida\", \"AiiDA\""
msgstr ""

#: ../../source/restapi/index.rst:342
msgid "``name=like=\"a_d_\"``"
msgstr ""

#: ../../source/restapi/index.rst:344
msgid "``name=like=\"aii%d_a\"``"
msgstr ""

#: ../../source/restapi/index.rst:346
msgid "``uuid=like=\"cdfd48%\"``"
msgstr ""

#: ../../source/restapi/index.rst:346
msgid "\"cdfd48f9-7ed2-4969"
msgstr ""

#: ../../source/restapi/index.rst:347
msgid "-ba06-09c752b83d2\""
msgstr ""

#: ../../source/restapi/index.rst:349
msgid "``description=like=\"This`` ``calculation is %\\% useful\"``"
msgstr ""

#: ../../source/restapi/index.rst:349
msgid "\"This calculation is"
msgstr ""

#: ../../source/restapi/index.rst:350
msgid "100% useful\""
msgstr ""

#: ../../source/restapi/index.rst:353
msgid ""
"The membership operator ``=in=`` has to be followed by a comma-separated "
"list of values of the same type. The condition is fulfilled if the column "
"value of an object is an element of the list."
msgstr ""

#: ../../source/restapi/index.rst:355
msgid "Examples::"
msgstr ""

#: ../../source/restapi/index.rst:361
msgid ""
"The relational operators '<', '>', '<=', '>=' assume natural ordering for "
"integers, (case-insensitive) alphabetical ordering for strings, and "
"chronological ordering for datetime values."
msgstr ""

#: ../../source/restapi/index.rst:365
msgid ""
"``http://localhost:5000/api/v2/nodes?id>578`` selects the nodes having an id"
" larger than 578."
msgstr ""

#: ../../source/restapi/index.rst:366
msgid ""
"``http://localhost:5000/api/v2/users/?last_login>2014-04-07`` selects only "
"the user that logged in for the last time after April 7th, 2014."
msgstr ""

#: ../../source/restapi/index.rst:367
msgid ""
"``http://localhost:5000/api/v2/users/?last_name<=\"m\"`` selects only the "
"users whose last name begins with a character in the range [a-m]."
msgstr ""

#: ../../source/restapi/index.rst:370
msgid ""
"Object types have to be specified by a string that defines their position in"
" the AiiDA source tree ending with a dot. Examples:"
msgstr ""

#: ../../source/restapi/index.rst:372
msgid "``type=\"data.Data.\"`` selects only objects of *Data* type"
msgstr ""

#: ../../source/restapi/index.rst:373
msgid ""
"``type=\"data.remote.RemoteData.\"`` selects only objects of *RemoteData* "
"type"
msgstr ""

#: ../../source/restapi/index.rst:375
msgid ""
"If you use in your request the endpoint *io/input* (*io/outputs*) together "
"with one or more filters, the latter are applied to the input (output) nodes"
" of the selected *pk*. For example, the request:"
msgstr ""

#: ../../source/restapi/index.rst:382
msgid ""
"would first search for the outputs of the node with *uuid* starting with "
"\"a67fba41-8a\" and then select only those objects of type *FolderData*."
msgstr ""

#: ../../source/restapi/index.rst:387
msgid "The HTTP response"
msgstr ""

#: ../../source/restapi/index.rst:389
msgid ""
"The HTTP response of the REST API consists in a JSON object, a header, and a"
" status code. Possible status are:"
msgstr ""

#: ../../source/restapi/index.rst:391
msgid "200 for successful requests."
msgstr ""

#: ../../source/restapi/index.rst:392
msgid ""
"400 for bad requests. In this case, the JSON object contains only an error "
"message describing the problem."
msgstr ""

#: ../../source/restapi/index.rst:393
msgid ""
"500 for a generic internal server error. The JSON object contains only a "
"generic error message."
msgstr ""

#: ../../source/restapi/index.rst:394
msgid ""
"404 for invalid url. Differently from the 400 status, it is returned when "
"the REST API does not succeed in directing the request to a specific "
"resource. This typically happens when the path does not match any of the "
"supported format. No JSON is returned."
msgstr ""

#: ../../source/restapi/index.rst:396
msgid ""
"The header is a standard HTTP response header with the additional custom "
"field ``X-Total-Counts`` and, only if paginated results are required, a non-"
"empty ``Link`` field, as described in the Pagination section."
msgstr ""

#: ../../source/restapi/index.rst:398
msgid ""
"The JSON object mainly contains the list of the results returned by the API."
" This list is assigned to the key ``data``. Additionally, the JSON object "
"contains several informations about the request (keys ``method``, ``url``, "
"``url_root``, ``path``, ``query_string``, ``resource_type``, and ``pk``)."
msgstr ""

#: ../../source/restapi/index.rst:404
msgid "How to run the REST API through Apache"
msgstr ""

#: ../../source/restapi/index.rst:405
msgid ""
"By default ``verdi restapi`` hooks up the REST API through the HTTP server "
"(Werkzeug) that is  usually bundled with Python distributions. However, to "
"deploy real web applications the server of choice is in most cases `Apache "
"<https://httpd.apache.org/>`_. in fact, you can instruct Apache to run "
"Python applications by employing the `WSGI <modwsgi.readthedocs.io/>`_ "
"module and the AiiDA REST API is inherently structured so that you can "
"easily realize the pipeline ``AiiDA->WSGI->Apache``. Moreover, one single "
"Apache service can support multiple apps so that you can, for instance, hook"
" up multiple APIs using as many different sets of configurations. For "
"example, one might have several apps connecting to different AiiDA profiles."
" We'll go through an example to explain how to achieve this result."
msgstr ""

#: ../../source/restapi/index.rst:408
msgid ""
"We assume you have a working installation of Apache that includes "
"``mod_wsgi``."
msgstr ""

#: ../../source/restapi/index.rst:410
msgid ""
"The goal of the example is to hookup the APIs ``django`` and ``sqlalchemy`` "
"pointing to two AiiDA profiles, called for simplicity ``django`` and "
"``sqlalchemy``."
msgstr ""

#: ../../source/restapi/index.rst:412
msgid ""
"All the relevant files are enclosed under the path "
"``<aiida.source.code.path>/docs/wsgi/``. In each of the folders ``app1/`` "
"and ``app2/``, there is a file named ``rest.wsgi`` containing a Pytyhon "
"script that instantiates and configures a python web app called "
"``application``, according to the rules of ``mod_wsgi``. For how the script "
"is written, the object ``application`` is configured through the file "
"``config.py`` contained in the same folder. Indeed, in ``app1/config.py`` "
"the variable ``aiida-profile`` is set to ``\"django\"``, whereas in "
"``app2/config.py`` its value is ``\"sqlalchemy\"``."
msgstr ""

#: ../../source/restapi/index.rst:414
msgid ""
"Anyway, the path where you put the ``.wsgi`` file as well as its name are "
"irrelevant as long as they are correctly referred to in the Apache "
"configuration file, as shown later on. Similarly, you can place "
"``config.py`` in a custom path, provided you change the variable "
"``config_file_path`` in the ``wsgi file`` accordingly."
msgstr ""

#: ../../source/restapi/index.rst:416
msgid ""
"In ``rest.wsgi`` probably the only options you might want to change is "
"``catch_internal_server``. When set to ``True``, it lets the exceptions "
"thrown during the execution of the app propagate all the way through until "
"they reach the logger of Apache. Especially when the app is not entirely "
"stable yet, one would like to read the full python error traceback in the "
"Apache error log."
msgstr ""

#: ../../source/restapi/index.rst:418
msgid ""
"Finally, you need to setup the Apache site through a proper configuration "
"file. We provide two template files: ``one.conf`` or ``many.conf``. The "
"first file tells Apache to bundle both apps in a unique Apache daemon "
"process. Apache usually creates multiple process dynamically and with this "
"configuration each process will handle both apps."
msgstr ""

#: ../../source/restapi/index.rst:420
msgid ""
"The script ``many.conf``, instead, defines two different process groups, one"
" for each app. So the processes created dynamically by Apache will always be"
" handling one app each. The minimal number of Apache daemon processes equals"
" the number of apps, contrarily to the first architecture, where one process"
" is enough to handle two or even a larger number of apps."
msgstr ""

#: ../../source/restapi/index.rst:422
msgid ""
"Let us call the two apps for this example ``django`` and ``sqlalchemy``. In "
"both ``one.conf`` and ``many.conf``, the important directives that should be"
" updated if one changes the paths or names of the apps are:"
msgstr ""

#: ../../source/restapi/index.rst:424
msgid ""
"``WSGIProcessGroup`` to define the process groups for later reference. In "
"``one.conf`` this directive appears only once to define the generic group "
"``profiles``, as there is only one kind of process handling both apps. In "
"``many.conf`` this directive appears once per app and is embedded into a "
"\"Location\" tag, e.g.::"
msgstr ""

#: ../../source/restapi/index.rst:430
msgid ""
"``WSGIDaemonProcess`` to define the path to the AiiDA virtual environment. "
"This appears once per app in both configurations."
msgstr ""

#: ../../source/restapi/index.rst:432
msgid ""
"``WSGIScriptAlias`` to define the absolute path of the ``.wsgi`` file of "
"each app."
msgstr ""

#: ../../source/restapi/index.rst:434
msgid ""
"The ``<Directory>`` tag mainly used to grant Apache access to the files used"
" by each app, e.g.::"
msgstr ""

#: ../../source/restapi/index.rst:440
msgid ""
"The latest step is to move either ``one.conf`` or ``many.conf`` into the "
"Apache configuration folder and restart the Apache server. In Ubuntu, this "
"is usually done with the commands:"
msgstr ""

#: ../../source/restapi/index.rst:447
msgid ""
"We believe the two basic architectures we have just explained can be "
"successfully applied in many different deployment scenarios. Nevertheless, "
"we suggest users who need finer tuning of the deployment setup to look into "
"to the official documentation of `Apache <https://httpd.apache.org/>`_ and, "
"more importantly,  `WSGI <modwsgi.readthedocs.io/>`_."
msgstr ""

#: ../../source/restapi/index.rst:449
msgid ""
"The URLs of the requests handled by Apache must start with one of the paths "
"specified in the directives ``WSGIScriptAlias``. These paths identify "
"uniquely each app and allow Apache to route the requests to their correct "
"apps. Examples of well-formed URLs are:"
msgstr ""

#: ../../source/restapi/index.rst:456
msgid ""
"The first (second)request will be handled by the app ``django`` "
"(``sqlalchemy``), namely will serve results fetched from the profile "
"``django`` (``sqlalchemy``). Notice that we haven't specified any port in "
"the URLs since Apache listens conventionally to port 80, where any request "
"lacking the port is automatically redirected."
msgstr ""

#: ../../source/restapi/index.rst:459
msgid "Examples"
msgstr ""

#: ../../source/restapi/index.rst:463
msgid "Computers"
msgstr ""

#: ../../source/restapi/index.rst:465
msgid "Get a list of the *Computers* objects."
msgstr ""

#: ../../source/restapi/index.rst:467 ../../source/restapi/index.rst:527
#: ../../source/restapi/index.rst:567 ../../source/restapi/index.rst:613
#: ../../source/restapi/index.rst:648 ../../source/restapi/index.rst:693
#: ../../source/restapi/index.rst:727 ../../source/restapi/index.rst:764
#: ../../source/restapi/index.rst:795 ../../source/restapi/index.rst:826
#: ../../source/restapi/index.rst:854 ../../source/restapi/index.rst:883
#: ../../source/restapi/index.rst:911 ../../source/restapi/index.rst:946
#: ../../source/restapi/index.rst:986 ../../source/restapi/index.rst:1023
#: ../../source/restapi/index.rst:1069
msgid "REST url::"
msgstr ""

#: ../../source/restapi/index.rst:471 ../../source/restapi/index.rst:531
#: ../../source/restapi/index.rst:571 ../../source/restapi/index.rst:617
#: ../../source/restapi/index.rst:652 ../../source/restapi/index.rst:697
#: ../../source/restapi/index.rst:731 ../../source/restapi/index.rst:768
#: ../../source/restapi/index.rst:799 ../../source/restapi/index.rst:830
#: ../../source/restapi/index.rst:858 ../../source/restapi/index.rst:887
#: ../../source/restapi/index.rst:915 ../../source/restapi/index.rst:950
#: ../../source/restapi/index.rst:990 ../../source/restapi/index.rst:1027
#: ../../source/restapi/index.rst:1073
msgid "Description:"
msgstr ""

#: ../../source/restapi/index.rst:473
msgid ""
"returns the list of three *Computer* objects (``limit=3``) starting from the"
" 3rd row (``offset=2``) of the database table and the list will be ordered "
"by ascending values of ``id``."
msgstr ""

#: ../../source/restapi/index.rst:477 ../../source/restapi/index.rst:535
#: ../../source/restapi/index.rst:577 ../../source/restapi/index.rst:621
#: ../../source/restapi/index.rst:656 ../../source/restapi/index.rst:702
#: ../../source/restapi/index.rst:735 ../../source/restapi/index.rst:772
#: ../../source/restapi/index.rst:803 ../../source/restapi/index.rst:834
#: ../../source/restapi/index.rst:862 ../../source/restapi/index.rst:891
#: ../../source/restapi/index.rst:919 ../../source/restapi/index.rst:954
#: ../../source/restapi/index.rst:994 ../../source/restapi/index.rst:1033
#: ../../source/restapi/index.rst:1077
msgid "Response::"
msgstr ""

#: ../../source/restapi/index.rst:525
msgid "Get details of a single *Computer* object:"
msgstr ""

#: ../../source/restapi/index.rst:533
msgid ""
"returns the details of the *Computer* object ``uuid=\"5d490d77-638d...\"``."
msgstr ""

#: ../../source/restapi/index.rst:563
msgid "Nodes"
msgstr ""

#: ../../source/restapi/index.rst:565
msgid "Get a list of *Node* objects"
msgstr ""

#: ../../source/restapi/index.rst:573
msgid ""
"returns the list of two *Node* objects (``limit=2``) starting from 9th row "
"(``offset=8``) of the database table and the list will be ordered by ``id`` "
"in descending order."
msgstr ""

#: ../../source/restapi/index.rst:611
msgid "Get the details of a single *Node* object:"
msgstr ""

#: ../../source/restapi/index.rst:619
msgid "returns the details of the *Node* object with ``uuid=\"e30da7cc...\"``."
msgstr ""

#: ../../source/restapi/index.rst:646
msgid "Get the list of inputs of a specific node."
msgstr ""

#: ../../source/restapi/index.rst:654
msgid ""
"returns the list of the first two input nodes (``limit=2``) of the *Node* "
"object with ``uuid=\"de83b1...\"``."
msgstr ""

#: ../../source/restapi/index.rst:691
msgid "Filter the inputs/outputs of a node by their type."
msgstr ""

#: ../../source/restapi/index.rst:699
msgid ""
"returns the list of the `*KpointsData* input nodes of the *Node* object with"
" ``uuid=\"de83b1...\"``."
msgstr ""

#: ../../source/restapi/index.rst:733
msgid ""
"returns the list of the *RemoteData* output nodes of the *Node* object with "
"``uuid=\"de83b1...\"``."
msgstr ""

#: ../../source/restapi/index.rst:762
msgid "Getting the list of the attributes/extras of a specific node"
msgstr ""

#: ../../source/restapi/index.rst:770
msgid ""
"returns the list of all attributes of the *Node* object with "
"``uuid=\"ffe11...\"``."
msgstr ""

#: ../../source/restapi/index.rst:801
msgid ""
"returns the list of all the extras of the *Node* object with "
"``uuid=\"ffe11...\"``."
msgstr ""

#: ../../source/restapi/index.rst:824
msgid "Getting a user-defined list of attributes/extras of a specific node"
msgstr ""

#: ../../source/restapi/index.rst:832
msgid ""
"returns a list of the attributes ``append_text`` and ``is_local`` of the "
"*Node* object with ``uuid=\"ffe11...\"``."
msgstr ""

#: ../../source/restapi/index.rst:860
msgid ""
"returns a list of the extras ``trialBool`` and ``trialInt`` of the *Node* "
"object with ``uuid=\"ffe11...\"``."
msgstr ""

#: ../../source/restapi/index.rst:880
msgid ""
"Getting all the attributes/extras of a specific node except a user-defined "
"list"
msgstr ""

#: ../../source/restapi/index.rst:889
msgid ""
"returns all the attributes of the *Node* object with ``uuid=\"ffe11...\"`` "
"except ``append_text`` and ``is_local``."
msgstr ""

#: ../../source/restapi/index.rst:917
msgid ""
"returns all the extras of the *Node* object with ``uuid=\"ffe11...\"`` "
"except ``trialBool`` and ``trialInt``."
msgstr ""

#: ../../source/restapi/index.rst:938
msgid ""
"The same REST urls supported for the resource ``nodes`` are also available "
"with the derived resources, namely,  ``calculations``, ``data``, and "
"``codes``, just changing the resource field in the path."
msgstr ""

#: ../../source/restapi/index.rst:942
msgid "Users"
msgstr ""

#: ../../source/restapi/index.rst:944
msgid "Getting a list of the users"
msgstr ""

#: ../../source/restapi/index.rst:952
msgid "returns a list of all the *User* objects."
msgstr ""

#: ../../source/restapi/index.rst:984
msgid "Getting a list of users whose first name starts with a given string"
msgstr ""

#: ../../source/restapi/index.rst:992
msgid ""
"returns a lists of the *User* objects whose first name starts with "
"``\"aii\"``, regardless the case of the characters."
msgstr ""

#: ../../source/restapi/index.rst:1018
msgid "Groups"
msgstr ""

#: ../../source/restapi/index.rst:1021
msgid "Getting a list of groups"
msgstr ""

#: ../../source/restapi/index.rst:1029
msgid ""
"returns the list of ten *Group* objects (``limit=10``) starting from the 1st"
" row of the database table (``offset=0``) and the list will be ordered by "
"``user_id`` in descending order."
msgstr ""

#: ../../source/restapi/index.rst:1067
msgid "Getting the details of a specific group"
msgstr ""

#: ../../source/restapi/index.rst:1075
msgid "returns the details of the *Group* object with ``uuid=\"a6e5b...\"``."
msgstr ""
