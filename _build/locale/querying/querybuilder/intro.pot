# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/querying/querybuilder/intro.rst:4
msgid "About the QueryBuilder"
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:9
msgid "The QueryBuilder lets you query your AiiDA database independently of the backend used under the hood. Before starting to write a query, it helps to:"
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:12
msgid "know what you want to query for. In database-speek, you need to tell the backend what to *project*. For example, you might be interested in the label of a calculation and the pks of all its outputs."
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:15
msgid "know the relationships between entities you are interested in. Nodes of an AiiDA graph (vertices) are connected with links (edges). A *Node* can be either input or output of another *Node*, but also an ancestor or a descendant."
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:19
msgid "know what how you want to filter the result."
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:21
msgid "Once you are clear about what you want and how you can get it, the QueryBuilder will build an SQL-query for you."
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:24
msgid "There are two ways of using the QueryBuilder:"
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:26
msgid "In the :ref:`appender method <QueryBuilderAppend>`, you construct your query step by step using `QueryBuilder.append()`"
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:27
msgid "In the :ref:`queryhelp approach <QueryBuilderQueryhelp>`, you construct a dictionary first and pass it to the QueryBuilder"
msgstr ""

#: ../../source/querying/querybuilder/intro.rst:29
msgid "Both APIs provide the same functionality - the appender method may be more suitable for everyday use in the ``verdi shell``, while the queryhelp method can be useful in scripting."
msgstr ""

