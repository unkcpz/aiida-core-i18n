# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/developer_guide/core/plugin_system.rst:2
msgid "Developing The Plugin System"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:4
msgid "this page is intended for people wanting to contribute to the plugin system in ``aiida_core`` and is not needed for people who just want to contribute a plugin."
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:8
msgid "Design Principles"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:10
msgid "Only restrict plugin developers when really necessary;"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:12
msgid "Avoid schema changes whenever reasonably possible;"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:14
msgid "Finding and loading plugins must be as fast as the plugin allows, especially for command-line (\"cli\") commands. In other words, directly importing a plugin class should not be noticeably faster than using the plugin loader/factory;"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:16
msgid "Implement as a drop-in replacement, provide backwards compatibility at first, think about changing interfaces if/when the old system is dropped;"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:18
msgid "plugin management should be as user friendly from ipython as from the cli."
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:21
msgid "Mini-Spec"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:24
msgid "Terms"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:30
msgid "``plugin_name``"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:26
msgid "A unique name identifying the plugin. Suggested naming scheme is"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:28
msgid "pypi distribution / repo name: aiida-<plugin_name>"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:29
msgid "import name: aiida_<plugin_name>"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:30
msgid "entry point names: <plugin_name>.name"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:37
msgid "``name`` (entry point)"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:33
msgid "The entry point for a plugin class looks as follows::"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:37
msgid "Therefore within a plugin category the name allows us to find a specific plugin (as well as a typestring) The name is recommended to contain the plugin name (as detailed under ``plugin_name``."
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:53
msgid "``category``"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:40
msgid "A name given to each area extensible via plugins, one of"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:42
msgid "calculations"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:43
msgid "data"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:44
msgid "parsers"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:45
msgid "schedulers"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:46
msgid "transports"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:47
msgid "workflows"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:48
msgid "tools.dbexporters"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:49
msgid "tools.dbimporters"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:51
msgid "Each category maps to an entry point group called::"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:56
msgid "Interfaces"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:59
msgid "Pluginloader (aiida/plugins/entry_point.py)"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:61
msgid "The plugin loader relies on the `reentry PyPI package <https://github.com/dropd/reentry>`_ to find and load entry points. ``reentry`` has been added to setup_requires for AiiDA in order to enable scanning for existing plugins when AiiDA is installed. If for some reason ``reentry`` is uninstalled or is not found, the plugin system will fall back on ``pkg_resources`` from setuptools, which is slower."
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:63
msgid "The API docs are found at the following link: :py:mod:`aiida.plugins.entry_point`."
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:66
msgid "Registry Tools (aiida/plugins)"
msgstr ""

#: ../../source/developer_guide/core/plugin_system.rst:68
msgid "See the API documentation in :py:mod:`aiida.plugins`."
msgstr ""

