# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/developer_guide/core/modifying_the_schema.rst:2
msgid "Modifying the schema"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:5
msgid "Django"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:6
msgid "The Django database schema can be found in :py:mod:`aiida.backends.djsite.db.models`."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:8
#: ../../source/developer_guide/core/modifying_the_schema.rst:126
msgid "If you need to change the database schema follow these steps:"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:10
msgid "Make all the necessary changes to :py:mod:`aiida.backends.djsite.db.models`"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:11
msgid "Create a new migration file.  From ``aiida/backends/djsite``, run::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:15
msgid "This will create the migration file in ``aiida/backends/djsite/db/migrations`` whose name begins with a number followed by some description.  If the description is not appropriate then change it to something better but retain the number."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:19
msgid "Open the generated file and make the following changes::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:33
msgid "The migration file now contains some migrations steps that were generated automatically. Please make sure that they are correct. Also, if you want to add some changes that affect the content of the database -- you should do it ''manually'' by adding some sql commands that will run directly on your database::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:60
msgid "As you can see here, you should not only provide the sql commands to upgrade your database, but also the commands to revert these changes in case you want to perform a downgrade (see: ``sql=forward_sql``, ``reverse_sql=reverse_sql``)"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:64
msgid "Change the ``LATEST_MIGRATION`` variable in ``aiida/backends/djsite/db/migrations/__init__.py`` to the name of your migration file::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:70
msgid "This allows AiiDA to get the version number from your migration and make sure the database and the code are in sync."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:73
msgid "Migrate your database to the new version, (again from ``aiida/backends/djsite``), run::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:78
msgid "In case you want to (and, most probably, you should) test the downgrade operation, please check the list of available versions of the database::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:83
msgid "The output will look as follows::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:105
msgid "Chose the previous migration step and migrate to it::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:109
msgid "Check that both: upgrade and downgrade changes are succesfull and if yes, go to the next step."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:112
msgid "Prepare tests for your migrations. An example of a test can be found here: ``aiida_core/aiida/backends/djsite/db/subtests/migrations.py``"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:115
msgid "Such a test can only be applied to the migration of the database content. For example, you can **not** test modifications of the database column names."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:123
msgid "SQLAlchemy"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:124
msgid "The SQLAlchemy database schema can be found in ``aiida/backends/sqlalchemy/models``"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:128
msgid "Make all the necessary changes to the model than you would like to modify located in the ``aiida/backends/sqlalchemy/models`` directory."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:131
msgid "Create new migration file by going to ``aiida/backends/sqlalchemy`` and executing::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:136
msgid "This will create a new migration file in ``aiida/backends/sqlalchemy/migrations/versions`` whose names begins with an automatically generated hash code and the provided message for this new migration. Modify the migration message for your convinience."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:141
msgid "Have a look at the generated migration file and ensure that migration is correct. The file should contain automatically generated hashes that point to the previous and to the current revision::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:148
msgid "Also ``upgrade()`` and ``downgrade()`` function defenitions should be present in the file::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:156
msgid "If you want to add some changes that affect the content of the database -- you should do it ''manually'' by adding some sql commands that will run directly on your database. Learn the following example and adapt it for your needs::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:182
msgid "If you want to learn more about the migration operations, you can have a look at the Alembic documentation."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:185
msgid "Your database will be automatically migrated to the latest revision as soon as you run your first verdi command. You can also migrate it manually with the help of the alembic_manage.py script as you can see below."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:189
msgid "Prepare tests for your migrations. An example of a test can be found here: ``aiida_core/aiida/backends/sqlalchemy/tests/migrations.py``"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:194
msgid "Overview of alembic_manage.py commands"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:195
msgid "The alembic_manage.py provides several options to control your SQLAlchemy migrations. By executing::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:200
msgid "you will get a full list of the available arguments that you can pass and commands. Briefly, the available commands are:"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:203
msgid "**upgrade** This command allows you to upgrade to the later version. For the moment, you can only upgrade to the latest version."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:205
msgid "**downgrade** This command allows you to downgrade the version of your database. For the moment, you can only downgrade to the base version."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:207
msgid "**history** This command lists the available migrations in chronological order."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:209
msgid "**current** This command displays the current version of the database."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:210
msgid "**revision** This command creates a new migration file based on the model changes."
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:216
msgid "Debugging Alembic"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:217
msgid "Alembic migrations should work automatically and migrate your database to the latest version. However, if you were using SQLAlchemy before we introduced Alembic, you may get a message like to following during the first migration::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:230
msgid "In this case, you should create manually the Alembic table in your database and add a line with the database version number. To do so, use psql to connect to the desired database::"
msgstr ""

#: ../../source/developer_guide/core/modifying_the_schema.rst:236
msgid "(you should replace ``aiidadb_sqla`` with the name of the database that you would like to modify). Then, execute the following commands::"
msgstr ""

