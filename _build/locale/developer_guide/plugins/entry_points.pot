# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/developer_guide/plugins/entry_points.rst:4
msgid "Entry Points"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:8
msgid "What is an Entry Point?"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:10
msgid "The ``setuptools`` package to which ``pip`` is a frontend has a feature called `entry points`_. When a distribution which registers entry points is installed, the entry point specifications are written to a file inside the distribution's ``.egg-info`` folder. ``setuptools`` provides a package ``pkg_resources`` which can find these entry points by distribution, group and/or name and load the data structure to which it points."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:18
msgid "This is the way AiiDA finds and loads classes provided by plugins."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:23
msgid "AiiDA Entry Points"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:27
msgid "This document contains a list of entry point groups AiiDA uses, with an example usage for each. In the following, we assume the following folder structure::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:55
msgid "For a plugin that uses this folder structure, see the  `aiida plugin template`_."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:57
msgid "Note, however, that the folder structure inside ``aiida-mycode/`` is entirely up to you. A very simple plugin might look like::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:68
msgid "The plugin has to tell AiiDA where to look for the classes to be used as calculations, parsers, transports, etc. This is done inside ``setup.json`` by way of the ``entry_points`` keyword::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:80
msgid "It is given as a dictionary containing entry point group names as keywords. The list for each entry point group contains entry point specifications."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:82
msgid "A specification in turn is given as a string and consists of two parts, a name and an import path describing where the class is to be imported from. The two parts are sparated by an `=` sign::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:86
msgid "We *strongly* suggest to start the name of each entry point with the name of the plugin, ommitting the leading 'aiida-'. In our example this leads to entry specifications like ``\"mycode.<any.you.want> = <module.path:class>\"``, just like the above example. Exceptions to this rule are schedulers, transports and potentially data ones. Further exceptions can be tolerated in order to provide backwards compatibility if the plugin was in use before aiida-0.9 and its modules were installed in locations which does not make it possible to follow this rule."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:91
msgid "Below, a list of valid entry points recognized by AiiDA follows."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:94
msgid "``aiida.calculations``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:96
msgid "Entry points in this group are expected to be subclasses of :py:class:`aiida.orm.JobCalculation <aiida.orm.nodes.process.calculation.calcjob.CalcJobNode>`. This replaces the previous method of placing a python module with the class in question inside the ``aiida/orm/calculation/job`` subpackage."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:98
msgid "Example entry point specification::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:106
msgid "``aiida_mycode/calcs/mycode.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:112
msgid "Will lead to usage::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:118
msgid "``aiida.parsers``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:120
msgid "Aiida expects a subclass of ``Parser``. Replaces the previous approach consisting in placing a parser module under ``aiida/parsers/plugins``."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:122
msgid "Example spec::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:130
msgid "``aida_mycode/parsers/myparser.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:136
#: ../../source/developer_guide/plugins/entry_points.rst:160
#: ../../source/developer_guide/plugins/entry_points.rst:184
#: ../../source/developer_guide/plugins/entry_points.rst:300
msgid "Usage::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:142
msgid "``aiida.data``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:144
msgid "Group for :py:class:`~aiida.orm.nodes.data.data.Data` subclasses. Previously located in a subpackage of ``aiida/orm/data``."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:146
#: ../../source/developer_guide/plugins/entry_points.rst:170
#: ../../source/developer_guide/plugins/entry_points.rst:203
#: ../../source/developer_guide/plugins/entry_points.rst:265
#: ../../source/developer_guide/plugins/entry_points.rst:286
msgid "Spec::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:154
msgid "``aiida_mycode/data/mydat.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:166
msgid "``aiida.workflows``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:168
msgid "For AiiDA workflows. Instead of putting a workflow somewhere under the ``aiida.workflows`` package, it can now be packaged as a plugin and exposed to aiida as follows:"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:178
msgid "``aiida_mycode/workflows/mywf.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:189
msgid "For old-style workflows the entry point mechanism of the plugin system is not supported. Therefore one cannot load these workflows with the ``WorkflowFactory``. The only way to run these, is to store their source code in the ``aiida/workflows/user`` directory and use normal python imports to load the classes."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:195
msgid "``aiida.cmdline``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:197
msgid "For subcommands to verdi commands like ``verdi data mydata``. This was previously not possible to achieve without editing aiida source code directly. AiiDA expects each entry point to be either a ``click.Command`` or ``click.CommandGroup``."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:199
msgid "Plugin support for commands is possible due to using `click`_."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:201
msgid "In aiida-0.9, the subcommand in question is not yet exposed to ``verdi``. There is a `aiida-verdi`_ package that is being developed to implement such functionality (experimental yet). The command will then be called ``verdi-exp data mydata`` instead."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:211
msgid "``aiida_mycode/commands/mydata.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:225
msgid "Usage:"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:232
msgid "``aiida.tools.dbexporters``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:234
msgid "If your plugin adds support for exporting to an external database, use this entry point to have aiida find the module where you define the necessary functions."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:246
msgid "``aiida.tools.dbimporters``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:248
msgid "If your plugin adds support for importing from an external database, use this entry point to have aiida find the module where you define the necessary functions."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:261
msgid "``aiida.schedulers``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:263
msgid "For scheduler plugins. Note that the entry point name is not prefixed by the plugin name. This is because typically a scheduler should be distributed in a plugin on its own, and only one plugin per scheduler should be necessary."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:273
msgid "``aiida_myscheduler/myscheduler.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:279
msgid "Usage: The scheduler is used in the familiar way by entering 'myscheduler' as the scheduler option when setting up a computer."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:282
msgid "``aiida.transports``"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:284
msgid "Like schedulers, transports are supposed to be distributed in a separate plugin. Therefore we will again omit the plugin's name in the entry point name."
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:294
msgid "``aiida_mytransport/mytransport.py``::"
msgstr ""

#: ../../source/developer_guide/plugins/entry_points.rst:305
msgid "Jus like one would expect, when a computer is setup, ``mytransport`` can be given as the transport option."
msgstr ""

