# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/datatypes/index.rst:5
msgid "AiiDA data types"
msgstr ""

#: ../../source/datatypes/index.rst:7
msgid "There are a number of data types distributed with AiiDA."
msgstr ""

#: ../../source/datatypes/index.rst:9
msgid "We summarize here the most common, and some useful features/functionalities to work with them."
msgstr ""

#: ../../source/datatypes/index.rst:13
msgid "Most common datatypes"
msgstr ""

#: ../../source/datatypes/index.rst:15
msgid "Here follows a short summary of common datatypes already provided with AiiDA. This list is not complete, see also inside `aiida.orm.nodes.data` for the list of all available plugins."
msgstr ""

#: ../../source/datatypes/index.rst:18
msgid "We also mention, when relevant, what is stored in the database (as attributes, so that it can be easily queried e.g. with the :ref:`QueryBuilder <UsingQueryBuilder>`) and what is stored in the file repository (providing access to the file contents, but not efficiently querable: this is useful for e.g. big data files that don't need to be queried for)."
msgstr ""

#: ../../source/datatypes/index.rst:23
msgid "For all data types, you can follow the link to the data class to read more about the methods provided, how to access them ..."
msgstr ""

#: ../../source/datatypes/index.rst:26
msgid "If you need to work with some specific type of data, first check the list of data types/plugins below, and if you don't find what you need, give a look to :ref:`how to write a new data plugin <DevelopDataPluginTutorialFloat>`."
msgstr ""

#: ../../source/datatypes/index.rst:31
msgid "Base types"
msgstr ""

#: ../../source/datatypes/index.rst:32
msgid "In the :py:mod:`aiida.orm.nodes.data.base` module you find a number of useful classes that wrap base python datatypes (like :py:class:`~aiida.orm.nodes.data.int.Int`, :py:class:`~aiida.orm.nodes.data.float.Float`, :py:class:`~aiida.orm.nodes.data.str.Str`, ...). These are particularly useful when you need to provide a single parameter to e.g. a :py:class:`~aiida.engine.processes.functions.workfunction`."
msgstr ""

#: ../../source/datatypes/index.rst:38
msgid "Each of these classes can most often be used transparently (e.g. you can sum two :py:class:`~aiida.orm.nodes.data.int.Int` objects, etc.). If you need to access the bare value and not the whole AiiDA class, use the `.value` property."
msgstr ""

#: ../../source/datatypes/index.rst:42
msgid "In the same module, there is also a :py:class:`~aiida.orm.nodes.data.list.List` class to store a list of base data types."
msgstr ""

#: ../../source/datatypes/index.rst:46
msgid "Dict"
msgstr ""

#: ../../source/datatypes/index.rst:48
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.dict.Dict`"
msgstr ""

#: ../../source/datatypes/index.rst:49
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``parameter``"
msgstr ""

#: ../../source/datatypes/index.rst:50
msgid "**Aim**: store a dictionary of python base types in the database. It can store any dictionary where elements can be a base python type (strings, floats, integers, booleans, None type, datetime objects) and lists or dictionaries of them, at any depth level (e.g. a dictionary where a value is a list of dictionaries of strings and floats)."
msgstr ""

#: ../../source/datatypes/index.rst:55
msgid "**What is stored in the database**: all key/values pairs as attributes"
msgstr ""

#: ../../source/datatypes/index.rst:56
#: ../../source/datatypes/index.rst:65
#: ../../source/datatypes/index.rst:171
msgid "**What is stored in the file repository**: ---"
msgstr ""

#: ../../source/datatypes/index.rst:59
msgid "StructureData"
msgstr ""

#: ../../source/datatypes/index.rst:61
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.structure.StructureData`"
msgstr ""

#: ../../source/datatypes/index.rst:62
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``structure``"
msgstr ""

#: ../../source/datatypes/index.rst:63
msgid "**Aim**: store a crystal structure to be used by atomistic codes"
msgstr ""

#: ../../source/datatypes/index.rst:64
msgid "**What is stored in the database**: all atomic positions, species, kinds,"
msgstr ""

#: ../../source/datatypes/index.rst:66
#: ../../source/datatypes/index.rst:102
#: ../../source/datatypes/index.rst:117
#: ../../source/datatypes/index.rst:129
msgid "**Additional functionality**:"
msgstr ""

#: ../../source/datatypes/index.rst:68
#: ../../source/datatypes/index.rst:104
msgid ":ref:`Export to a number of formats (xsf, cif, ...)<ExportDataNodes>`"
msgstr ""

#: ../../source/datatypes/index.rst:71
msgid "UpfData"
msgstr ""

#: ../../source/datatypes/index.rst:73
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.upf.UpfData`"
msgstr ""

#: ../../source/datatypes/index.rst:74
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``upf``"
msgstr ""

#: ../../source/datatypes/index.rst:75
msgid "**Aim**: store a pseudopotential in the .UPF format (e.g. used by `Quantum ESPRESSO`_ - see also the `AiiDA Quantum ESPRESSO plugin`_)"
msgstr ""

#: ../../source/datatypes/index.rst:76
msgid "**What is stored in the database**: the MD5 of the UPF; the element the pseudopotential is associated to"
msgstr ""

#: ../../source/datatypes/index.rst:78
msgid "**What is stored in the file repository**: the pseudopotential file"
msgstr ""

#: ../../source/datatypes/index.rst:84
msgid "ArrayData"
msgstr ""

#: ../../source/datatypes/index.rst:86
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.array.ArrayData`"
msgstr ""

#: ../../source/datatypes/index.rst:87
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``array``"
msgstr ""

#: ../../source/datatypes/index.rst:88
msgid "**Aim**: store generic numeric arrays"
msgstr ""

#: ../../source/datatypes/index.rst:89
msgid "**What is stored in the database**: the shape of the arrays and the name of the arrays"
msgstr ""

#: ../../source/datatypes/index.rst:90
#: ../../source/datatypes/index.rst:116
#: ../../source/datatypes/index.rst:128
#: ../../source/datatypes/index.rst:140
msgid "**What is stored in the file repository**: the array data in numpy format"
msgstr ""

#: ../../source/datatypes/index.rst:93
msgid "TrajectoryData"
msgstr ""

#: ../../source/datatypes/index.rst:94
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.array.trajectory.TrajectoryData`"
msgstr ""

#: ../../source/datatypes/index.rst:95
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``array.trajectory``"
msgstr ""

#: ../../source/datatypes/index.rst:96
msgid "**Aim**: store molecular trajectories (i.e. sequences of StructureData objects, where then number of atomic kinds and sites does not change over time). beside the coordinates, it can also optionally store velocities."
msgstr ""

#: ../../source/datatypes/index.rst:99
#: ../../source/datatypes/index.rst:115
#: ../../source/datatypes/index.rst:127
#: ../../source/datatypes/index.rst:139
msgid "**What is stored in the database**: like ``ArrayData``"
msgstr ""

#: ../../source/datatypes/index.rst:100
msgid "**What is stored in the file repository**: the array data in numpy format: cells over time, integer indices over time, atomic positions over time, the list of kinds, ..."
msgstr ""

#: ../../source/datatypes/index.rst:107
msgid "KpointsData"
msgstr ""

#: ../../source/datatypes/index.rst:109
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.array.kpoints.KpointsData`"
msgstr ""

#: ../../source/datatypes/index.rst:110
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``array.kpoints``"
msgstr ""

#: ../../source/datatypes/index.rst:111
msgid "**Aim**: store grids of k-points (in reciprocal space, for crystal structures), or explicit list of k-points (optionally with a weight associated to each one). Can also associate labels to (some of the) points, which is very useful for later plottings band structures (and store them in ``BandsData`` objects)."
msgstr ""

#: ../../source/datatypes/index.rst:119
msgid ":ref:`Automatically compute k-points path given a crystal structure<AutomaticKpoints>`"
msgstr ""

#: ../../source/datatypes/index.rst:122
msgid "BandsData"
msgstr ""

#: ../../source/datatypes/index.rst:124
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.array.bands.BandsData`"
msgstr ""

#: ../../source/datatypes/index.rst:125
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``array.bands``"
msgstr ""

#: ../../source/datatypes/index.rst:126
msgid "**Aim**: store electronic structure bands (of phonon bands)"
msgstr ""

#: ../../source/datatypes/index.rst:131
msgid ":ref:`Export to a number of formats (xmgrace, gnuplot, png, pdf, ...)<ExportDataNodes>`"
msgstr ""

#: ../../source/datatypes/index.rst:134
msgid "XyData"
msgstr ""

#: ../../source/datatypes/index.rst:136
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.array.xy.XyData`"
msgstr ""

#: ../../source/datatypes/index.rst:137
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``array.xy``"
msgstr ""

#: ../../source/datatypes/index.rst:138
msgid "**Aim**: store data for a 2D (xy) plot"
msgstr ""

#: ../../source/datatypes/index.rst:143
msgid "FolderData"
msgstr ""

#: ../../source/datatypes/index.rst:145
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.folder.FolderData`"
msgstr ""

#: ../../source/datatypes/index.rst:146
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``folder``"
msgstr ""

#: ../../source/datatypes/index.rst:147
msgid "**Aim**: store a set of files/folders (with possibly a folder/subfolder structure)"
msgstr ""

#: ../../source/datatypes/index.rst:148
msgid "**What is stored in the database**: ---"
msgstr ""

#: ../../source/datatypes/index.rst:149
msgid "**What is stored in the file repository**: all files and folders"
msgstr ""

#: ../../source/datatypes/index.rst:152
msgid "SinglefileData"
msgstr ""

#: ../../source/datatypes/index.rst:153
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.singlefile.SinglefileData`"
msgstr ""

#: ../../source/datatypes/index.rst:154
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``singlefile``"
msgstr ""

#: ../../source/datatypes/index.rst:155
msgid "**Aim**: the same as ``FolderData``, but allows to store only one single file."
msgstr ""

#: ../../source/datatypes/index.rst:156
msgid "**What is stored in the database**: the filename"
msgstr ""

#: ../../source/datatypes/index.rst:157
msgid "**What is stored in the file repository**: the file"
msgstr ""

#: ../../source/datatypes/index.rst:160
msgid "RemoteData"
msgstr ""

#: ../../source/datatypes/index.rst:162
msgid "**Class**: :py:class:`~aiida.orm.nodes.data.remote.RemoteData`"
msgstr ""

#: ../../source/datatypes/index.rst:163
msgid "**String to pass to the** :py:func:`~aiida.plugins.factories.DataFactory`: ``remote``"
msgstr ""

#: ../../source/datatypes/index.rst:164
msgid "**Aim**: this basically represents a \"symbolic link\" to a specific folder on a remote computer. Its main use is to allow users to persist the provenance when e.g. a calculation produces data in a raw/scratch folder, and the whole folder needs to be provided to restart/continue."
msgstr ""

#: ../../source/datatypes/index.rst:169
msgid "**What is stored in the database**: the path of the folder (and the remote computer as a `.computer` property, not as an attribute)"
msgstr ""

