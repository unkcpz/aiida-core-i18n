# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/datatypes/bands.rst:4
msgid "BandsData"
msgstr ""

#: ../../source/datatypes/bands.rst:6
msgid "``BandsData`` object is dedicated to store bands object of different types (electronic bands, phonons). In this section we describe the usage of the ``BandsData`` to store the (part of) electronic band structure of silicon and some logic behind its methods."
msgstr ""

#: ../../source/datatypes/bands.rst:11
msgid "To start working with ``BandsData`` we should import it using the ``DataFactory`` and create an object of type ``BandsData``::"
msgstr ""

#: ../../source/datatypes/bands.rst:18
msgid "To import the bands we need to make sure to have two arrays: one containing kpoints and another containing bands. The shape of the kpoints object should be ``nkpoints * 3``, while the shape of the bands should be ``nkpoints * nstates``. Let's assume the number of kpoints is 12, and the number of states is 5. So the kpoints and the bands array will look as follows::"
msgstr ""

#: ../../source/datatypes/bands.rst:51
msgid "To insert kpoints and bands in the ``bs`` object we should employ ``set_kpoints()`` and ``set_bands()`` methods::"
msgstr ""

#: ../../source/datatypes/bands.rst:59
msgid "From now the band structure can be visualized. Last thing that we may want to add is the array of kpoint labels::"
msgstr ""

#: ../../source/datatypes/bands.rst:70
msgid "The resulting band structure will look as follows"
msgstr ""

#: ../../source/datatypes/bands.rst:74
msgid "Once the ``bs`` object is stored (``bs.store()``) -- it won't accept any modifications."
msgstr ""

#: ../../source/datatypes/bands.rst:79
msgid "Plotting the band structure"
msgstr ""

#: ../../source/datatypes/bands.rst:81
msgid "You may notice that depending on how you assign the kpoints labels the output of the ``show_mpl()`` method looks different. Please compare::"
msgstr ""

#: ../../source/datatypes/bands.rst:96
msgid "In the first case two neighboring kpoints with ``X`` and ``Y`` labels will look like ``X|Y``, while in the second case they will be separated by a certain distance. The logic behind such a difference is the following. In the first case the plotting method discovers the two neighboring kpoints and assumes them to be a discontinuity point in the band structure (e.g. Gamma-X|Y-U). In the second case the kpoints labelled ``X`` and ``Y`` are not neighbors anymore, so they are plotted with a certain distance between them. The intervals between the kpoints on the X axis are proportional to the cartesian distance between them."
msgstr ""

#: ../../source/datatypes/bands.rst:106
msgid "Dealing with spins"
msgstr ""

#: ../../source/datatypes/bands.rst:108
msgid "The ``BandsData`` object can also deal with the results of spin-polarized calculations. Two provide different bands for two different spins you should just merge them in one array and import them again using the ``set_bands()`` method::"
msgstr ""

#: ../../source/datatypes/bands.rst:116
msgid "Now the shape of the bands array becomes ``nspins * nkpoints * nstates``"
msgstr ""

