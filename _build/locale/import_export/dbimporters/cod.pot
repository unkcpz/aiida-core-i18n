# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-15 13:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/import_export/dbimporters/cod.rst:2
msgid "COD database importer"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:4
msgid "COD database importer is used to import crystal structures from the `Crystallography Open Database`_ (COD) to AiiDA."
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:8
msgid "Setup"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:10
msgid "An instance of :py:class:`CodDbImporter <aiida.tools.dbimporters.plugins.cod.CodDbImporter>` is created as follows::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:17
msgid "No additional parameters are required for standard queries on the main COD server."
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:21
msgid "How to do a query"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:23
msgid "A search is initiated by supplying query statements using ``keyword=value`` syntax::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:28
msgid "List of possible keywords can be listed using::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:32
msgid "Values for the most of the keywords can be list. In that case the query will return entries, that match any of the values (binary `OR`) from the list. Moreover, in the case of multiple keywords, entries, that match all the conditions imposed by the keywords, will be returned (binary `AND`)."
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:37
msgid "Example::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:42
msgid "is equivalent to the following SQL statement::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:48
msgid "A query returns an instance of :py:class:`CodSearchResults <aiida.tools.dbimporters.plugins.cod.CodSearchResults>`, which can be used in a same way as a list of :py:class:`CodEntry <aiida.tools.dbimporters.plugins.cod.CodEntry>` instances::"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:59
msgid "Using data from :py:class:`CodEntry <aiida.tools.dbimporters.plugins.cod.CodEntry>`"
msgstr ""

#: ../../source/import_export/dbimporters/cod.rst:61
msgid ":py:class:`CodEntry <aiida.tools.dbimporters.plugins.cod.CodEntry>` has a few functions to access the contents of it's instances::"
msgstr ""

